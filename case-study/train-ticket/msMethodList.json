[{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Basic Service ] !\";\n    }","returnType":"String","methodName":"home","className":"BasicController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.BasicController.home","classId":"fdse.microservice.controller.BasicController","line":24,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/basic/travel\")\n    public HttpEntity queryForTravel(@RequestBody Travel info, @RequestHeader HttpHeaders headers) {\n        // TravelResult\n        return ok(service.queryForTravel(info, headers));\n    }","returnType":"HttpEntity","methodName":"queryForTravel","className":"BasicController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.BasicController.queryForTravel","classId":"fdse.microservice.controller.BasicController","line":29,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/basic/travel\""}]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/basic/{stationName}\")\n    public HttpEntity queryForStationId(@PathVariable String stationName, @RequestHeader HttpHeaders headers) {\n        // String id\n        return ok(service.queryForStationId(stationName, headers));\n    }","returnType":"HttpEntity","methodName":"queryForStationId","className":"BasicController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.BasicController.queryForStationId","classId":"fdse.microservice.controller.BasicController","line":35,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/basic/{stationName}\""}]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForTravel(Travel info, HttpHeaders headers) {\n\n        Response response \u003d new Response\u003c\u003e();\n        TravelResult result \u003d new TravelResult();\n        result.setStatus(true);\n        response.setStatus(1);\n        response.setMsg(\"Success\");\n        boolean startingPlaceExist \u003d checkStationExists(info.getStartingPlace(), headers);\n        boolean endPlaceExist \u003d checkStationExists(info.getEndPlace(), headers);\n        if (!startingPlaceExist || !endPlaceExist) {\n            result.setStatus(false);\n            response.setStatus(0);\n            response.setMsg(\"Start place or end place not exist!\");\n        }\n\n        TrainType trainType \u003d queryTrainType(info.getTrip().getTrainTypeId(), headers);\n        if (trainType \u003d\u003d null) {\n            BasicServiceImpl.LOGGER.info(\"traintype doesn\u0027t exist\");\n            result.setStatus(false);\n            response.setStatus(0);\n            response.setMsg(\"Train type doesn\u0027t exist\");\n        } else {\n            result.setTrainType(trainType);\n        }\n\n        String routeId \u003d info.getTrip().getRouteId();\n        String trainTypeString \u003d \"\";\n        if (trainType !\u003d null){\n            trainTypeString \u003d trainType.getId();\n        }\n        Route route \u003d getRouteByRouteId(routeId, headers);\n        PriceConfig priceConfig \u003d queryPriceConfigByRouteIdAndTrainType(routeId, trainTypeString, headers);\n\n        String startingPlaceId \u003d (String) queryForStationId(info.getStartingPlace(), headers).getData();\n        String endPlaceId \u003d (String) queryForStationId(info.getEndPlace(), headers).getData();\n\n        LOGGER.info(\"startingPlaceId : \" + startingPlaceId + \"endPlaceId : \" + endPlaceId);\n\n        int indexStart \u003d 0;\n        int indexEnd \u003d 0;\n        if (route !\u003d null) {\n            indexStart \u003d route.getStations().indexOf(startingPlaceId);\n            indexEnd \u003d route.getStations().indexOf(endPlaceId);\n        }\n\n        LOGGER.info(\"indexStart : \" + indexStart + \" __ \" + \"indexEnd : \" + indexEnd);\n        if (route !\u003d null){\n            LOGGER.info(\"route.getDistances().size : \" + route.getDistances().size());\n        }\n        HashMap\u003cString, String\u003e prices \u003d new HashMap\u003c\u003e();\n        try {\n            int distance \u003d 0;\n            if (route !\u003d null){\n                distance \u003d route.getDistances().get(indexEnd) - route.getDistances().get(indexStart);\n            }\n\n            /**\n             * We need the price Rate and distance (starting station).\n             */\n            double priceForEconomyClass \u003d distance * priceConfig.getBasicPriceRate();\n            double priceForConfortClass \u003d distance * priceConfig.getFirstClassPriceRate();\n            prices.put(\"economyClass\", \"\" + priceForEconomyClass);\n            prices.put(\"confortClass\", \"\" + priceForConfortClass);\n        }catch (Exception e){\n            prices.put(\"economyClass\", \"95.0\");\n            prices.put(\"confortClass\", \"120.0\");\n        }\n        result.setPrices(prices);\n        result.setPercent(1.0);\n        response.setData(result);\n        return response;\n    }","returnType":"Response","methodName":"queryForTravel","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.queryForTravel","classId":"fdse.microservice.service.BasicServiceImpl","line":29,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForStationId(String stationName, HttpHeaders headers) {\n        BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Query For Station Id] Station Id: {}\", stationName);\n        HttpEntity requestEntity \u003d new HttpEntity( headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        return  re.getBody();\n    }","returnType":"Response","methodName":"queryForStationId","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.queryForStationId","classId":"fdse.microservice.service.BasicServiceImpl","line":104,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"public boolean checkStationExists(String stationName, HttpHeaders headers) {\n        BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Check Station Exists] Station Name: {}\", stationName);\n        HttpEntity requestEntity \u003d new HttpEntity( headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response exist \u003d re.getBody();\n\n        return exist.getStatus() \u003d\u003d 1;\n    }","returnType":"boolean","methodName":"checkStationExists","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.checkStationExists","classId":"fdse.microservice.service.BasicServiceImpl","line":116,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"public TrainType queryTrainType(String trainTypeId, HttpHeaders headers) {\n        BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Query Train Type] Train Type: {}\", trainTypeId);\n        HttpEntity requestEntity \u003d new HttpEntity( headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-train-service:14567/api/v1/trainservice/trains/\" + trainTypeId,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response  response \u003d re.getBody();\n\n        return JsonUtils.conveterObject(response.getData(), TrainType.class);\n    }","returnType":"TrainType","methodName":"queryTrainType","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.queryTrainType","classId":"fdse.microservice.service.BasicServiceImpl","line":129,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"private Route getRouteByRouteId(String routeId, HttpHeaders headers) {\n        BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Get Route By Id] Route ID：{}\", routeId);\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response result \u003d re.getBody();\n        if ( result.getStatus() \u003d\u003d 0) {\n            BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Get Route By Id] Fail. {}\", result.getMsg());\n            return null;\n        } else {\n            BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Get Route By Id] Success.\");\n            return JsonUtils.conveterObject(result.getData(), Route.class);\n        }\n    }","returnType":"Route","methodName":"getRouteByRouteId","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.getRouteByRouteId","classId":"fdse.microservice.service.BasicServiceImpl","line":142,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java","directoryName":""},"code":"private PriceConfig queryPriceConfigByRouteIdAndTrainType(String routeId, String trainType, HttpHeaders headers) {\n        BasicServiceImpl.LOGGER.info(\"[Basic Information Service][Query For Price Config] RouteId: {} ,TrainType: {}\", routeId, trainType);\n        HttpEntity requestEntity \u003d new HttpEntity(null, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-price-service:16579/api/v1/priceservice/prices/\" + routeId + \"/\" + trainType,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response result \u003d re.getBody();\n\n        BasicServiceImpl.LOGGER.info(\"Response Resutl to String {}\", result.toString());\n        return  JsonUtils.conveterObject(result.getData(), PriceConfig.class);\n    }","returnType":"PriceConfig","methodName":"queryPriceConfigByRouteIdAndTrainType","className":"BasicServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType","classId":"fdse.microservice.service.BasicServiceImpl","line":160,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicService.java","directoryName":""},"code":"Response queryForTravel(Travel info, HttpHeaders headers);","returnType":"Response","methodName":"queryForTravel","className":"BasicService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicService.queryForTravel","classId":"fdse.microservice.service.BasicService","line":20,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-basic-service/src/main/java/fdse/microservice/service/BasicService.java","directoryName":""},"code":"Response queryForStationId(String stationName, HttpHeaders headers);","returnType":"Response","methodName":"queryForStationId","className":"BasicService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.BasicService.queryForStationId","classId":"fdse.microservice.service.BasicService","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ AdminTravel Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AdminTravelController","packageName":"admintravel.controller","methodId":"admintravel.controller.AdminTravelController.home","classId":"admintravel.controller.AdminTravelController","line":21,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/admintravel\")\n    public HttpEntity getAllTravels(@RequestHeader HttpHeaders headers) {\n        return ok(adminTravelService.getAllTravels(headers));\n    }","returnType":"HttpEntity","methodName":"getAllTravels","className":"AdminTravelController","packageName":"admintravel.controller","methodId":"admintravel.controller.AdminTravelController.getAllTravels","classId":"admintravel.controller.AdminTravelController","line":26,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/admintravel\""}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/admintravel\")\n    public HttpEntity addTravel(@RequestBody TravelInfo request, @RequestHeader HttpHeaders headers) {\n        return ok(adminTravelService.addTravel(request, headers));\n    }","returnType":"HttpEntity","methodName":"addTravel","className":"AdminTravelController","packageName":"admintravel.controller","methodId":"admintravel.controller.AdminTravelController.addTravel","classId":"admintravel.controller.AdminTravelController","line":32,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/admintravel\""}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java","directoryName":""},"code":"@PutMapping(value \u003d \"/admintravel\")\n    public HttpEntity updateTravel(@RequestBody TravelInfo request, @RequestHeader HttpHeaders headers) {\n        return ok(adminTravelService.updateTravel(request, headers));\n    }","returnType":"HttpEntity","methodName":"updateTravel","className":"AdminTravelController","packageName":"admintravel.controller","methodId":"admintravel.controller.AdminTravelController.updateTravel","classId":"admintravel.controller.AdminTravelController","line":37,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/admintravel\""}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/admintravel/{tripId}\")\n    public HttpEntity deleteTravel(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        return ok(adminTravelService.deleteTravel(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteTravel","className":"AdminTravelController","packageName":"admintravel.controller","methodId":"admintravel.controller.AdminTravelController.deleteTravel","classId":"admintravel.controller.AdminTravelController","line":42,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/admintravel/{tripId}\""}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllTravels(HttpHeaders headers) {\n        Response\u003cArrayList\u003cAdminTrip\u003e\u003e result;\n        ArrayList\u003cAdminTrip\u003e trips \u003d new ArrayList\u003c\u003e();\n\n        AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Get All Travels]\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/admin_trip\",\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e() {\n                });\n        result \u003d re.getBody();\n\n        if (result.getStatus() \u003d\u003d 1) {\n            ArrayList\u003cAdminTrip\u003e adminTrips \u003d result.getData();\n            AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Get Travel From ts-travel-service successfully!]\");\n            trips.addAll(adminTrips);\n        } else {\n            AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Get Travel From ts-travel-service fail!]\");\n        }\n\n        HttpEntity requestEntity2 \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e re2 \u003d restTemplate.exchange(\n                \"http://ts-travel2-service:16346/api/v1/travel2service/admin_trip\",\n                HttpMethod.GET,\n                requestEntity2,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e() {\n                });\n        result \u003d re2.getBody();\n\n        if (result.getStatus() \u003d\u003d 1) {\n            AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Get Travel From ts-travel2-service successfully!]\");\n            ArrayList\u003cAdminTrip\u003e adminTrips \u003d result.getData();\n            trips.addAll(adminTrips);\n        } else {\n            AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Get Travel From ts-travel2-service fail!]\");\n        }\n        result.setData(trips);\n\n        return result;\n    }","returnType":"Response","methodName":"getAllTravels","className":"AdminTravelServiceImpl","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelServiceImpl.getAllTravels","classId":"admintravel.service.AdminTravelServiceImpl","line":29,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addTravel(TravelInfo request, HttpHeaders headers) {\n        Response resultResponse;\n        String requestUrl;\n        if (request.getTrainTypeId().charAt(0) \u003d\u003d \u0027G\u0027 || request.getTrainTypeId().charAt(0) \u003d\u003d \u0027D\u0027) {\n            requestUrl \u003d \"http://ts-travel-service:12346/api/v1/travelservice/trips\";\n        } else {\n            requestUrl \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/trips\";\n        }\n        HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        resultResponse \u003d re.getBody();\n\n        if (resultResponse.getStatus() \u003d\u003d 1) {\n            AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Admin add new travel]\");\n            return new Response\u003c\u003e(1, \"[Admin Travel Service][Admin add new travel]\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"Admin add new travel failed\", null);\n        }\n    }","returnType":"Response","methodName":"addTravel","className":"AdminTravelServiceImpl","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelServiceImpl.addTravel","classId":"admintravel.service.AdminTravelServiceImpl","line":73,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateTravel(TravelInfo request, HttpHeaders headers) {\n        Response result;\n\n        String requestUrl \u003d \"\";\n        if (request.getTrainTypeId().charAt(0) \u003d\u003d \u0027G\u0027 || request.getTrainTypeId().charAt(0) \u003d\u003d \u0027D\u0027) {\n            requestUrl \u003d \"http://ts-travel-service:12346/api/v1/travelservice/trips\";\n        } else {\n            requestUrl \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/trips\";\n        }\n        HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        AdminTravelServiceImpl.LOGGER.info(\"[Admin Travel Service][Admin update travel]\");\n        return result;\n    }","returnType":"Response","methodName":"updateTravel","className":"AdminTravelServiceImpl","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelServiceImpl.updateTravel","classId":"admintravel.service.AdminTravelServiceImpl","line":98,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteTravel(String tripId, HttpHeaders headers) {\n\n        Response result;\n        String requestUtl \u003d \"\";\n        if (tripId.charAt(0) \u003d\u003d \u0027G\u0027 || tripId.charAt(0) \u003d\u003d \u0027D\u0027) {\n            requestUtl \u003d \"http://ts-travel-service:12346/api/v1/travelservice/trips/\" + tripId;\n        } else {\n            requestUtl \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/trips/\" + tripId;\n        }\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                requestUtl,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n    }","returnType":"Response","methodName":"deleteTravel","className":"AdminTravelServiceImpl","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelServiceImpl.deleteTravel","classId":"admintravel.service.AdminTravelServiceImpl","line":119,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelService.java","directoryName":""},"code":"Response getAllTravels(  HttpHeaders headers);","returnType":"Response","methodName":"getAllTravels","className":"AdminTravelService","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelService.getAllTravels","classId":"admintravel.service.AdminTravelService","line":18,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelService.java","directoryName":""},"code":"Response addTravel(TravelInfo request, HttpHeaders headers);","returnType":"Response","methodName":"addTravel","className":"AdminTravelService","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelService.addTravel","classId":"admintravel.service.AdminTravelService","line":27,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelService.java","directoryName":""},"code":"Response updateTravel(TravelInfo request, HttpHeaders headers);","returnType":"Response","methodName":"updateTravel","className":"AdminTravelService","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelService.updateTravel","classId":"admintravel.service.AdminTravelService","line":36,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelService.java","directoryName":""},"code":"Response deleteTravel(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"deleteTravel","className":"AdminTravelService","packageName":"admintravel.service","methodId":"admintravel.service.AdminTravelService.deleteTravel","classId":"admintravel.service.AdminTravelService","line":45,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/trains/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Train Service ] !\";\n    }","returnType":"String","methodName":"home","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.home","classId":"train.controller.TrainController","line":24,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/trains/welcome\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trains\")\n    public HttpEntity create(@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers) {\n        boolean isCreateSuccess \u003d trainService.create(trainType, headers);\n        if (isCreateSuccess) {\n            return ok(new Response(1, \"create success\", null));\n        } else {\n            return ok(new Response(0, \"train type already exist\", trainType));\n        }\n    }","returnType":"HttpEntity","methodName":"create","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.create","classId":"train.controller.TrainController","line":29,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trains\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trains/{id}\")\n    public HttpEntity retrieve(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        TrainType trainType \u003d trainService.retrieve(id, headers);\n        if (trainType \u003d\u003d null) {\n            return ok(new Response(0, \"here is no TrainType with the trainType id: \" + id, null));\n        } else {\n            return ok(new Response(1, \"success\", trainType));\n        }\n    }","returnType":"HttpEntity","methodName":"retrieve","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.retrieve","classId":"train.controller.TrainController","line":40,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trains/{id}\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(value \u003d \"/trains\")\n    public HttpEntity update(@RequestBody TrainType trainType, @RequestHeader HttpHeaders headers) {\n        boolean isUpdateSuccess \u003d trainService.update(trainType, headers);\n        if (isUpdateSuccess) {\n            return ok(new Response(1, \"update success\", isUpdateSuccess));\n        } else {\n            return ok(new Response(0, \"there is no trainType with the trainType id\", isUpdateSuccess));\n        }\n    }","returnType":"HttpEntity","methodName":"update","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.update","classId":"train.controller.TrainController","line":51,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/trains\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(value \u003d \"/trains/{id}\")\n    public HttpEntity delete(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        boolean isDeleteSuccess \u003d trainService.delete(id, headers);\n        if (isDeleteSuccess) {\n            return ok(new Response(1, \"delete success\", isDeleteSuccess));\n        } else {\n            return ok(new Response(0, \"there is no train according to id\", null));\n        }\n    }","returnType":"HttpEntity","methodName":"delete","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.delete","classId":"train.controller.TrainController","line":62,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/trains/{id}\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/controller/TrainController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trains\")\n    public HttpEntity query(@RequestHeader HttpHeaders headers) {\n        List\u003cTrainType\u003e trainTypes \u003d trainService.query(headers);\n        if (trainTypes !\u003d null \u0026\u0026 !trainTypes.isEmpty()) {\n            return ok(new Response(1, \"success\", trainTypes));\n        } else {\n            return ok(new Response(0, \"no content\", trainTypes));\n        }\n    }","returnType":"HttpEntity","methodName":"query","className":"TrainController","packageName":"train.controller","methodId":"train.controller.TrainController.query","classId":"train.controller.TrainController","line":73,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trains\""}]},{"msId":{"path":"/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java","directoryName":""},"code":"TrainType findById(String id);","returnType":"TrainType","methodName":"findById","className":"TrainTypeRepository","packageName":"train.repository","methodId":"train.repository.TrainTypeRepository.findById","classId":"train.repository.TrainTypeRepository","line":11,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java","directoryName":""},"code":"@Override\n    List\u003cTrainType\u003e findAll();","returnType":"List\u003cTrainType\u003e","methodName":"findAll","className":"TrainTypeRepository","packageName":"train.repository","methodId":"train.repository.TrainTypeRepository.findAll","classId":"train.repository.TrainTypeRepository","line":12,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java","directoryName":""},"code":"void deleteById(String id);","returnType":"void","methodName":"deleteById","className":"TrainTypeRepository","packageName":"train.repository","methodId":"train.repository.TrainTypeRepository.deleteById","classId":"train.repository.TrainTypeRepository","line":14,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainService.java","directoryName":""},"code":"boolean create(TrainType trainType, HttpHeaders headers);","returnType":"boolean","methodName":"create","className":"TrainService","packageName":"train.service","methodId":"train.service.TrainService.create","classId":"train.service.TrainService","line":10,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainService.java","directoryName":""},"code":"TrainType retrieve(String id,HttpHeaders headers);","returnType":"TrainType","methodName":"retrieve","className":"TrainService","packageName":"train.service","methodId":"train.service.TrainService.retrieve","classId":"train.service.TrainService","line":12,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainService.java","directoryName":""},"code":"boolean update(TrainType trainType,HttpHeaders headers);","returnType":"boolean","methodName":"update","className":"TrainService","packageName":"train.service","methodId":"train.service.TrainService.update","classId":"train.service.TrainService","line":14,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainService.java","directoryName":""},"code":"boolean delete(String id,HttpHeaders headers);","returnType":"boolean","methodName":"delete","className":"TrainService","packageName":"train.service","methodId":"train.service.TrainService.delete","classId":"train.service.TrainService","line":16,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainService.java","directoryName":""},"code":"List\u003cTrainType\u003e query(HttpHeaders headers);","returnType":"List\u003cTrainType\u003e","methodName":"query","className":"TrainService","packageName":"train.service","methodId":"train.service.TrainService.query","classId":"train.service.TrainService","line":18,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean create(TrainType trainType, HttpHeaders headers) {\n        boolean result \u003d false;\n        if (repository.findById(trainType.getId()) \u003d\u003d null) {\n            TrainType type \u003d new TrainType(trainType.getId(), trainType.getEconomyClass(), trainType.getConfortClass());\n            type.setAverageSpeed(trainType.getAverageSpeed());\n            repository.save(type);\n            result \u003d true;\n        }\n        return result;\n    }","returnType":"boolean","methodName":"create","className":"TrainServiceImpl","packageName":"train.service","methodId":"train.service.TrainServiceImpl.create","classId":"train.service.TrainServiceImpl","line":18,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainServiceImpl.java","directoryName":""},"code":"@Override\n    public TrainType retrieve(String id, HttpHeaders headers) {\n        if (repository.findById(id) \u003d\u003d null) {\n            return null;\n        } else {\n            return repository.findById(id);\n        }\n    }","returnType":"TrainType","methodName":"retrieve","className":"TrainServiceImpl","packageName":"train.service","methodId":"train.service.TrainServiceImpl.retrieve","classId":"train.service.TrainServiceImpl","line":30,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean update(TrainType trainType, HttpHeaders headers) {\n        boolean result \u003d false;\n        if (repository.findById(trainType.getId()) !\u003d null) {\n            TrainType type \u003d new TrainType(trainType.getId(), trainType.getEconomyClass(), trainType.getConfortClass());\n            type.setAverageSpeed(trainType.getAverageSpeed());\n            repository.save(type);\n            result \u003d true;\n        }\n        return result;\n    }","returnType":"boolean","methodName":"update","className":"TrainServiceImpl","packageName":"train.service","methodId":"train.service.TrainServiceImpl.update","classId":"train.service.TrainServiceImpl","line":39,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean delete(String id, HttpHeaders headers) {\n        boolean result \u003d false;\n        if (repository.findById(id) !\u003d null) {\n            repository.deleteById(id);\n            result \u003d true;\n        }\n        return result;\n    }","returnType":"boolean","methodName":"delete","className":"TrainServiceImpl","packageName":"train.service","methodId":"train.service.TrainServiceImpl.delete","classId":"train.service.TrainServiceImpl","line":51,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-train-service/src/main/java/train/service/TrainServiceImpl.java","directoryName":""},"code":"@Override\n    public List\u003cTrainType\u003e query(HttpHeaders headers) {\n        return repository.findAll();\n    }","returnType":"List\u003cTrainType\u003e","methodName":"query","className":"TrainServiceImpl","packageName":"train.service","methodId":"train.service.TrainServiceImpl.query","classId":"train.service.TrainServiceImpl","line":61,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ PreserveOther Service ] !\";\n    }","returnType":"String","methodName":"home","className":"PreserveOtherController","packageName":"preserveOther.controller","methodId":"preserveOther.controller.PreserveOtherController.home","classId":"preserveOther.controller.PreserveOtherController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/preserveOther\")\n    public HttpEntity preserve(@RequestBody OrderTicketsInfo oti,\n                               @RequestHeader HttpHeaders headers) {\n        PreserveOtherController.LOGGER.info(\"[Preserve Other Service][Preserve] Account  order from {} -----\u003e {} at {}\", oti.getFrom(), oti.getTo(), oti.getDate());\n        return ok(preserveService.preserve(oti, headers));\n    }","returnType":"HttpEntity","methodName":"preserve","className":"PreserveOtherController","packageName":"preserveOther.controller","methodId":"preserveOther.controller.PreserveOtherController.preserve","classId":"preserveOther.controller.PreserveOtherController","line":31,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/preserveOther\""}]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response preserve(OrderTicketsInfo oti, HttpHeaders httpHeaders) {\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Verify Login] Success\");\n        //1.detect ticket scalper\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security\");\n\n        Response result \u003d checkSecurity(oti.getAccountId(), httpHeaders);\n\n        if (result.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Fail. Return soon.\");\n            return new Response\u003c\u003e(0, result.getMsg(), null);\n        }\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Complete. \");\n        //2.Querying contact information -- modification, mediated by the underlying information micro service\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 2] Find contacts\");\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 2] Contacts Id: {}\", oti.getContactsId());\n\n        Response\u003cContacts\u003e gcr \u003d getContactsById(oti.getContactsId(), httpHeaders);\n        if (gcr.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Get Contacts] Fail. {}\", gcr.getMsg());\n            return new Response\u003c\u003e(0, gcr.getMsg(), null);\n        }\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Step 2] Complete\");\n        //3.Check the info of train and the number of remaining tickets\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] Check tickets num\");\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n\n        gtdi.setFrom(oti.getFrom());\n        gtdi.setTo(oti.getTo());\n\n        gtdi.setTravelDate(oti.getDate());\n        gtdi.setTripId(oti.getTripId());\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] TripId: {}\", oti.getTripId());\n        Response\u003cTripAllDetail\u003e response \u003d getTripAllDetailInformation(gtdi, httpHeaders);\n        TripAllDetail gtdr \u003d response.getData();\n        LOGGER.info(\"TripAllDetail : \" + gtdr.toString());\n        if (response.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Search For Trip Detail Information] {}\", response.getMsg());\n            return new Response\u003c\u003e(0, response.getMsg(), null);\n        } else {\n            TripResponse tripResponse \u003d gtdr.getTripResponse();\n            LOGGER.info(\"TripResponse : \" + tripResponse.toString());\n            if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                if (tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            } else {\n                if (tripResponse.getEconomyClass() \u003d\u003d SeatClass.SECONDCLASS.getCode() \u0026\u0026 tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is Not enough] \");\n                    return new Response\u003c\u003e(0, \"Check Seat Not Enough\", null);\n                }\n            }\n        }\n        Trip trip \u003d gtdr.getTrip();\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] Tickets Enough\");\n        //4.send the order request and set the order information\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 4] Do Order\");\n        Contacts contacts \u003d gcr.getData();\n        Order order \u003d new Order();\n        UUID orderId \u003d UUID.randomUUID();\n        order.setId(orderId);\n        order.setTrainNumber(oti.getTripId());\n        order.setAccountId(UUID.fromString(oti.getAccountId()));\n\n        String fromStationId \u003d queryForStationId(oti.getFrom(), httpHeaders);\n        String toStationId \u003d queryForStationId(oti.getTo(), httpHeaders);\n\n        order.setFrom(fromStationId);\n        order.setTo(toStationId);\n        order.setBoughtDate(new Date());\n        order.setStatus(OrderStatus.NOTPAID.getCode());\n        order.setContactsDocumentNumber(contacts.getDocumentNumber());\n        order.setContactsName(contacts.getName());\n        order.setDocumentType(contacts.getDocumentType());\n\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(oti.getFrom());\n        query.setEndPlace(oti.getTo());\n        query.setDepartureTime(new Date());\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTravelResult\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                });\n        TravelResult resultForTravel \u003d re.getBody().getData();\n\n        order.setSeatClass(oti.getSeatType());\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Order] Order Travel Date: {}\", oti.getDate().toString());\n        order.setTravelDate(oti.getDate());\n        order.setTravelTime(gtdr.getTripResponse().getStartingTime());\n\n        //Dispatch the seat\n        if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.FIRSTCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.FIRSTCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setPrice(resultForTravel.getPrices().get(\"confortClass\"));\n        } else {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.SECONDCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.SECONDCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n\n            order.setPrice(resultForTravel.getPrices().get(\"economyClass\"));\n        }\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Order Price] Price is: {}\", order.getPrice());\n\n        Response\u003cOrder\u003e cor \u003d createOrder(order, httpHeaders);\n        if (cor.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Create Order Fail] Create Order Fail.  Reason: {}\", cor.getMsg());\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 4] Do Order Complete\");\n        Response returnResponse \u003d new Response\u003c\u003e(1, \"Success.\", cor.getMsg());\n        //5.Check insurance options\n        if (oti.getAssurance() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Do not need to buy assurance\");\n        } else {\n            Response\u003cAssurance\u003e addAssuranceResult \u003d addAssuranceForOrder(\n                    oti.getAssurance(), cor.getData().getId().toString(), httpHeaders);\n            if (addAssuranceResult.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Preserve Buy Assurance Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Assurance Fail.\");\n            }\n        }\n\n        //6.Increase the food order\n        if (oti.getFoodType() !\u003d 0) {\n            FoodOrder foodOrder \u003d new FoodOrder();\n            foodOrder.setOrderId(cor.getData().getId());\n            foodOrder.setFoodType(oti.getFoodType());\n            foodOrder.setFoodName(oti.getFoodName());\n            foodOrder.setPrice(oti.getFoodPrice());\n            if (oti.getFoodType() \u003d\u003d 2) {\n                foodOrder.setStationName(oti.getStationName());\n                foodOrder.setStoreName(oti.getStoreName());\n            }\n            Response afor \u003d createFoodOrder(foodOrder, httpHeaders);\n            if (afor.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Food Fail.\");\n            }\n        } else {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Do not need to buy food\");\n        }\n\n        //7.add consign\n        if (null !\u003d oti.getConsigneeName() \u0026\u0026 !\"\".equals(oti.getConsigneeName())) {\n            Consign consignRequest \u003d new Consign();\n            consignRequest.setOrderId(cor.getData().getId());\n            consignRequest.setAccountId(cor.getData().getAccountId());\n            consignRequest.setHandleDate(oti.getHandleDate());\n            consignRequest.setTargetDate(cor.getData().getTravelDate().toString());\n            consignRequest.setFrom(cor.getData().getFrom());\n            consignRequest.setTo(cor.getData().getTo());\n            consignRequest.setConsignee(oti.getConsigneeName());\n            consignRequest.setPhone(oti.getConsigneePhone());\n            consignRequest.setWeight(oti.getConsigneeWeight());\n            consignRequest.setWithin(oti.isWithin());\n            LOGGER.info(\"CONSIGN INFO : \" + consignRequest.toString());\n            Response icresult \u003d createConsign(consignRequest, httpHeaders);\n            if (icresult.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Preserve Consign Fail.\");\n                returnResponse.setMsg(\"Consign Fail.\");\n            }\n        } else {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Do not need to consign\");\n        }\n\n        //8.send notification\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service]\");\n\n        User getUser \u003d getAccount(order.getAccountId().toString(), httpHeaders);\n\n        NotifyInfo notifyInfo \u003d new NotifyInfo();\n        notifyInfo.setDate(new Date().toString());\n\n        notifyInfo.setEmail(getUser.getEmail());\n        notifyInfo.setStartingPlace(order.getFrom());\n        notifyInfo.setEndPlace(order.getTo());\n        notifyInfo.setUsername(getUser.getUserName());\n        notifyInfo.setSeatNumber(order.getSeatNumber());\n        notifyInfo.setOrderNumber(order.getId().toString());\n        notifyInfo.setPrice(order.getPrice());\n        notifyInfo.setSeatClass(SeatClass.getNameByCode(order.getSeatClass()));\n        notifyInfo.setStartingTime(order.getTravelTime().toString());\n\n        sendEmail(notifyInfo, httpHeaders);\n\n        return returnResponse;\n    }","returnType":"Response","methodName":"preserve","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.preserve","classId":"preserveOther.service.PreserveOtherServiceImpl","line":30,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"public Ticket dipatchSeat(Date date, String tripId, String startStationId, String endStataionId, int seatType, HttpHeaders httpHeaders) {\n        Seat seatRequest \u003d new Seat();\n        seatRequest.setTravelDate(date);\n        seatRequest.setTrainNumber(tripId);\n        seatRequest.setStartStation(startStationId);\n        seatRequest.setSeatType(seatType);\n        seatRequest.setDestStation(endStataionId);\n\n        HttpEntity requestEntityTicket \u003d new HttpEntity(seatRequest, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTicket\u003e\u003e reTicket \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats\",\n                HttpMethod.POST,\n                requestEntityTicket,\n                new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n                });\n\n        return reTicket.getBody().getData();\n    }","returnType":"Ticket","methodName":"dipatchSeat","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.dipatchSeat","classId":"preserveOther.service.PreserveOtherServiceImpl","line":244,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"public boolean sendEmail(NotifyInfo notifyInfo, HttpHeaders httpHeaders) {\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Send Email]\");\n        HttpEntity requestEntitySendEmail \u003d new HttpEntity(notifyInfo, httpHeaders);\n        ResponseEntity\u003cBoolean\u003e reSendEmail \u003d restTemplate.exchange(\n                \"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\",\n                HttpMethod.POST,\n                requestEntitySendEmail,\n                Boolean.class);\n\n        return reSendEmail.getBody();\n    }","returnType":"boolean","methodName":"sendEmail","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.sendEmail","classId":"preserveOther.service.PreserveOtherServiceImpl","line":263,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"public User getAccount(String accountId, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Cancel Order Service][Get Order By Id]\");\n\n        HttpEntity requestEntitySendEmail \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cUser\u003e\u003e getAccount \u003d restTemplate.exchange(\n                \"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId,\n                HttpMethod.GET,\n                requestEntitySendEmail,\n                new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n                });\n        Response\u003cUser\u003e result \u003d getAccount.getBody();\n        return result.getData();\n\n\n    }","returnType":"User","methodName":"getAccount","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.getAccount","classId":"preserveOther.service.PreserveOtherServiceImpl","line":276,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response\u003cAssurance\u003e addAssuranceForOrder(int assuranceType, String orderId, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Add Assurance Type For Order]\");\n        HttpEntity requestAddAssuranceResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cAssurance\u003e\u003e reAddAssuranceResult \u003d restTemplate.exchange(\n                \"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId,\n                HttpMethod.GET,\n                requestAddAssuranceResult,\n                new ParameterizedTypeReference\u003cResponse\u003cAssurance\u003e\u003e() {\n                });\n\n        return reAddAssuranceResult.getBody();\n    }","returnType":"Response\u003cAssurance\u003e","methodName":"addAssuranceForOrder","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder","classId":"preserveOther.service.PreserveOtherServiceImpl","line":292,"msArgumentList":[{"returnType":"int"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Station By  Name]\");\n\n\n        HttpEntity requestQueryForStationId \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e reQueryForStationId \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName,\n                HttpMethod.GET,\n                requestQueryForStationId,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n        return reQueryForStationId.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.queryForStationId","classId":"preserveOther.service.PreserveOtherServiceImpl","line":306,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response checkSecurity(String accountId, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Check Account Security] Checking....\");\n\n        HttpEntity requestCheckResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reCheckResult \u003d restTemplate.exchange(\n                \"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId,\n                HttpMethod.GET,\n                requestCheckResult,\n                Response.class);\n\n        return reCheckResult.getBody();\n    }","returnType":"Response","methodName":"checkSecurity","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.checkSecurity","classId":"preserveOther.service.PreserveOtherServiceImpl","line":320,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response\u003cTripAllDetail\u003e getTripAllDetailInformation(TripAllDetailInfo gtdi, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Trip All Detail Information] Getting....\");\n\n        HttpEntity requestGetTripAllDetailResult \u003d new HttpEntity(gtdi, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTripAllDetail\u003e\u003e reGetTripAllDetailResult \u003d restTemplate.exchange(\n                \"http://ts-travel2-service:16346/api/v1/travel2service/trip_detail\",\n                HttpMethod.POST,\n                requestGetTripAllDetailResult,\n                new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n                });\n\n        return reGetTripAllDetailResult.getBody();\n    }","returnType":"Response\u003cTripAllDetail\u003e","methodName":"getTripAllDetailInformation","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation","classId":"preserveOther.service.PreserveOtherServiceImpl","line":334,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response\u003cContacts\u003e getContactsById(String contactsId, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Contacts By Id is] Getting....\");\n\n        HttpEntity requestGetContactsResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cContacts\u003e\u003e reGetContactsResult \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId,\n                HttpMethod.GET,\n                requestGetContactsResult,\n                new ParameterizedTypeReference\u003cResponse\u003cContacts\u003e\u003e() {\n                });\n\n        return reGetContactsResult.getBody();\n    }","returnType":"Response\u003cContacts\u003e","methodName":"getContactsById","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.getContactsById","classId":"preserveOther.service.PreserveOtherServiceImpl","line":348,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e createOrder(Order coi, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Contacts By Id] Creating....\");\n\n        HttpEntity requestEntityCreateOrderResult \u003d new HttpEntity(coi, httpHeaders);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e reCreateOrderResult \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\",\n                HttpMethod.POST,\n                requestEntityCreateOrderResult,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n\n\n        return reCreateOrderResult.getBody();\n    }","returnType":"Response\u003cOrder\u003e","methodName":"createOrder","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.createOrder","classId":"preserveOther.service.PreserveOtherServiceImpl","line":362,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response createFoodOrder(FoodOrder afi, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Add Preserve food Order] Creating....\");\n\n        HttpEntity requestEntityAddFoodOrderResult \u003d new HttpEntity(afi, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reAddFoodOrderResult \u003d restTemplate.exchange(\n                \"http://ts-food-service:18856/api/v1/foodservice/orders\",\n                HttpMethod.POST,\n                requestEntityAddFoodOrderResult,\n                Response.class);\n\n        return reAddFoodOrderResult.getBody();\n    }","returnType":"Response","methodName":"createFoodOrder","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.createFoodOrder","classId":"preserveOther.service.PreserveOtherServiceImpl","line":377,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"private Response createConsign(Consign cr, HttpHeaders httpHeaders) {\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Add Condign] Creating Consign...\");\n\n        HttpEntity requestEntityResultForTravel \u003d new HttpEntity(cr, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reResultForTravel \u003d restTemplate.exchange(\n                \"http://ts-consign-service:16111/api/v1/consignservice/consigns\",\n                HttpMethod.POST,\n                requestEntityResultForTravel,\n                Response.class);\n\n\n        return reResultForTravel.getBody();\n    }","returnType":"Response","methodName":"createConsign","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.createConsign","classId":"preserveOther.service.PreserveOtherServiceImpl","line":390,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherService.java","directoryName":""},"code":"Response preserve(OrderTicketsInfo oti, HttpHeaders headers);","returnType":"Response","methodName":"preserve","className":"PreserveOtherService","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherService.preserve","classId":"preserveOther.service.PreserveOtherService","line":12,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Food Service ] !\";\n    }","returnType":"String","methodName":"home","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.home","classId":"foodsearch.controller.FoodController","line":23,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/orders\")\n    public HttpEntity findAllFoodOrder(@RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Try to Find all FoodOrder!\");\n        return ok(foodService.findAllFoodOrder(headers));\n    }","returnType":"HttpEntity","methodName":"findAllFoodOrder","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.findAllFoodOrder","classId":"foodsearch.controller.FoodController","line":28,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orders\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@PostMapping(path \u003d \"/orders\")\n    public HttpEntity createFoodOrder(@RequestBody FoodOrder addFoodOrder, @RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Try to Create a FoodOrder!\");\n        return ok(foodService.createFoodOrder(addFoodOrder, headers));\n    }","returnType":"HttpEntity","methodName":"createFoodOrder","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.createFoodOrder","classId":"foodsearch.controller.FoodController","line":34,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/orders\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@PutMapping(path \u003d \"/orders\")\n    public HttpEntity updateFoodOrder(@RequestBody FoodOrder updateFoodOrder, @RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Try to Update a FoodOrder!\");\n        return ok(foodService.updateFoodOrder(updateFoodOrder, headers));\n    }","returnType":"HttpEntity","methodName":"updateFoodOrder","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.updateFoodOrder","classId":"foodsearch.controller.FoodController","line":40,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/orders\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@ResponseStatus(HttpStatus.ACCEPTED)\n    @DeleteMapping(path \u003d \"/orders/{orderId}\")\n    public HttpEntity deleteFoodOrder(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Try to Cancel a FoodOrder!\");\n        return ok(foodService.deleteFoodOrder(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteFoodOrder","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.deleteFoodOrder","classId":"foodsearch.controller.FoodController","line":46,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"ResponseStatus"},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/orders/{orderId}\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/orders/{orderId}\")\n    public HttpEntity findFoodOrderByOrderId(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Try to Find all FoodOrder!\");\n        return ok(foodService.findByOrderId(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"findFoodOrderByOrderId","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.findFoodOrderByOrderId","classId":"foodsearch.controller.FoodController","line":53,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orders/{orderId}\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/controller/FoodController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/foods/{date}/{startStation}/{endStation}/{tripId}\")\n    public HttpEntity getAllFood(@PathVariable String date, @PathVariable String startStation,\n                                 @PathVariable String endStation, @PathVariable String tripId,\n                                 @RequestHeader HttpHeaders headers) {\n        FoodController.LOGGER.info(\"[Food Service]Get the Get Food Request!\");\n        return ok(foodService.getAllFood(date, startStation, endStation, tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getAllFood","className":"FoodController","packageName":"foodsearch.controller","methodId":"foodsearch.controller.FoodController.getAllFood","classId":"foodsearch.controller.FoodController","line":60,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/foods/{date}/{startStation}/{endStation}/{tripId}\""}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java","directoryName":""},"code":"FoodOrder findById(UUID id);","returnType":"FoodOrder","methodName":"findById","className":"FoodOrderRepository","packageName":"foodsearch.repository","methodId":"foodsearch.repository.FoodOrderRepository.findById","classId":"foodsearch.repository.FoodOrderRepository","line":14,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java","directoryName":""},"code":"@Query(\"{ \u0027orderId\u0027 : ?0 }\")\n    FoodOrder findByOrderId(UUID orderId);","returnType":"FoodOrder","methodName":"findByOrderId","className":"FoodOrderRepository","packageName":"foodsearch.repository","methodId":"foodsearch.repository.FoodOrderRepository.findByOrderId","classId":"foodsearch.repository.FoodOrderRepository","line":16,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java","directoryName":""},"code":"@Override\n    List\u003cFoodOrder\u003e findAll();","returnType":"List\u003cFoodOrder\u003e","methodName":"findAll","className":"FoodOrderRepository","packageName":"foodsearch.repository","methodId":"foodsearch.repository.FoodOrderRepository.findAll","classId":"foodsearch.repository.FoodOrderRepository","line":19,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"FoodOrderRepository","packageName":"foodsearch.repository","methodId":"foodsearch.repository.FoodOrderRepository.deleteById","classId":"foodsearch.repository.FoodOrderRepository","line":22,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java","directoryName":""},"code":"void deleteFoodOrderByOrderId(UUID id);","returnType":"void","methodName":"deleteFoodOrderByOrderId","className":"FoodOrderRepository","packageName":"foodsearch.repository","methodId":"foodsearch.repository.FoodOrderRepository.deleteFoodOrderByOrderId","classId":"foodsearch.repository.FoodOrderRepository","line":24,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response createFoodOrder(FoodOrder afoi, HttpHeaders headers);","returnType":"Response","methodName":"createFoodOrder","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.createFoodOrder","classId":"foodsearch.service.FoodService","line":10,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response deleteFoodOrder(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"deleteFoodOrder","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.deleteFoodOrder","classId":"foodsearch.service.FoodService","line":11,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response findByOrderId(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"findByOrderId","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.findByOrderId","classId":"foodsearch.service.FoodService","line":13,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response updateFoodOrder(FoodOrder updateFoodOrder, HttpHeaders headers);","returnType":"Response","methodName":"updateFoodOrder","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.updateFoodOrder","classId":"foodsearch.service.FoodService","line":15,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response findAllFoodOrder(HttpHeaders headers);","returnType":"Response","methodName":"findAllFoodOrder","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.findAllFoodOrder","classId":"foodsearch.service.FoodService","line":17,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodService.java","directoryName":""},"code":"Response getAllFood(String date, String startStation, String endStation, String tripId, HttpHeaders headers);","returnType":"Response","methodName":"getAllFood","className":"FoodService","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodService.getAllFood","classId":"foodsearch.service.FoodService","line":19,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createFoodOrder(FoodOrder addFoodOrder, HttpHeaders headers) {\n\n        FoodOrder fo \u003d foodOrderRepository.findByOrderId(addFoodOrder.getOrderId());\n        if (fo !\u003d null) {\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][AddFoodOrder] Order Id Has Existed.\");\n            return new Response\u003c\u003e(0, \"Order Id Has Existed.\", null);\n        } else {\n            fo \u003d new FoodOrder();\n            fo.setId(UUID.randomUUID());\n            fo.setOrderId(addFoodOrder.getOrderId());\n            fo.setFoodType(addFoodOrder.getFoodType());\n            if (addFoodOrder.getFoodType() \u003d\u003d 2) {\n                fo.setStationName(addFoodOrder.getStationName());\n                fo.setStoreName(addFoodOrder.getStoreName());\n            }\n            fo.setFoodName(addFoodOrder.getFoodName());\n            fo.setPrice(addFoodOrder.getPrice());\n            foodOrderRepository.save(fo);\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][AddFoodOrder] Success.\");\n            return new Response\u003c\u003e(1, success, fo);\n        }\n    }","returnType":"Response","methodName":"createFoodOrder","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.createFoodOrder","classId":"foodsearch.service.FoodServiceImpl","line":37,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteFoodOrder(String orderId, HttpHeaders headers) {\n        FoodOrder foodOrder \u003d foodOrderRepository.findByOrderId(UUID.fromString(orderId));\n        if (foodOrder \u003d\u003d null) {\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Cancel FoodOrder] Order Id Is Non-Existent.\");\n            return new Response\u003c\u003e(0, orderIdNotExist, null);\n        } else {\n            foodOrderRepository.deleteFoodOrderByOrderId(UUID.fromString(orderId));\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Cancel FoodOrder] Success.\");\n            return new Response\u003c\u003e(1, success, null);\n        }\n    }","returnType":"Response","methodName":"deleteFoodOrder","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.deleteFoodOrder","classId":"foodsearch.service.FoodServiceImpl","line":61,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findAllFoodOrder(HttpHeaders headers) {\n        List\u003cFoodOrder\u003e foodOrders \u003d foodOrderRepository.findAll();\n        if (foodOrders !\u003d null \u0026\u0026 !foodOrders.isEmpty()) {\n            return new Response\u003c\u003e(1, success, foodOrders);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content\", null);\n        }\n    }","returnType":"Response","methodName":"findAllFoodOrder","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.findAllFoodOrder","classId":"foodsearch.service.FoodServiceImpl","line":74,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateFoodOrder(FoodOrder updateFoodOrder, HttpHeaders headers) {\n        FoodOrder fo \u003d foodOrderRepository.findById(updateFoodOrder.getId());\n        if (fo \u003d\u003d null) {\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Update FoodOrder] Order Id Is Non-Existent.\");\n            return new Response\u003c\u003e(0, orderIdNotExist, null);\n        } else {\n            fo.setFoodType(updateFoodOrder.getFoodType());\n            if (updateFoodOrder.getFoodType() \u003d\u003d 1) {\n                fo.setStationName(updateFoodOrder.getStationName());\n                fo.setStoreName(updateFoodOrder.getStoreName());\n            }\n            fo.setFoodName(updateFoodOrder.getFoodName());\n            fo.setPrice(updateFoodOrder.getPrice());\n            foodOrderRepository.save(fo);\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Update FoodOrder] Success.\");\n            return new Response\u003c\u003e(1, \"Success\", fo);\n        }\n    }","returnType":"Response","methodName":"updateFoodOrder","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.updateFoodOrder","classId":"foodsearch.service.FoodServiceImpl","line":85,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findByOrderId(String orderId, HttpHeaders headers) {\n        FoodOrder fo \u003d foodOrderRepository.findByOrderId(UUID.fromString(orderId));\n        if (fo !\u003d null) {\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Find Order by id] Success.\");\n            return new Response\u003c\u003e(1, success, fo);\n        } else {\n            FoodServiceImpl.LOGGER.info(\"[Food-Service][Find Order by id] Order Id Is Non-Existent.\");\n            return new Response\u003c\u003e(0, orderIdNotExist, null);\n        }\n    }","returnType":"Response","methodName":"findByOrderId","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.findByOrderId","classId":"foodsearch.service.FoodServiceImpl","line":105,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllFood(String date, String startStation, String endStation, String tripId, HttpHeaders headers) {\n        FoodServiceImpl.LOGGER.info(\"data\u003d{} start\u003d{} end\u003d{} tripid\u003d{}\", date, startStation, endStation, tripId);\n        AllTripFood allTripFood \u003d new AllTripFood();\n\n        if (null \u003d\u003d tripId || tripId.length() \u003c\u003d 2) {\n            return new Response\u003c\u003e(0, \"Trip id is not suitable\", null);\n        }\n\n        // need return this tow element\n        List\u003cTrainFood\u003e trainFoodList \u003d null;\n        Map\u003cString, List\u003cFoodStore\u003e\u003e foodStoreListMap \u003d new HashMap\u003c\u003e();\n\n        /**--------------------------------------------------------------------------------------*/\n        HttpEntity requestEntityGetTrainFoodListResult \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cList\u003cTrainFood\u003e\u003e\u003e reGetTrainFoodListResult \u003d restTemplate.exchange(\n                \"http://ts-food-map-service:18855/api/v1/foodmapservice/trainfoods/\" + tripId,\n                HttpMethod.GET,\n                requestEntityGetTrainFoodListResult,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cTrainFood\u003e\u003e\u003e() {\n                });\n\n        List\u003cTrainFood\u003e trainFoodListResult \u003d reGetTrainFoodListResult.getBody().getData();\n\n        if (trainFoodListResult !\u003d null) {\n            trainFoodList \u003d trainFoodListResult;\n            FoodServiceImpl.LOGGER.info(\"[Food Service]Get Train Food List!\");\n        } else {\n            FoodServiceImpl.LOGGER.info(\"[Food Service]Get the Get Food Request Failed!\");\n            return new Response\u003c\u003e(0, \"Get the Get Food Request Failed!\", null);\n        }\n        //车次途经的车站\n        /**--------------------------------------------------------------------------------------*/\n        HttpEntity requestEntityGetRouteResult \u003d new HttpEntity(null, headers);\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e reGetRouteResult \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + tripId,\n                HttpMethod.GET,\n                requestEntityGetRouteResult,\n                new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                });\n        Response\u003cRoute\u003e stationResult \u003d reGetRouteResult.getBody();\n\n        if (stationResult.getStatus() \u003d\u003d 1) {\n            Route route \u003d stationResult.getData();\n            List\u003cString\u003e stations \u003d route.getStations();\n            //去除不经过的站，如果起点终点有的话\n            if (null !\u003d startStation \u0026\u0026 !\"\".equals(startStation)) {\n                /**--------------------------------------------------------------------------------------*/\n                HttpEntity requestEntityStartStationId \u003d new HttpEntity(headers);\n                ResponseEntity\u003cResponse\u003cString\u003e\u003e reStartStationId \u003d restTemplate.exchange(\n                        \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + startStation,\n                        HttpMethod.GET,\n                        requestEntityStartStationId,\n                        new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                        });\n                Response\u003cString\u003e startStationId \u003d reStartStationId.getBody();\n\n                for (int i \u003d 0; i \u003c stations.size(); i++) {\n                    if (stations.get(i).equals(startStationId.getData())) {\n                        break;\n                    } else {\n                        stations.remove(i);\n                    }\n                }\n            }\n            if (null !\u003d endStation \u0026\u0026 !\"\".equals(endStation)) {\n                /**--------------------------------------------------------------------------------------*/\n                HttpEntity requestEntityEndStationId \u003d new HttpEntity(headers);\n                ResponseEntity\u003cResponse\u003cString\u003e\u003e reEndStationId \u003d restTemplate.exchange(\n                        \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + endStation,\n                        HttpMethod.GET,\n                        requestEntityEndStationId,\n                        new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                        });\n                Response endStationId \u003d reEndStationId.getBody();\n\n                for (int i \u003d stations.size() - 1; i \u003e\u003d 0; i--) {\n                    if (stations.get(i).equals(endStationId.getData())) {\n                        break;\n                    } else {\n                        stations.remove(i);\n                    }\n                }\n            }\n\n            HttpEntity requestEntityFoodStoresListResult \u003d new HttpEntity(stations, headers);\n            ResponseEntity\u003cResponse\u003cList\u003cFoodStore\u003e\u003e\u003e reFoodStoresListResult \u003d restTemplate.exchange(\n                    \"http://ts-food-map-service:18855/api/v1/foodmapservice/foodstores\",\n                    HttpMethod.POST,\n                    requestEntityFoodStoresListResult,\n                    new ParameterizedTypeReference\u003cResponse\u003cList\u003cFoodStore\u003e\u003e\u003e() {\n                    });\n            List\u003cFoodStore\u003e foodStoresListResult \u003d reFoodStoresListResult.getBody().getData();\n            if (foodStoresListResult !\u003d null \u0026\u0026 !foodStoresListResult.isEmpty()) {\n                for (String stationId : stations) {\n                    List\u003cFoodStore\u003e res \u003d foodStoresListResult.stream()\n                            .filter(foodStore -\u003e (foodStore.getStationId().equals(stationId)))\n                            .collect(Collectors.toList());\n                    foodStoreListMap.put(stationId, res);\n                }\n            } else {\n                return new Response\u003c\u003e(0, \"Get All Food Failed\", allTripFood);\n            }\n        } else {\n            return new Response\u003c\u003e(0, \"Get All Food Failed\", allTripFood);\n        }\n        allTripFood.setTrainFoodList(trainFoodList);\n        allTripFood.setFoodStoreListMap(foodStoreListMap);\n        return new Response\u003c\u003e(1, \"Get All Food Success\", allTripFood);\n    }","returnType":"Response","methodName":"getAllFood","className":"FoodServiceImpl","packageName":"foodsearch.service","methodId":"foodsearch.service.FoodServiceImpl.getAllFood","classId":"foodsearch.service.FoodServiceImpl","line":118,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ InsidePayment Service ] !\";\n    }","returnType":"String","methodName":"home","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.home","classId":"inside_payment.controller.InsidePaymentController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/inside_payment\")\n    public HttpEntity pay(@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers) {\n        InsidePaymentController.LOGGER.info(\"[Inside Payment Service][Pay] Pay for: {}\", info.getOrderId());\n        return ok(service.pay(info, headers));\n    }","returnType":"HttpEntity","methodName":"pay","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.pay","classId":"inside_payment.controller.InsidePaymentController","line":31,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/inside_payment\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/inside_payment/account\")\n    public HttpEntity createAccount(@RequestBody AccountInfo info, @RequestHeader HttpHeaders headers) {\n        return ok(service.createAccount(info, headers));\n    }","returnType":"HttpEntity","methodName":"createAccount","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.createAccount","classId":"inside_payment.controller.InsidePaymentController","line":37,"msArgumentList":[{"returnType":"AccountInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/inside_payment/account\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/inside_payment/{userId}/{money}\")\n    public HttpEntity addMoney(@PathVariable String userId, @PathVariable\n            String money, @RequestHeader HttpHeaders headers) {\n        return ok(service.addMoney(userId, money, headers));\n    }","returnType":"HttpEntity","methodName":"addMoney","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.addMoney","classId":"inside_payment.controller.InsidePaymentController","line":42,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/inside_payment/{userId}/{money}\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/inside_payment/payment\")\n    public HttpEntity queryPayment(@RequestHeader HttpHeaders headers) {\n        return ok(service.queryPayment(headers));\n    }","returnType":"HttpEntity","methodName":"queryPayment","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.queryPayment","classId":"inside_payment.controller.InsidePaymentController","line":48,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/inside_payment/payment\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/inside_payment/account\")\n    public HttpEntity queryAccount(@RequestHeader HttpHeaders headers) {\n        return ok(service.queryAccount(headers));\n    }","returnType":"HttpEntity","methodName":"queryAccount","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.queryAccount","classId":"inside_payment.controller.InsidePaymentController","line":53,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/inside_payment/account\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/inside_payment/drawback/{userId}/{money}\")\n    public HttpEntity drawBack(@PathVariable String userId, @PathVariable String money, @RequestHeader HttpHeaders headers) {\n        return ok(service.drawBack(userId, money, headers));\n    }","returnType":"HttpEntity","methodName":"drawBack","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.drawBack","classId":"inside_payment.controller.InsidePaymentController","line":58,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/inside_payment/drawback/{userId}/{money}\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/inside_payment/difference\")\n    public HttpEntity payDifference(@RequestBody PaymentInfo info, @RequestHeader HttpHeaders headers) {\n        return ok(service.payDifference(info, headers));\n    }","returnType":"HttpEntity","methodName":"payDifference","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.payDifference","classId":"inside_payment.controller.InsidePaymentController","line":63,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/inside_payment/difference\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/inside_payment/money\")\n    public HttpEntity queryAddMoney(@RequestHeader HttpHeaders headers) {\n        return ok(service.queryAddMoney(headers));\n    }","returnType":"HttpEntity","methodName":"queryAddMoney","className":"InsidePaymentController","packageName":"inside_payment.controller","methodId":"inside_payment.controller.InsidePaymentController.queryAddMoney","classId":"inside_payment.controller.InsidePaymentController","line":68,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/inside_payment/money\""}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/AddMoneyRepository.java","directoryName":""},"code":"List\u003cMoney\u003e findByUserId(String userId);","returnType":"List\u003cMoney\u003e","methodName":"findByUserId","className":"AddMoneyRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.AddMoneyRepository.findByUserId","classId":"inside_payment.repository.AddMoneyRepository","line":19,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/AddMoneyRepository.java","directoryName":""},"code":"@Override\n    List\u003cMoney\u003e findAll();","returnType":"List\u003cMoney\u003e","methodName":"findAll","className":"AddMoneyRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.AddMoneyRepository.findAll","classId":"inside_payment.repository.AddMoneyRepository","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/PaymentRepository.java","directoryName":""},"code":"Payment findById(String id);","returnType":"Payment","methodName":"findById","className":"PaymentRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.PaymentRepository.findById","classId":"inside_payment.repository.PaymentRepository","line":19,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/PaymentRepository.java","directoryName":""},"code":"List\u003cPayment\u003e findByOrderId(String orderId);","returnType":"List\u003cPayment\u003e","methodName":"findByOrderId","className":"PaymentRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.PaymentRepository.findByOrderId","classId":"inside_payment.repository.PaymentRepository","line":27,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/PaymentRepository.java","directoryName":""},"code":"@Override\n    List\u003cPayment\u003e findAll();","returnType":"List\u003cPayment\u003e","methodName":"findAll","className":"PaymentRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.PaymentRepository.findAll","classId":"inside_payment.repository.PaymentRepository","line":34,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/repository/PaymentRepository.java","directoryName":""},"code":"List\u003cPayment\u003e findByUserId(String userId);","returnType":"List\u003cPayment\u003e","methodName":"findByUserId","className":"PaymentRepository","packageName":"inside_payment.repository","methodId":"inside_payment.repository.PaymentRepository.findByUserId","classId":"inside_payment.repository.PaymentRepository","line":43,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response pay(PaymentInfo info , HttpHeaders headers);","returnType":"Response","methodName":"pay","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.pay","classId":"inside_payment.service.InsidePaymentService","line":21,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response createAccount(AccountInfo info, HttpHeaders headers);","returnType":"Response","methodName":"createAccount","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.createAccount","classId":"inside_payment.service.InsidePaymentService","line":30,"msArgumentList":[{"returnType":"AccountInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response addMoney(String userId,String money, HttpHeaders headers);","returnType":"Response","methodName":"addMoney","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.addMoney","classId":"inside_payment.service.InsidePaymentService","line":40,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response queryPayment(HttpHeaders headers);","returnType":"Response","methodName":"queryPayment","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.queryPayment","classId":"inside_payment.service.InsidePaymentService","line":48,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response queryAccount(HttpHeaders headers);","returnType":"Response","methodName":"queryAccount","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.queryAccount","classId":"inside_payment.service.InsidePaymentService","line":56,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response drawBack(String userId, String money, HttpHeaders headers);","returnType":"Response","methodName":"drawBack","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.drawBack","classId":"inside_payment.service.InsidePaymentService","line":66,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response payDifference(PaymentInfo info, HttpHeaders headers);","returnType":"Response","methodName":"payDifference","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.payDifference","classId":"inside_payment.service.InsidePaymentService","line":75,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"Response queryAddMoney(HttpHeaders headers);","returnType":"Response","methodName":"queryAddMoney","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.queryAddMoney","classId":"inside_payment.service.InsidePaymentService","line":83,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentService.java","directoryName":""},"code":"void initPayment(Payment payment, HttpHeaders headers);","returnType":"void","methodName":"initPayment","className":"InsidePaymentService","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentService.initPayment","classId":"inside_payment.service.InsidePaymentService","line":92,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response pay(PaymentInfo info, HttpHeaders headers) {\n\n        String userId \u003d info.getUserId();\n\n        String requestOrderURL \u003d \"\";\n        if (info.getTripId().startsWith(\"G\") || info.getTripId().startsWith(\"D\")) {\n            requestOrderURL \u003d  \"http://ts-order-service:12031/api/v1/orderservice/order/\" + info.getOrderId();\n        } else {\n            requestOrderURL \u003d \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + info.getOrderId();\n        }\n        HttpEntity requestGetOrderResults \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e reGetOrderResults \u003d restTemplate.exchange(\n                requestOrderURL,\n                HttpMethod.GET,\n                requestGetOrderResults,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        Response\u003cOrder\u003e result \u003d reGetOrderResults.getBody();\n\n\n        if (result.getStatus() \u003d\u003d 1) {\n            Order order \u003d result.getData();\n            if (order.getStatus() !\u003d OrderStatus.NOTPAID.getCode()) {\n                InsidePaymentServiceImpl.LOGGER.info(\"[Inside Payment Service][Pay] Error. Order status Not allowed to Pay.\");\n                return new Response\u003c\u003e(0, \"Error. Order status Not allowed to Pay.\", null);\n            }\n\n            Payment payment \u003d new Payment();\n            payment.setOrderId(info.getOrderId());\n            payment.setPrice(order.getPrice());\n            payment.setUserId(userId);\n\n            //判断一下账户余额够不够，不够要去站外支付\n            List\u003cPayment\u003e payments \u003d paymentRepository.findByUserId(userId);\n            List\u003cMoney\u003e addMonies \u003d addMoneyRepository.findByUserId(userId);\n            Iterator\u003cPayment\u003e paymentsIterator \u003d payments.iterator();\n            Iterator\u003cMoney\u003e addMoniesIterator \u003d addMonies.iterator();\n\n            BigDecimal totalExpand \u003d new BigDecimal(\"0\");\n            while (paymentsIterator.hasNext()) {\n                Payment p \u003d paymentsIterator.next();\n                totalExpand \u003d totalExpand.add(new BigDecimal(p.getPrice()));\n            }\n            totalExpand \u003d totalExpand.add(new BigDecimal(order.getPrice()));\n\n            BigDecimal money \u003d new BigDecimal(\"0\");\n            while (addMoniesIterator.hasNext()) {\n                Money addMoney \u003d addMoniesIterator.next();\n                money \u003d money.add(new BigDecimal(addMoney.getMoney()));\n            }\n\n            if (totalExpand.compareTo(money) \u003e 0) {\n                //站外支付\n                Payment outsidePaymentInfo \u003d new Payment();\n                outsidePaymentInfo.setOrderId(info.getOrderId());\n                outsidePaymentInfo.setUserId(userId);\n                outsidePaymentInfo.setPrice(order.getPrice());\n\n                /****这里调用第三方支付***/\n\n                HttpEntity requestEntityOutsidePaySuccess \u003d new HttpEntity(outsidePaymentInfo, headers);\n                ResponseEntity\u003cResponse\u003e reOutsidePaySuccess \u003d restTemplate.exchange(\n                        \"http://ts-payment-service:19001/api/v1/paymentservice/payment\",\n                        HttpMethod.POST,\n                        requestEntityOutsidePaySuccess,\n                        Response.class);\n                Response outsidePaySuccess \u003d reOutsidePaySuccess.getBody();\n\n                InsidePaymentServiceImpl.LOGGER.info(\"Out pay result: {}\", outsidePaySuccess.toString());\n                if (outsidePaySuccess.getStatus() \u003d\u003d 1) {\n                    payment.setType(PaymentType.O);\n                    paymentRepository.save(payment);\n                    setOrderStatus(info.getTripId(), info.getOrderId(), headers);\n                    return new Response\u003c\u003e(1, \"Payment Success \" +    outsidePaySuccess.getMsg(), null);\n                } else {\n                    return new Response\u003c\u003e(0, \"Payment Failed:  \" +  outsidePaySuccess.getMsg(), null);\n                }\n            } else {\n                setOrderStatus(info.getTripId(), info.getOrderId(), headers);\n                payment.setType(PaymentType.P);\n                paymentRepository.save(payment);\n            }\n            return new Response\u003c\u003e(1, \"Payment Success\", null);\n\n        } else {\n            return new Response\u003c\u003e(0, \"Payment Failed, Order Not Exists\", null);\n        }\n    }","returnType":"Response","methodName":"pay","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.pay","classId":"inside_payment.service.InsidePaymentServiceImpl","line":38,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createAccount(AccountInfo info, HttpHeaders headers) {\n        List\u003cMoney\u003e list \u003d addMoneyRepository.findByUserId(info.getUserId());\n        if (list.isEmpty()) {\n            Money addMoney \u003d new Money();\n            addMoney.setMoney(info.getMoney());\n            addMoney.setUserId(info.getUserId());\n            addMoney.setType(MoneyType.A);\n            addMoneyRepository.save(addMoney);\n            return new Response\u003c\u003e(1, \"Create Account Success\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"Create Account Failed, Account already Exists\", null);\n        }\n    }","returnType":"Response","methodName":"createAccount","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.createAccount","classId":"inside_payment.service.InsidePaymentServiceImpl","line":128,"msArgumentList":[{"returnType":"AccountInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addMoney(String userId, String money, HttpHeaders headers) {\n        if (addMoneyRepository.findByUserId(userId) !\u003d null) {\n            Money addMoney \u003d new Money();\n            addMoney.setUserId(userId);\n            addMoney.setMoney(money);\n            addMoney.setType(MoneyType.A);\n            addMoneyRepository.save(addMoney);\n            return new Response\u003c\u003e(1, \"Add Money Success\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"Add Money Failed\", null);\n        }\n    }","returnType":"Response","methodName":"addMoney","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.addMoney","classId":"inside_payment.service.InsidePaymentServiceImpl","line":143,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAccount(HttpHeaders headers) {\n        List\u003cBalance\u003e result \u003d new ArrayList\u003c\u003e();\n        List\u003cMoney\u003e list \u003d addMoneyRepository.findAll();\n        Iterator\u003cMoney\u003e ite \u003d list.iterator();\n        HashMap\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();\n        while (ite.hasNext()) {\n            Money addMoney \u003d ite.next();\n            if (map.containsKey(addMoney.getUserId())) {\n                BigDecimal money \u003d new BigDecimal(map.get(addMoney.getUserId()));\n                map.put(addMoney.getUserId(), money.add(new BigDecimal(addMoney.getMoney())).toString());\n            } else {\n                map.put(addMoney.getUserId(), addMoney.getMoney());\n            }\n        }\n\n        Iterator ite1 \u003d map.entrySet().iterator();\n        while (ite1.hasNext()) {\n            Map.Entry entry \u003d (Map.Entry) ite1.next();\n            String userId \u003d (String) entry.getKey();\n            String money \u003d (String) entry.getValue();\n\n            List\u003cPayment\u003e payments \u003d paymentRepository.findByUserId(userId);\n            Iterator\u003cPayment\u003e iterator \u003d payments.iterator();\n            String totalExpand \u003d \"0\";\n            while (iterator.hasNext()) {\n                Payment p \u003d iterator.next();\n                BigDecimal expand \u003d new BigDecimal(totalExpand);\n                totalExpand \u003d expand.add(new BigDecimal(p.getPrice())).toString();\n            }\n            String balanceMoney \u003d new BigDecimal(money).subtract(new BigDecimal(totalExpand)).toString();\n            Balance balance \u003d new Balance();\n            balance.setUserId(userId);\n            balance.setBalance(balanceMoney);\n            result.add(balance);\n        }\n\n        return new Response\u003c\u003e(1, \"Success\", result);\n    }","returnType":"Response","methodName":"queryAccount","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.queryAccount","classId":"inside_payment.service.InsidePaymentServiceImpl","line":157,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"public String queryAccount(String userId, HttpHeaders headers) {\n        List\u003cPayment\u003e payments \u003d paymentRepository.findByUserId(userId);\n        List\u003cMoney\u003e addMonies \u003d addMoneyRepository.findByUserId(userId);\n        Iterator\u003cPayment\u003e paymentsIterator \u003d payments.iterator();\n        Iterator\u003cMoney\u003e addMoniesIterator \u003d addMonies.iterator();\n\n        BigDecimal totalExpand \u003d new BigDecimal(\"0\");\n        while (paymentsIterator.hasNext()) {\n            Payment p \u003d paymentsIterator.next();\n            totalExpand.add(new BigDecimal(p.getPrice()));\n        }\n\n        BigDecimal money \u003d new BigDecimal(\"0\");\n        while (addMoniesIterator.hasNext()) {\n            Money addMoney \u003d addMoniesIterator.next();\n            money.add(new BigDecimal(addMoney.getMoney()));\n        }\n\n        return money.subtract(totalExpand).toString();\n    }","returnType":"String","methodName":"queryAccount","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.queryAccount","classId":"inside_payment.service.InsidePaymentServiceImpl","line":197,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryPayment(HttpHeaders headers) {\n        List\u003cPayment\u003e payments \u003d paymentRepository.findAll();\n        if (payments !\u003d null \u0026\u0026 !payments.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Query Payment Success\", payments);\n        }else {\n            return new Response\u003c\u003e(0, \"Query Payment Failed\", null);\n        }\n    }","returnType":"Response","methodName":"queryPayment","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.queryPayment","classId":"inside_payment.service.InsidePaymentServiceImpl","line":218,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response drawBack(String userId, String money, HttpHeaders headers) {\n        if (addMoneyRepository.findByUserId(userId) !\u003d null) {\n            Money addMoney \u003d new Money();\n            addMoney.setUserId(userId);\n            addMoney.setMoney(money);\n            addMoney.setType(MoneyType.D);\n            addMoneyRepository.save(addMoney);\n            return new Response\u003c\u003e(1, \"Draw Back Money Success\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"Draw Back Money Failed\", null);\n        }\n    }","returnType":"Response","methodName":"drawBack","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.drawBack","classId":"inside_payment.service.InsidePaymentServiceImpl","line":228,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response payDifference(PaymentInfo info, HttpHeaders headers) {\n\n        String userId \u003d info.getUserId();\n\n        Payment payment \u003d new Payment();\n        payment.setOrderId(info.getOrderId());\n        payment.setPrice(info.getPrice());\n        payment.setUserId(info.getUserId());\n\n\n        List\u003cPayment\u003e payments \u003d paymentRepository.findByUserId(userId);\n        List\u003cMoney\u003e addMonies \u003d addMoneyRepository.findByUserId(userId);\n        Iterator\u003cPayment\u003e paymentsIterator \u003d payments.iterator();\n        Iterator\u003cMoney\u003e addMoniesIterator \u003d addMonies.iterator();\n\n        BigDecimal totalExpand \u003d new BigDecimal(\"0\");\n        while (paymentsIterator.hasNext()) {\n            Payment p \u003d paymentsIterator.next();\n            totalExpand.add(new BigDecimal(p.getPrice()));\n        }\n        totalExpand.add(new BigDecimal(info.getPrice()));\n\n        BigDecimal money \u003d new BigDecimal(\"0\");\n        while (addMoniesIterator.hasNext()) {\n            Money addMoney \u003d addMoniesIterator.next();\n            money.add(new BigDecimal(addMoney.getMoney()));\n        }\n\n        if (totalExpand.compareTo(money) \u003e 0) {\n            //站外支付\n            Payment outsidePaymentInfo \u003d new Payment();\n            outsidePaymentInfo.setOrderId(info.getOrderId());\n            outsidePaymentInfo.setUserId(userId);\n            outsidePaymentInfo.setPrice(info.getPrice());\n\n            HttpEntity requestEntityOutsidePaySuccess \u003d new HttpEntity(outsidePaymentInfo, headers);\n            ResponseEntity\u003cResponse\u003e reOutsidePaySuccess \u003d restTemplate.exchange(\n                    \"http://ts-payment-service:19001/api/v1/paymentservice/payment\",\n                    HttpMethod.POST,\n                    requestEntityOutsidePaySuccess,\n                    Response.class);\n            Response outsidePaySuccess \u003d reOutsidePaySuccess.getBody();\n\n            if (outsidePaySuccess.getStatus() \u003d\u003d 1) {\n                payment.setType(PaymentType.E);\n                paymentRepository.save(payment);\n                return new Response\u003c\u003e(1, \"Pay Difference Success\", null);\n            } else {\n                return new Response\u003c\u003e(0, \"Pay Difference Failed\", null);\n            }\n        } else {\n            payment.setType(PaymentType.E);\n            paymentRepository.save(payment);\n        }\n        return new Response\u003c\u003e(1, \"Pay Difference Success\", null);\n    }","returnType":"Response","methodName":"payDifference","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.payDifference","classId":"inside_payment.service.InsidePaymentServiceImpl","line":242,"msArgumentList":[{"returnType":"PaymentInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAddMoney(HttpHeaders headers) {\n        List\u003cMoney\u003e monies \u003d addMoneyRepository.findAll();\n        if (monies !\u003d null \u0026\u0026 !monies.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Query Money Success\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"\", null);\n        }\n    }","returnType":"Response","methodName":"queryAddMoney","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.queryAddMoney","classId":"inside_payment.service.InsidePaymentServiceImpl","line":300,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"private Response setOrderStatus(String tripId, String orderId, HttpHeaders headers) {\n\n        //order paid and not collected\n        int orderStatus \u003d 1;\n        Response result;\n        if (tripId.startsWith(\"G\") || tripId.startsWith(\"D\")) {\n\n            HttpEntity requestEntityModifyOrderStatusResult \u003d new HttpEntity(headers);\n            ResponseEntity\u003cResponse\u003e reModifyOrderStatusResult \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/status/\" + orderId + \"/\" + orderStatus,\n                    HttpMethod.GET,\n                    requestEntityModifyOrderStatusResult,\n                    Response.class);\n            result \u003d reModifyOrderStatusResult.getBody();\n\n        } else {\n            HttpEntity requestEntityModifyOrderStatusResult \u003d new HttpEntity(headers);\n            ResponseEntity\u003cResponse\u003e reModifyOrderStatusResult \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/status/\" + orderId + \"/\" + orderStatus,\n                    HttpMethod.GET,\n                    requestEntityModifyOrderStatusResult,\n                    Response.class);\n            result \u003d reModifyOrderStatusResult.getBody();\n\n        }\n        return result;\n    }","returnType":"Response","methodName":"setOrderStatus","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.setOrderStatus","classId":"inside_payment.service.InsidePaymentServiceImpl","line":310,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public void initPayment(Payment payment, HttpHeaders headers) {\n        Payment paymentTemp \u003d paymentRepository.findById(payment.getId());\n        if (paymentTemp \u003d\u003d null) {\n            paymentRepository.save(payment);\n        } else {\n            InsidePaymentServiceImpl.LOGGER.info(\"[Inside Payment Service][Init Payment] Already Exists: {}\", payment.getId());\n        }\n    }","returnType":"void","methodName":"initPayment","className":"InsidePaymentServiceImpl","packageName":"inside_payment.service","methodId":"inside_payment.service.InsidePaymentServiceImpl.initPayment","classId":"inside_payment.service.InsidePaymentServiceImpl","line":338,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Assurance Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.home","classId":"assurance.controller.AssuranceController","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/assurances\")\n    public HttpEntity getAllAssurances(@RequestHeader HttpHeaders headers) {\n        AssuranceController.LOGGER.info(\"[Assurances Service][Get All Assurances]\");\n        return ok(assuranceService.getAllAssurances(headers));\n    }","returnType":"HttpEntity","methodName":"getAllAssurances","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.getAllAssurances","classId":"assurance.controller.AssuranceController","line":32,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/assurances\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/assurances/types\")\n    public HttpEntity getAllAssuranceType(@RequestHeader HttpHeaders headers) {\n        AssuranceController.LOGGER.info(\"[Assurances Service][Get Assurance Type]\");\n        return ok(assuranceService.getAllAssuranceTypes(headers));\n    }","returnType":"HttpEntity","methodName":"getAllAssuranceType","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.getAllAssuranceType","classId":"assurance.controller.AssuranceController","line":39,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/assurances/types\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/assurances/assuranceid/{assuranceId}\")\n    public HttpEntity deleteAssurance(@PathVariable String assuranceId, @RequestHeader HttpHeaders headers) {\n        AssuranceController.LOGGER.info(\"[Assurances Service][Delete Assurance]\");\n        return ok(assuranceService.deleteById(UUID.fromString(assuranceId), headers));\n    }","returnType":"HttpEntity","methodName":"deleteAssurance","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.deleteAssurance","classId":"assurance.controller.AssuranceController","line":46,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/assurances/assuranceid/{assuranceId}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/assurances/orderid/{orderId}\")\n    public HttpEntity deleteAssuranceByOrderId(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        AssuranceController.LOGGER.info(\"[Assurances Service][Delete Assurance by orderId]\");\n        return ok(assuranceService.deleteByOrderId(UUID.fromString(orderId), headers));\n    }","returnType":"HttpEntity","methodName":"deleteAssuranceByOrderId","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.deleteAssuranceByOrderId","classId":"assurance.controller.AssuranceController","line":53,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/assurances/orderid/{orderId}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PatchMapping(path \u003d \"/assurances/{assuranceId}/{orderId}/{typeIndex}\")\n    public HttpEntity modifyAssurance(@PathVariable String assuranceId,\n                                      @PathVariable String orderId,\n                                      @PathVariable int typeIndex, @RequestHeader HttpHeaders headers) {\n        AssuranceController.LOGGER.info(\"[Assurances Service][Modify Assurance]\");\n        return ok(assuranceService.modify(assuranceId, orderId, typeIndex, headers));\n    }","returnType":"HttpEntity","methodName":"modifyAssurance","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.modifyAssurance","classId":"assurance.controller.AssuranceController","line":60,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PatchMapping","key":"path","value":"\"/assurances/{assuranceId}/{orderId}/{typeIndex}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/assurances/{typeIndex}/{orderId}\")\n    public HttpEntity createNewAssurance(@PathVariable int typeIndex, @PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        //Assurance\n        return ok(assuranceService.create(typeIndex, orderId, headers));\n    }","returnType":"HttpEntity","methodName":"createNewAssurance","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.createNewAssurance","classId":"assurance.controller.AssuranceController","line":70,"msArgumentList":[{"returnType":"int"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/assurances/{typeIndex}/{orderId}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/assurances/assuranceid/{assuranceId}\")\n    public HttpEntity getAssuranceById(@PathVariable String assuranceId, @RequestHeader HttpHeaders headers) {\n        return ok(assuranceService.findAssuranceById(UUID.fromString(assuranceId), headers));\n    }","returnType":"HttpEntity","methodName":"getAssuranceById","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.getAssuranceById","classId":"assurance.controller.AssuranceController","line":77,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/assurances/assuranceid/{assuranceId}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/assurance/orderid/{orderId}\")\n    public HttpEntity findAssuranceByOrderId(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        return ok(assuranceService.findAssuranceByOrderId(UUID.fromString(orderId), headers));\n    }","returnType":"HttpEntity","methodName":"findAssuranceByOrderId","className":"AssuranceController","packageName":"assurance.controller","methodId":"assurance.controller.AssuranceController.findAssuranceByOrderId","classId":"assurance.controller.AssuranceController","line":83,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/assurance/orderid/{orderId}\""}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java","directoryName":""},"code":"Assurance findById(UUID id);","returnType":"Assurance","methodName":"findById","className":"AssuranceRepository","packageName":"assurance.repository","methodId":"assurance.repository.AssuranceRepository.findById","classId":"assurance.repository.AssuranceRepository","line":22,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java","directoryName":""},"code":"@Query(\"{ \u0027orderId\u0027 : ?0 }\")\n    Assurance findByOrderId(UUID orderId);","returnType":"Assurance","methodName":"findByOrderId","className":"AssuranceRepository","packageName":"assurance.repository","methodId":"assurance.repository.AssuranceRepository.findByOrderId","classId":"assurance.repository.AssuranceRepository","line":30,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"AssuranceRepository","packageName":"assurance.repository","methodId":"assurance.repository.AssuranceRepository.deleteById","classId":"assurance.repository.AssuranceRepository","line":39,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java","directoryName":""},"code":"void removeAssuranceByOrderId(UUID orderId);","returnType":"void","methodName":"removeAssuranceByOrderId","className":"AssuranceRepository","packageName":"assurance.repository","methodId":"assurance.repository.AssuranceRepository.removeAssuranceByOrderId","classId":"assurance.repository.AssuranceRepository","line":47,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cAssurance\u003e findAll();","returnType":"ArrayList\u003cAssurance\u003e","methodName":"findAll","className":"AssuranceRepository","packageName":"assurance.repository","methodId":"assurance.repository.AssuranceRepository.findAll","classId":"assurance.repository.AssuranceRepository","line":54,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findAssuranceById(UUID id, HttpHeaders headers) {\n        Assurance assurance \u003d assuranceRepository.findById(id);\n        if (assurance \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No Conotent by this id\", null);\n        } else {\n            return new Response\u003c\u003e(1, \"Find Assurace Success\", assurance);\n        }\n    }","returnType":"Response","methodName":"findAssuranceById","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.findAssuranceById","classId":"assurance.service.AssuranceServiceImpl","line":27,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findAssuranceByOrderId(UUID orderId, HttpHeaders headers) {\n        Assurance assurance \u003d assuranceRepository.findByOrderId(orderId);\n        if (assurance \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No Content by this orderId\", null);\n        } else {\n            return new Response\u003c\u003e(1, \"Find Assurace Success\", assurance);\n        }\n    }","returnType":"Response","methodName":"findAssuranceByOrderId","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.findAssuranceByOrderId","classId":"assurance.service.AssuranceServiceImpl","line":37,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(int typeIndex, String orderId, HttpHeaders headers) {\n        Assurance a \u003d assuranceRepository.findByOrderId(UUID.fromString(orderId));\n        AssuranceType at \u003d AssuranceType.getTypeByIndex(typeIndex);\n        if (a !\u003d null) {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][AddAssurance] Fail.Assurance already exists\");\n            return new Response\u003c\u003e(0, \"Fail.Assurance already exists\", null);\n        } else if (at \u003d\u003d null) {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][AddAssurance] Fail.Assurance type doesn\u0027t exist\");\n            return new Response\u003c\u003e(0, \"Fail.Assurance type doesn\u0027t exist\", null);\n        } else {\n            Assurance assurance \u003d new Assurance(UUID.randomUUID(), UUID.fromString(orderId), at);\n            assuranceRepository.save(assurance);\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][AddAssurance] Success.\");\n            return new Response\u003c\u003e(1, \"Success\", assurance);\n        }\n    }","returnType":"Response","methodName":"create","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.create","classId":"assurance.service.AssuranceServiceImpl","line":47,"msArgumentList":[{"returnType":"int"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteById(UUID assuranceId, HttpHeaders headers) {\n        assuranceRepository.deleteById(assuranceId);\n        Assurance a \u003d assuranceRepository.findById(assuranceId);\n        if (a \u003d\u003d null) {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][DeleteAssurance] Success.\");\n            return new Response\u003c\u003e(1, \"Delete Success with Assurance id\", null);\n        } else {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][DeleteAssurance] Fail.Assurance not clear.\");\n            return new Response\u003c\u003e(0, \"Fail.Assurance not clear\", assuranceId);\n        }\n    }","returnType":"Response","methodName":"deleteById","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.deleteById","classId":"assurance.service.AssuranceServiceImpl","line":65,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteByOrderId(UUID orderId, HttpHeaders headers) {\n        assuranceRepository.removeAssuranceByOrderId(orderId);\n        Assurance isExistAssurace \u003d assuranceRepository.findByOrderId(orderId);\n        if (isExistAssurace \u003d\u003d null) {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][DeleteAssurance] Success.\");\n            return new Response\u003c\u003e(1, \"Delete Success with Order Id\", null);\n        } else {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Add\u0026Delete-Service][DeleteAssurance] Fail.Assurance not clear.\");\n            return new Response\u003c\u003e(0, \"Fail.Assurance not clear\", orderId);\n        }\n    }","returnType":"Response","methodName":"deleteByOrderId","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.deleteByOrderId","classId":"assurance.service.AssuranceServiceImpl","line":78,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modify(String assuranceId, String orderId, int typeIndex, HttpHeaders headers) {\n        Response oldAssuranceResponse \u003d findAssuranceById(UUID.fromString(assuranceId), headers);\n        Assurance oldAssurance \u003d (Assurance) oldAssuranceResponse.getData();\n        if (oldAssurance \u003d\u003d null) {\n            AssuranceServiceImpl.LOGGER.info(\"[Assurance-Modify-Service][ModifyAssurance] Fail.Assurance not found.\");\n            return new Response\u003c\u003e(0, \"Fail.Assurance not found.\", null);\n        } else {\n            AssuranceType at \u003d AssuranceType.getTypeByIndex(typeIndex);\n            if (at !\u003d null) {\n                oldAssurance.setType(at);\n                assuranceRepository.save(oldAssurance);\n                AssuranceServiceImpl.LOGGER.info(\"[Assurance-Modify-Service][ModifyAssurance] Success.\");\n                return new Response\u003c\u003e(1, \"Modify Success\", oldAssurance);\n            } else {\n                AssuranceServiceImpl.LOGGER.info(\"[Assurance-Modify-Service][ModifyAssurance] Fail.Assurance Type not exist.\");\n                return new Response\u003c\u003e(0, \"Assurance Type not exist\", null);\n            }\n        }\n    }","returnType":"Response","methodName":"modify","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.modify","classId":"assurance.service.AssuranceServiceImpl","line":91,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllAssurances(HttpHeaders headers) {\n        List\u003cAssurance\u003e as \u003d assuranceRepository.findAll();\n        if (as !\u003d null \u0026\u0026 !as.isEmpty()) {\n            ArrayList\u003cPlainAssurance\u003e result \u003d new ArrayList\u003c\u003e();\n            for (Assurance a : as) {\n                PlainAssurance pa \u003d new PlainAssurance();\n                pa.setId(a.getId());\n                pa.setOrderId(a.getOrderId());\n                pa.setTypeIndex(a.getType().getIndex());\n                pa.setTypeName(a.getType().getName());\n                pa.setTypePrice(a.getType().getPrice());\n                result.add(pa);\n            }\n            return new Response\u003c\u003e(1, \"Success\", result);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content, Assurance is empty\", null);\n        }\n    }","returnType":"Response","methodName":"getAllAssurances","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.getAllAssurances","classId":"assurance.service.AssuranceServiceImpl","line":112,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllAssuranceTypes(HttpHeaders headers) {\n\n        List\u003cAssuranceTypeBean\u003e atlist \u003d new ArrayList\u003c\u003e();\n        for (AssuranceType at : AssuranceType.values()) {\n            AssuranceTypeBean atb \u003d new AssuranceTypeBean();\n            atb.setIndex(at.getIndex());\n            atb.setName(at.getName());\n            atb.setPrice(at.getPrice());\n            atlist.add(atb);\n        }\n        if (!atlist.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Find All Assurance\", atlist);\n        } else {\n            return new Response\u003c\u003e(0, \"Assurance is Empty\", null);\n        }\n    }","returnType":"Response","methodName":"getAllAssuranceTypes","className":"AssuranceServiceImpl","packageName":"assurance.service","methodId":"assurance.service.AssuranceServiceImpl.getAllAssuranceTypes","classId":"assurance.service.AssuranceServiceImpl","line":132,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response findAssuranceById(UUID id, HttpHeaders headers);","returnType":"Response","methodName":"findAssuranceById","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.findAssuranceById","classId":"assurance.service.AssuranceService","line":20,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response findAssuranceByOrderId(UUID orderId, HttpHeaders headers);","returnType":"Response","methodName":"findAssuranceByOrderId","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.findAssuranceByOrderId","classId":"assurance.service.AssuranceService","line":29,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response create(int typeIndex,String orderId , HttpHeaders headers);","returnType":"Response","methodName":"create","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.create","classId":"assurance.service.AssuranceService","line":39,"msArgumentList":[{"returnType":"int"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response deleteById(UUID assuranceId, HttpHeaders headers);","returnType":"Response","methodName":"deleteById","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.deleteById","classId":"assurance.service.AssuranceService","line":48,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response deleteByOrderId(UUID orderId, HttpHeaders headers);","returnType":"Response","methodName":"deleteByOrderId","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.deleteByOrderId","classId":"assurance.service.AssuranceService","line":57,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response modify(String assuranceId, String orderId, int typeIndex , HttpHeaders headers);","returnType":"Response","methodName":"modify","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.modify","classId":"assurance.service.AssuranceService","line":68,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response getAllAssurances(HttpHeaders headers);","returnType":"Response","methodName":"getAllAssurances","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.getAllAssurances","classId":"assurance.service.AssuranceService","line":76,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-assurance-service/src/main/java/assurance/service/AssuranceService.java","directoryName":""},"code":"Response getAllAssuranceTypes(HttpHeaders headers);","returnType":"Response","methodName":"getAllAssuranceTypes","className":"AssuranceService","packageName":"assurance.service","methodId":"assurance.service.AssuranceService.getAllAssuranceTypes","classId":"assurance.service.AssuranceService","line":84,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ AdminOrder Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AdminOrderController","packageName":"adminorder.controller","methodId":"adminorder.controller.AdminOrderController.home","classId":"adminorder.controller.AdminOrderController","line":22,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminorder\")\n    public HttpEntity getAllOrders(@RequestHeader HttpHeaders headers) {\n        return ok(adminOrderService.getAllOrders(headers));\n    }","returnType":"HttpEntity","methodName":"getAllOrders","className":"AdminOrderController","packageName":"adminorder.controller","methodId":"adminorder.controller.AdminOrderController.getAllOrders","classId":"adminorder.controller.AdminOrderController","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminorder\""}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/adminorder\")\n    public HttpEntity addOrder(@RequestBody Order request, @RequestHeader HttpHeaders headers) {\n        return ok(adminOrderService.addOrder(request, headers));\n    }","returnType":"HttpEntity","methodName":"addOrder","className":"AdminOrderController","packageName":"adminorder.controller","methodId":"adminorder.controller.AdminOrderController.addOrder","classId":"adminorder.controller.AdminOrderController","line":33,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/adminorder\""}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java","directoryName":""},"code":"@PutMapping(value \u003d \"/adminorder\")\n    public HttpEntity updateOrder(@RequestBody Order request, @RequestHeader HttpHeaders headers) {\n        return ok(adminOrderService.updateOrder(request, headers));\n    }","returnType":"HttpEntity","methodName":"updateOrder","className":"AdminOrderController","packageName":"adminorder.controller","methodId":"adminorder.controller.AdminOrderController.updateOrder","classId":"adminorder.controller.AdminOrderController","line":38,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/adminorder\""}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/adminorder/{orderId}/{trainNumber}\")\n    public HttpEntity deleteOrder(@PathVariable String orderId, @PathVariable String trainNumber, @RequestHeader HttpHeaders headers) {\n        return ok(adminOrderService.deleteOrder(orderId, trainNumber, headers));\n    }","returnType":"HttpEntity","methodName":"deleteOrder","className":"AdminOrderController","packageName":"adminorder.controller","methodId":"adminorder.controller.AdminOrderController.deleteOrder","classId":"adminorder.controller.AdminOrderController","line":43,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/adminorder/{orderId}/{trainNumber}\""}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderService.java","directoryName":""},"code":"Response getAllOrders(HttpHeaders headers);","returnType":"Response","methodName":"getAllOrders","className":"AdminOrderService","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderService.getAllOrders","classId":"adminorder.service.AdminOrderService","line":19,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderService.java","directoryName":""},"code":"Response deleteOrder(  String orderId,String trainNumber, HttpHeaders headers);","returnType":"Response","methodName":"deleteOrder","className":"AdminOrderService","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderService.deleteOrder","classId":"adminorder.service.AdminOrderService","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderService.java","directoryName":""},"code":"Response updateOrder(Order request, HttpHeaders headers);","returnType":"Response","methodName":"updateOrder","className":"AdminOrderService","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderService.updateOrder","classId":"adminorder.service.AdminOrderService","line":38,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderService.java","directoryName":""},"code":"Response addOrder(Order request, HttpHeaders headers);","returnType":"Response","methodName":"addOrder","className":"AdminOrderService","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderService.addOrder","classId":"adminorder.service.AdminOrderService","line":47,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllOrders(HttpHeaders headers) {\n\n        AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Get All Orders]\");\n        //Get all of the orders\n        ArrayList\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();\n        //From ts-order-service\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order\",\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e() {\n                });\n        Response\u003cArrayList\u003cOrder\u003e\u003e result \u003d re.getBody();\n\n        if (result.getStatus() \u003d\u003d 1) {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Get Orders From ts-order-service successfully!]\");\n            ArrayList\u003cOrder\u003e orders1 \u003d result.getData();\n            orders.addAll(orders1);\n        } else {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Get Orders From ts-order-service fail!]\");\n        }\n        //From ts-order-other-service\n        HttpEntity requestEntity2 \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e re2 \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\",\n                HttpMethod.GET,\n                requestEntity2,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e() {\n                });\n        result \u003d re2.getBody();\n\n        if (result.getStatus() \u003d\u003d 1) {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Get Orders From ts-order-other-service successfully!]\");\n            ArrayList\u003cOrder\u003e orders1 \u003d (ArrayList\u003cOrder\u003e) result.getData();\n            orders.addAll(orders1);\n        } else {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Get Orders From ts-order-other-service fail!]\");\n        }\n        //Return orders\n        return new Response\u003c\u003e(1, \"Get the orders successfully!\", orders);\n\n    }","returnType":"Response","methodName":"getAllOrders","className":"AdminOrderServiceImpl","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderServiceImpl.getAllOrders","classId":"adminorder.service.AdminOrderServiceImpl","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteOrder(String orderId, String trainNumber, HttpHeaders headers) {\n        Response deleteOrderResult;\n        if (trainNumber.startsWith(\"G\") || trainNumber.startsWith(\"D\")) {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Delete Order]\");\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId,\n                    HttpMethod.DELETE,\n                    requestEntity,\n                    Response.class);\n            deleteOrderResult \u003d re.getBody();\n\n        } else {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Delete Order Other]\");\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId,\n                    HttpMethod.DELETE,\n                    requestEntity,\n                    Response.class);\n            deleteOrderResult \u003d re.getBody();\n\n        }\n        return deleteOrderResult;\n\n    }","returnType":"Response","methodName":"deleteOrder","className":"AdminOrderServiceImpl","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderServiceImpl.deleteOrder","classId":"adminorder.service.AdminOrderServiceImpl","line":72,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateOrder(Order request, HttpHeaders headers) {\n\n        Response updateOrderResult;\n        LOGGER.info(\"UPDATE ORDER INFO : \" + request.toString());\n        if (request.getTrainNumber().startsWith(\"G\") || request.getTrainNumber().startsWith(\"D\")) {\n\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Update Order]\");\n            HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/admin\",\n                    HttpMethod.PUT,\n                    requestEntity,\n                    Response.class);\n            updateOrderResult \u003d re.getBody();\n\n        } else {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Add New Order Other]\");\n            HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\",\n                    HttpMethod.PUT,\n                    requestEntity,\n                    Response.class);\n            updateOrderResult \u003d re.getBody();\n\n        }\n        return updateOrderResult;\n    }","returnType":"Response","methodName":"updateOrder","className":"AdminOrderServiceImpl","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderServiceImpl.updateOrder","classId":"adminorder.service.AdminOrderServiceImpl","line":100,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addOrder(Order request, HttpHeaders headers) {\n\n        Response addOrderResult;\n        if (request.getTrainNumber().startsWith(\"G\") || request.getTrainNumber().startsWith(\"D\")) {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Add New Order]\");\n            HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/admin\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    Response.class);\n            addOrderResult \u003d re.getBody();\n\n        } else {\n            AdminOrderServiceImpl.LOGGER.info(\"[Admin Order Service][Add New Order Other]\");\n            HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n            ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    Response.class);\n            addOrderResult \u003d re.getBody();\n\n        }\n        return addOrderResult;\n\n    }","returnType":"Response","methodName":"addOrder","className":"AdminOrderServiceImpl","packageName":"adminorder.service","methodId":"adminorder.service.AdminOrderServiceImpl.addOrder","classId":"adminorder.service.AdminOrderServiceImpl","line":130,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/controller/NotificationController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Notification Service ] !\";\n    }","returnType":"String","methodName":"home","className":"NotificationController","packageName":"notification.controller","methodId":"notification.controller.NotificationController.home","classId":"notification.controller.NotificationController","line":20,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/controller/NotificationController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/notification/preserve_success\")\n    public boolean preserve_success(@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers) {\n        return service.preserveSuccess(info, headers);\n    }","returnType":"boolean","methodName":"preserve_success","className":"NotificationController","packageName":"notification.controller","methodId":"notification.controller.NotificationController.preserve_success","classId":"notification.controller.NotificationController","line":25,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/notification/preserve_success\""}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/controller/NotificationController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/notification/order_create_success\")\n    public boolean order_create_success(@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers) {\n        return service.orderCreateSuccess(info, headers);\n    }","returnType":"boolean","methodName":"order_create_success","className":"NotificationController","packageName":"notification.controller","methodId":"notification.controller.NotificationController.order_create_success","classId":"notification.controller.NotificationController","line":30,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/notification/order_create_success\""}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/controller/NotificationController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/notification/order_changed_success\")\n    public boolean order_changed_success(@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers) {\n        return service.orderChangedSuccess(info, headers);\n    }","returnType":"boolean","methodName":"order_changed_success","className":"NotificationController","packageName":"notification.controller","methodId":"notification.controller.NotificationController.order_changed_success","classId":"notification.controller.NotificationController","line":35,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/notification/order_changed_success\""}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/controller/NotificationController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/notification/order_cancel_success\")\n    public boolean order_cancel_success(@RequestBody NotifyInfo info, @RequestHeader HttpHeaders headers) {\n        return service.orderCancelSuccess(info, headers);\n    }","returnType":"boolean","methodName":"order_cancel_success","className":"NotificationController","packageName":"notification.controller","methodId":"notification.controller.NotificationController.order_cancel_success","classId":"notification.controller.NotificationController","line":40,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/notification/order_cancel_success\""}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationService.java","directoryName":""},"code":"boolean preserveSuccess(NotifyInfo info, HttpHeaders headers);","returnType":"boolean","methodName":"preserveSuccess","className":"NotificationService","packageName":"notification.service","methodId":"notification.service.NotificationService.preserveSuccess","classId":"notification.service.NotificationService","line":19,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationService.java","directoryName":""},"code":"boolean orderCreateSuccess(NotifyInfo info, HttpHeaders headers);","returnType":"boolean","methodName":"orderCreateSuccess","className":"NotificationService","packageName":"notification.service","methodId":"notification.service.NotificationService.orderCreateSuccess","classId":"notification.service.NotificationService","line":28,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationService.java","directoryName":""},"code":"boolean orderChangedSuccess(NotifyInfo info, HttpHeaders headers);","returnType":"boolean","methodName":"orderChangedSuccess","className":"NotificationService","packageName":"notification.service","methodId":"notification.service.NotificationService.orderChangedSuccess","classId":"notification.service.NotificationService","line":37,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationService.java","directoryName":""},"code":"boolean orderCancelSuccess(NotifyInfo info, HttpHeaders headers);","returnType":"boolean","methodName":"orderCancelSuccess","className":"NotificationService","packageName":"notification.service","methodId":"notification.service.NotificationService.orderCancelSuccess","classId":"notification.service.NotificationService","line":46,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean preserveSuccess(NotifyInfo info, HttpHeaders headers){\n        Mail mail \u003d new Mail();\n        mail.setMailFrom(email);\n        mail.setMailTo(info.getEmail());\n        mail.setMailSubject(\"Preserve Success\");\n\n        Map\u003cString, Object\u003e model \u003d new HashMap\u003c\u003e();\n        model.put(username, info.getUsername());\n        model.put(startingPlace,info.getStartingPlace());\n        model.put(endPlace,info.getEndPlace());\n        model.put(startingTime,info.getStartingTime());\n        model.put(\"date\",info.getDate());\n        model.put(seatClass,info.getSeatClass());\n        model.put(seatNumber,info.getSeatNumber());\n        model.put(\"price\",info.getPrice());\n        mail.setModel(model);\n\n        try {\n            mailService.sendEmail(mail,\"preserve_success.ftl\");\n            return true;\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return false;\n        }\n    }","returnType":"boolean","methodName":"preserveSuccess","className":"NotificationServiceImpl","packageName":"notification.service","methodId":"notification.service.NotificationServiceImpl.preserveSuccess","classId":"notification.service.NotificationServiceImpl","line":36,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean orderCreateSuccess(NotifyInfo info, HttpHeaders headers){\n        Mail mail \u003d new Mail();\n        mail.setMailFrom(email);\n        mail.setMailTo(info.getEmail());\n        mail.setMailSubject(\"Order Create Success\");\n\n        Map\u003cString, Object\u003e model \u003d new HashMap\u003c\u003e();\n        model.put(username, info.getUsername());\n        model.put(startingPlace,info.getStartingPlace());\n        model.put(endPlace,info.getEndPlace());\n        model.put(startingTime,info.getStartingTime());\n        model.put(\"date\",info.getDate());\n        model.put(seatClass,info.getSeatClass());\n        model.put(seatNumber,info.getSeatNumber());\n        model.put(\"orderNumber\", info.getOrderNumber());\n        mail.setModel(model);\n\n        try {\n            mailService.sendEmail(mail,\"order_create_success.ftl\");\n            return true;\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return false;\n        }\n    }","returnType":"boolean","methodName":"orderCreateSuccess","className":"NotificationServiceImpl","packageName":"notification.service","methodId":"notification.service.NotificationServiceImpl.orderCreateSuccess","classId":"notification.service.NotificationServiceImpl","line":63,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean orderChangedSuccess(NotifyInfo info, HttpHeaders headers){\n        Mail mail \u003d new Mail();\n        mail.setMailFrom(email);\n        mail.setMailTo(info.getEmail());\n        mail.setMailSubject(\"Order Changed Success\");\n\n        Map\u003cString, Object\u003e model \u003d new HashMap\u003c\u003e();\n        model.put(username, info.getUsername());\n        model.put(startingPlace,info.getStartingPlace());\n        model.put(endPlace,info.getEndPlace());\n        model.put(startingTime,info.getStartingTime());\n        model.put(\"date\",info.getDate());\n        model.put(seatClass,info.getSeatClass());\n        model.put(seatNumber,info.getSeatNumber());\n        model.put(\"orderNumber\", info.getOrderNumber());\n        mail.setModel(model);\n\n        try {\n            mailService.sendEmail(mail,\"order_changed_success.ftl\");\n            return true;\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return false;\n        }\n    }","returnType":"boolean","methodName":"orderChangedSuccess","className":"NotificationServiceImpl","packageName":"notification.service","methodId":"notification.service.NotificationServiceImpl.orderChangedSuccess","classId":"notification.service.NotificationServiceImpl","line":90,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean orderCancelSuccess(NotifyInfo info, HttpHeaders headers){\n        Mail mail \u003d new Mail();\n        mail.setMailFrom(email);\n        mail.setMailTo(info.getEmail());\n        mail.setMailSubject(\"Order Cancel Success\");\n\n        Map\u003cString, Object\u003e model \u003d new HashMap\u003c\u003e();\n        model.put(username, info.getUsername());\n        model.put(\"price\",info.getPrice());\n        mail.setModel(model);\n\n        try {\n            mailService.sendEmail(mail,\"order_cancel_success.ftl\");\n            return true;\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return false;\n        }\n    }","returnType":"boolean","methodName":"orderCancelSuccess","className":"NotificationServiceImpl","packageName":"notification.service","methodId":"notification.service.NotificationServiceImpl.orderCancelSuccess","classId":"notification.service.NotificationServiceImpl","line":117,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-notification-service/src/main/java/notification/service/MailService.java","directoryName":""},"code":"public void sendEmail(Mail mail,String template) throws Exception {\n        MimeMessage message \u003d sender.createMimeMessage();\n\n        MimeMessageHelper helper \u003d new MimeMessageHelper(message);\n\n        // Using a subfolder such as /templates here\n        freemarkerConfig.setClassForTemplateLoading(this.getClass(), \"/templates\");\n\n        Template t \u003d freemarkerConfig.getTemplate(template);\n        String text \u003d FreeMarkerTemplateUtils.processTemplateIntoString(t, mail.getModel());\n\n        helper.setTo(mail.getMailTo());\n        helper.setText(text, true);\n        helper.setFrom(\"fdse_microservices@163.com\");\n        helper.setSubject(mail.getMailSubject());\n\n        sender.send(message);\n    }","returnType":"void","methodName":"sendEmail","className":"MailService","packageName":"notification.service","methodId":"notification.service.MailService.sendEmail","classId":"notification.service.MailService","line":30,"msArgumentList":[{"returnType":"Mail"},{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Station Service ] !\";\n    }","returnType":"String","methodName":"home","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.home","classId":"fdse.microservice.controller.StationController","line":28,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/stations\")\n    public HttpEntity query(@RequestHeader HttpHeaders headers) {\n        return ok(stationService.query(headers));\n    }","returnType":"HttpEntity","methodName":"query","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.query","classId":"fdse.microservice.controller.StationController","line":33,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/stations\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/stations\")\n    public ResponseEntity\u003cResponse\u003e create(@RequestBody Station station, @RequestHeader HttpHeaders headers) {\n        return new ResponseEntity\u003c\u003e(stationService.create(station, headers), HttpStatus.CREATED);\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"create","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.create","classId":"fdse.microservice.controller.StationController","line":38,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/stations\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@PutMapping(value \u003d \"/stations\")\n    public HttpEntity update(@RequestBody Station station, @RequestHeader HttpHeaders headers) {\n        return ok(stationService.update(station, headers));\n    }","returnType":"HttpEntity","methodName":"update","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.update","classId":"fdse.microservice.controller.StationController","line":43,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/stations\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/stations\")\n    public ResponseEntity\u003cResponse\u003e delete(@RequestBody Station station, @RequestHeader HttpHeaders headers) {\n        return ok(stationService.delete(station, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"delete","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.delete","classId":"fdse.microservice.controller.StationController","line":48,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/stations\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/stations/id/{stationNameForId}\")\n    public HttpEntity queryForStationId(@PathVariable(value \u003d \"stationNameForId\")\n                                                String stationName, @RequestHeader HttpHeaders headers) {\n        // string\n        return ok(stationService.queryForId(stationName, headers));\n    }","returnType":"HttpEntity","methodName":"queryForStationId","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.queryForStationId","classId":"fdse.microservice.controller.StationController","line":56,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/stations/id/{stationNameForId}\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/stations/idlist\")\n    public HttpEntity queryForIdBatch(@RequestBody List\u003cString\u003e stationNameList, @RequestHeader HttpHeaders headers) {\n        return ok(stationService.queryForIdBatch(stationNameList, headers));\n    }","returnType":"HttpEntity","methodName":"queryForIdBatch","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.queryForIdBatch","classId":"fdse.microservice.controller.StationController","line":64,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/stations/idlist\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/stations/name/{stationIdForName}\")\n    public HttpEntity queryById(@PathVariable(value \u003d \"stationIdForName\")\n                                        String stationId, @RequestHeader HttpHeaders headers) {\n        StationController.LOGGER.info(\"[Station Service] Query By Id: {}\", stationId);\n        // string\n        return ok(stationService.queryById(stationId, headers));\n    }","returnType":"HttpEntity","methodName":"queryById","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.queryById","classId":"fdse.microservice.controller.StationController","line":71,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/stations/name/{stationIdForName}\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/stations/namelist\")\n    public HttpEntity queryForNameBatch(@RequestBody List\u003cString\u003e stationIdList, @RequestHeader HttpHeaders headers) {\n        return ok(stationService.queryByIdBatch(stationIdList, headers));\n    }","returnType":"HttpEntity","methodName":"queryForNameBatch","className":"StationController","packageName":"fdse.microservice.controller","methodId":"fdse.microservice.controller.StationController.queryForNameBatch","classId":"fdse.microservice.controller.StationController","line":81,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/stations/namelist\""}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java","directoryName":""},"code":"Station findByName(String name);","returnType":"Station","methodName":"findByName","className":"StationRepository","packageName":"fdse.microservice.repository","methodId":"fdse.microservice.repository.StationRepository.findByName","classId":"fdse.microservice.repository.StationRepository","line":11,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java","directoryName":""},"code":"Station findById(String id);","returnType":"Station","methodName":"findById","className":"StationRepository","packageName":"fdse.microservice.repository","methodId":"fdse.microservice.repository.StationRepository.findById","classId":"fdse.microservice.repository.StationRepository","line":13,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java","directoryName":""},"code":"@Override\n    List\u003cStation\u003e findAll();","returnType":"List\u003cStation\u003e","methodName":"findAll","className":"StationRepository","packageName":"fdse.microservice.repository","methodId":"fdse.microservice.repository.StationRepository.findAll","classId":"fdse.microservice.repository.StationRepository","line":15,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(Station station, HttpHeaders headers) {\n        if (repository.findById(station.getId()) \u003d\u003d null) {\n            station.setStayTime(station.getStayTime());\n            repository.save(station);\n            return new Response\u003c\u003e(1, \"Create success\", station);\n        }\n        return new Response\u003c\u003e(0, \"Already exists\", station);\n    }","returnType":"Response","methodName":"create","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.create","classId":"fdse.microservice.service.StationServiceImpl","line":22,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean exist(String stationName, HttpHeaders headers) {\n        boolean result \u003d false;\n        if (repository.findByName(stationName) !\u003d null) {\n            result \u003d true;\n        }\n        return result;\n    }","returnType":"boolean","methodName":"exist","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.exist","classId":"fdse.microservice.service.StationServiceImpl","line":33,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response update(Station info, HttpHeaders headers) {\n\n        if (repository.findById(info.getId()) \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"Station not exist\", null);\n        } else {\n            Station station \u003d new Station(info.getId(), info.getName());\n            station.setStayTime(info.getStayTime());\n            repository.save(station);\n            return new Response\u003c\u003e(1, \"Update success\", station);\n        }\n    }","returnType":"Response","methodName":"update","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.update","classId":"fdse.microservice.service.StationServiceImpl","line":42,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response delete(Station info, HttpHeaders headers) {\n\n        if (repository.findById(info.getId()) !\u003d null) {\n            Station station \u003d new Station(info.getId(), info.getName());\n            repository.delete(station);\n            return new Response\u003c\u003e(1, \"Delete success\", station);\n        }\n        return new Response\u003c\u003e(0, \"Station not exist\", null);\n    }","returnType":"Response","methodName":"delete","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.delete","classId":"fdse.microservice.service.StationServiceImpl","line":55,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response query(HttpHeaders headers) {\n        List\u003cStation\u003e stations \u003d repository.findAll();\n        if (stations !\u003d null \u0026\u0026 !stations.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Find all content\", stations);\n        } else {\n            return new Response\u003c\u003e(0, \"No content\", null);\n        }\n    }","returnType":"Response","methodName":"query","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.query","classId":"fdse.microservice.service.StationServiceImpl","line":66,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForId(String stationName, HttpHeaders headers) {\n        Station station \u003d repository.findByName(stationName);\n\n        if (station  !\u003d null) {\n            return new Response\u003c\u003e(1, success, station.getId());\n        } else {\n            return new Response\u003c\u003e(0, \"Not exists\", stationName);\n        }\n    }","returnType":"Response","methodName":"queryForId","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.queryForId","classId":"fdse.microservice.service.StationServiceImpl","line":76,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForIdBatch(List\u003cString\u003e nameList, HttpHeaders headers) {\n        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c nameList.size(); i++) {\n            Station station \u003d repository.findByName(nameList.get(i));\n            if (station \u003d\u003d null) {\n                result.add(\"Not Exist\");\n            } else {\n                result.add(station.getId());\n            }\n        }\n\n        if (!result.isEmpty()) {\n            return new Response\u003c\u003e(1, success, result);\n        } else {\n            return new Response\u003c\u003e(0, \"No content according to name list\", null);\n        }\n\n    }","returnType":"Response","methodName":"queryForIdBatch","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.queryForIdBatch","classId":"fdse.microservice.service.StationServiceImpl","line":88,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryById(String stationId, HttpHeaders headers) {\n        Station station \u003d repository.findById(stationId);\n        if (station !\u003d null) {\n            return new Response\u003c\u003e(1, success, station.getName());\n        } else {\n            return new Response\u003c\u003e(0, \"No that stationId\", stationId);\n        }\n    }","returnType":"Response","methodName":"queryById","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.queryById","classId":"fdse.microservice.service.StationServiceImpl","line":108,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryByIdBatch(List\u003cString\u003e idList, HttpHeaders headers) {\n        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c idList.size(); i++) {\n            Station station \u003d repository.findById(idList.get(i));\n            if (station !\u003d null) {\n                result.add(station.getName());\n            }\n        }\n\n        if (!result.isEmpty()) {\n            return new Response\u003c\u003e(1, success, result);\n        } else {\n            return new Response\u003c\u003e(0, \"No stationNamelist according to stationIdList\", result);\n        }\n\n    }","returnType":"Response","methodName":"queryByIdBatch","className":"StationServiceImpl","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationServiceImpl.queryByIdBatch","classId":"fdse.microservice.service.StationServiceImpl","line":118,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response create(Station info, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.create","classId":"fdse.microservice.service.StationService","line":11,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"boolean exist(String stationName, HttpHeaders headers);","returnType":"boolean","methodName":"exist","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.exist","classId":"fdse.microservice.service.StationService","line":13,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response update(Station info, HttpHeaders headers);","returnType":"Response","methodName":"update","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.update","classId":"fdse.microservice.service.StationService","line":15,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response delete(Station info, HttpHeaders headers);","returnType":"Response","methodName":"delete","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.delete","classId":"fdse.microservice.service.StationService","line":17,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response query(HttpHeaders headers);","returnType":"Response","methodName":"query","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.query","classId":"fdse.microservice.service.StationService","line":19,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response queryForId(String stationName, HttpHeaders headers);","returnType":"Response","methodName":"queryForId","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.queryForId","classId":"fdse.microservice.service.StationService","line":21,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response queryForIdBatch(List\u003cString\u003e nameList, HttpHeaders headers);","returnType":"Response","methodName":"queryForIdBatch","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.queryForIdBatch","classId":"fdse.microservice.service.StationService","line":23,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response queryById(String stationId, HttpHeaders headers);","returnType":"Response","methodName":"queryById","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.queryById","classId":"fdse.microservice.service.StationService","line":25,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-station-service/src/main/java/fdse/microservice/service/StationService.java","directoryName":""},"code":"Response queryByIdBatch(List\u003cString\u003e stationIdList, HttpHeaders headers);","returnType":"Response","methodName":"queryByIdBatch","className":"StationService","packageName":"fdse.microservice.service","methodId":"fdse.microservice.service.StationService.queryByIdBatch","classId":"fdse.microservice.service.StationService","line":27,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ TicketInfo Service ] !\";\n    }","returnType":"String","methodName":"home","className":"TicketInfoController","packageName":"ticketinfo.controller","methodId":"ticketinfo.controller.TicketInfoController.home","classId":"ticketinfo.controller.TicketInfoController","line":23,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/ticketinfo\")\n    public HttpEntity queryForTravel(@RequestBody Travel info, @RequestHeader HttpHeaders headers) {\n        // TravelResult\n        return ok(service.queryForTravel(info, headers));\n    }","returnType":"HttpEntity","methodName":"queryForTravel","className":"TicketInfoController","packageName":"ticketinfo.controller","methodId":"ticketinfo.controller.TicketInfoController.queryForTravel","classId":"ticketinfo.controller.TicketInfoController","line":28,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/ticketinfo\""}]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/ticketinfo/{name}\")\n    public HttpEntity queryForStationId(@PathVariable String name, @RequestHeader HttpHeaders headers) {\n        // String id\n        return ok(service.queryForStationId(name, headers));\n    }","returnType":"HttpEntity","methodName":"queryForStationId","className":"TicketInfoController","packageName":"ticketinfo.controller","methodId":"ticketinfo.controller.TicketInfoController.queryForStationId","classId":"ticketinfo.controller.TicketInfoController","line":34,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/ticketinfo/{name}\""}]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoService.java","directoryName":""},"code":"Response queryForTravel(Travel info, HttpHeaders headers);","returnType":"Response","methodName":"queryForTravel","className":"TicketInfoService","packageName":"ticketinfo.service","methodId":"ticketinfo.service.TicketInfoService.queryForTravel","classId":"ticketinfo.service.TicketInfoService","line":11,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoService.java","directoryName":""},"code":"Response queryForStationId(String name,HttpHeaders headers);","returnType":"Response","methodName":"queryForStationId","className":"TicketInfoService","packageName":"ticketinfo.service","methodId":"ticketinfo.service.TicketInfoService.queryForStationId","classId":"ticketinfo.service.TicketInfoService","line":12,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForTravel(Travel info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-basic-service:15680/api/v1/basicservice/basic/travel\",\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"queryForTravel","className":"TicketInfoServiceImpl","packageName":"ticketinfo.service","methodId":"ticketinfo.service.TicketInfoServiceImpl.queryForTravel","classId":"ticketinfo.service.TicketInfoServiceImpl","line":22,"msArgumentList":[{"returnType":"Travel"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryForStationId(String name, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-basic-service:15680/api/v1/basicservice/basic/\" + name,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"queryForStationId","className":"TicketInfoServiceImpl","packageName":"ticketinfo.service","methodId":"ticketinfo.service.TicketInfoServiceImpl.queryForStationId","classId":"ticketinfo.service.TicketInfoServiceImpl","line":33,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/controller/CancelController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Cancel Service ] !\";\n    }","returnType":"String","methodName":"home","className":"CancelController","packageName":"cancel.controller","methodId":"cancel.controller.CancelController.home","classId":"cancel.controller.CancelController","line":25,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/controller/CancelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/cancel/refound/{orderId}\")\n    public HttpEntity calculate(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        CancelController.LOGGER.info(\"[Cancel Order Service][Calculate Cancel Refund] OrderId: {}\", orderId);\n        return ok(cancelService.calculateRefund(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"calculate","className":"CancelController","packageName":"cancel.controller","methodId":"cancel.controller.CancelController.calculate","classId":"cancel.controller.CancelController","line":30,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/cancel/refound/{orderId}\""}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/controller/CancelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/cancel/{orderId}/{loginId}\")\n    public HttpEntity cancelTicket(@PathVariable String orderId, @PathVariable String loginId,\n                                   @RequestHeader HttpHeaders headers) {\n\n        CancelController.LOGGER.info(\"[Cancel Order Service][Cancel Ticket] info: {}\", orderId);\n        try {\n            CancelController.LOGGER.info(\"[Cancel Order Service][Cancel Ticket] Verify Success\");\n            return ok(cancelService.cancelOrder(orderId, loginId, headers));\n        } catch (Exception e) {\n            LOGGER.error(e.getMessage());\n            return null;\n        }\n    }","returnType":"HttpEntity","methodName":"cancelTicket","className":"CancelController","packageName":"cancel.controller","methodId":"cancel.controller.CancelController.cancelTicket","classId":"cancel.controller.CancelController","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/cancel/{orderId}/{loginId}\""}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response cancelOrder(String orderId, String loginId, HttpHeaders headers) {\n\n        Response\u003cOrder\u003e orderResult \u003d getOrderByIdFromOrder(orderId, headers);\n        if (orderResult.getStatus() \u003d\u003d 1) {\n            CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order found G|H\");\n            Order order \u003d  orderResult.getData();\n            if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()\n                    || order.getStatus() \u003d\u003d OrderStatus.PAID.getCode() || order.getStatus() \u003d\u003d OrderStatus.CHANGE.getCode()) {\n\n                order.setStatus(OrderStatus.CANCEL.getCode());\n\n                Response changeOrderResult \u003d cancelFromOrder(order, headers);\n                // 0 -- not find order   1 - cancel success\n                if (changeOrderResult.getStatus() \u003d\u003d 1) {\n\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Success.\");\n                    //Draw back money\n                    String money \u003d calculateRefund(order);\n                    boolean status \u003d drawbackMoney(money, loginId, headers);\n                    if (status) {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Draw Back Money] Success.\");\n\n\n\n                        Response\u003cUser\u003e result \u003d getAccount(order.getAccountId().toString(), headers);\n                        if (result.getStatus() \u003d\u003d 0) {\n                            return new Response\u003c\u003e(0, \"Cann\u0027t find userinfo by user id.\", null);\n                        }\n                        NotifyInfo notifyInfo \u003d new NotifyInfo();\n                        notifyInfo.setDate(new Date().toString());\n                        notifyInfo.setEmail(result.getData().getEmail());\n                        notifyInfo.setStartingPlace(order.getFrom());\n                        notifyInfo.setEndPlace(order.getTo());\n                        notifyInfo.setUsername(result.getData().getUserName());\n                        notifyInfo.setSeatNumber(order.getSeatNumber());\n                        notifyInfo.setOrderNumber(order.getId().toString());\n                        notifyInfo.setPrice(order.getPrice());\n                        notifyInfo.setSeatClass(SeatClass.getNameByCode(order.getSeatClass()));\n                        notifyInfo.setStartingTime(order.getTravelTime().toString());\n\n                        sendEmail(notifyInfo, headers);\n\n                    } else {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Draw Back Money] Fail.\");\n                    }\n                    return new Response\u003c\u003e(1, \"Success.\", null);\n                } else {\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Fail.Reason: {}\", changeOrderResult.getMsg());\n                    return new Response\u003c\u003e(0, changeOrderResult.getMsg(), null);\n                }\n\n            } else {\n                CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order Status Not Permitted.\");\n                return new Response\u003c\u003e(0, orderStatusCancelNotPermitted, null);\n            }\n        } else {\n\n            Response\u003cOrder\u003e orderOtherResult \u003d getOrderByIdFromOrderOther(orderId, headers);\n            if (orderOtherResult.getStatus() \u003d\u003d 1) {\n                CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order found Z|K|Other\");\n\n                Order order \u003d   orderOtherResult.getData();\n                if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()\n                        || order.getStatus() \u003d\u003d OrderStatus.PAID.getCode() || order.getStatus() \u003d\u003d OrderStatus.CHANGE.getCode()) {\n\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order status ok\");\n\n                    order.setStatus(OrderStatus.CANCEL.getCode());\n                    Response changeOrderResult \u003d cancelFromOtherOrder(order, headers);\n\n                    if (changeOrderResult.getStatus() \u003d\u003d 1) {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Success.\");\n                        //Draw back money\n                        String money \u003d calculateRefund(order);\n                        boolean status \u003d drawbackMoney(money, loginId, headers);\n                        if (status) {\n                            CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Draw Back Money] Success.\");\n                        } else {\n                            CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Draw Back Money] Fail.\");\n                        }\n                        return new Response\u003c\u003e(1, \"Success.\", null);\n                    } else {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Fail.Reason: {}\", changeOrderResult.getMsg());\n                        return new Response\u003c\u003e(0, \"Fail.Reason:\" + changeOrderResult.getMsg(), null);\n                    }\n                } else {\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order Status Not Permitted.\");\n                    return new Response\u003c\u003e(0, orderStatusCancelNotPermitted, null);\n                }\n            } else {\n                CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Cancel Order] Order Not Found.\");\n                return new Response\u003c\u003e(0, \"Order Not Found.\", null);\n            }\n        }\n    }","returnType":"Response","methodName":"cancelOrder","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.cancelOrder","classId":"cancel.service.CancelServiceImpl","line":33,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"public boolean sendEmail(NotifyInfo notifyInfo, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Send Email]\");\n        HttpEntity requestEntity \u003d new HttpEntity(notifyInfo, headers);\n        ResponseEntity\u003cBoolean\u003e re \u003d restTemplate.exchange(\n                \"http://ts-notification-service:17853/api/v1/notifyservice/notification/order_cancel_success\",\n                HttpMethod.POST,\n                requestEntity,\n                Boolean.class);\n        return re.getBody();\n    }","returnType":"boolean","methodName":"sendEmail","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.sendEmail","classId":"cancel.service.CancelServiceImpl","line":130,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response calculateRefund(String orderId, HttpHeaders headers) {\n\n        Response\u003cOrder\u003e orderResult \u003d getOrderByIdFromOrder(orderId, headers);\n        if (orderResult.getStatus() \u003d\u003d 1) {\n            Order order \u003d   orderResult.getData();\n            if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()\n                    || order.getStatus() \u003d\u003d OrderStatus.PAID.getCode()) {\n                if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()) {\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] From Order Service.Not Paid.\");\n                    return new Response\u003c\u003e(1, \"Success. Refoud 0\", \"0\");\n                } else {\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] From Order Service.Paid.\");\n                    return new Response\u003c\u003e(1, \"Success. \", calculateRefund(order));\n                }\n            } else {\n                CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] Order. Cancel Not Permitted.\");\n                return new Response\u003c\u003e(0, \"Order Status Cancel Not Permitted, Refound error\", null);\n            }\n        } else {\n\n            Response\u003cOrder\u003e orderOtherResult \u003d getOrderByIdFromOrderOther(orderId, headers);\n            if (orderOtherResult.getStatus() \u003d\u003d 1) {\n                Order order \u003d   orderOtherResult.getData();\n                if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()\n                        || order.getStatus() \u003d\u003d OrderStatus.PAID.getCode()) {\n                    if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()) {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] From Order Other Service.Not Paid.\");\n                        return new Response\u003c\u003e(1, \"Success, Refound 0\", \"0\");\n                    } else {\n                        CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] From Order Other Service.Paid.\");\n                        return new Response\u003c\u003e(1, \"Success\", calculateRefund(order));\n                    }\n                } else {\n                    CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] Order Other. Cancel Not Permitted.\");\n                    return new Response\u003c\u003e(0, orderStatusCancelNotPermitted, null);\n                }\n            } else {\n                CancelServiceImpl.LOGGER.info(\"[Cancel Order][Refund Price] Order not found.\");\n                return new Response\u003c\u003e(0, \"Order Not Found\", null);\n            }\n        }\n    }","returnType":"Response","methodName":"calculateRefund","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.calculateRefund","classId":"cancel.service.CancelServiceImpl","line":141,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"private String calculateRefund(Order order) {\n        if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode()) {\n            return \"0.00\";\n        }\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order] Order Travel Date: {}\", order.getTravelDate().toString());\n        Date nowDate \u003d new Date();\n        Calendar cal \u003d Calendar.getInstance();\n        cal.setTime(order.getTravelDate());\n        int year \u003d cal.get(Calendar.YEAR);\n        int month \u003d cal.get(Calendar.MONTH);\n        int day \u003d cal.get(Calendar.DAY_OF_MONTH);\n        Calendar cal2 \u003d Calendar.getInstance();\n        cal2.setTime(order.getTravelTime());\n        int hour \u003d cal2.get(Calendar.HOUR);\n        int minute \u003d cal2.get(Calendar.MINUTE);\n        int second \u003d cal2.get(Calendar.SECOND);\n        Date startTime \u003d new Date(year,  //NOSONAR\n                month,\n                day,\n                hour,\n                minute,\n                second);\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order] nowDate  : {}\", nowDate);\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order] startTime: {}\", startTime);\n        if (nowDate.after(startTime)) {\n            CancelServiceImpl.LOGGER.info(\"[Cancel Order] Ticket expire refund 0\");\n            return \"0\";\n        } else {\n            double totalPrice \u003d Double.parseDouble(order.getPrice());\n            double price \u003d totalPrice * 0.8;\n            DecimalFormat priceFormat \u003d new java.text.DecimalFormat(\"0.00\");\n            String str \u003d priceFormat.format(price);\n            CancelServiceImpl.LOGGER.info(\"[Cancel Order]calculate refund - {}\", str);\n            return str;\n        }\n    }","returnType":"String","methodName":"calculateRefund","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.calculateRefund","classId":"cancel.service.CancelServiceImpl","line":185,"msArgumentList":[{"returnType":"Order"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"private Response cancelFromOrder(Order order, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Change Order Status] Changing....\");\n\n        HttpEntity requestEntity \u003d new HttpEntity(order, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order\",\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"cancelFromOrder","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.cancelFromOrder","classId":"cancel.service.CancelServiceImpl","line":223,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"private Response cancelFromOtherOrder(Order info, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Change Order Status] Changing....\");\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\",\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"cancelFromOtherOrder","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.cancelFromOtherOrder","classId":"cancel.service.CancelServiceImpl","line":236,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"public boolean drawbackMoney(String money, String userId, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Draw Back Money] Draw back money...\");\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-inside-payment-service:18673/api/v1/inside_pay_service/inside_payment/drawback/\" + userId + \"/\" + money,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response result \u003d re.getBody();\n\n        return result.getStatus() \u003d\u003d 1;\n    }","returnType":"boolean","methodName":"drawbackMoney","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.drawbackMoney","classId":"cancel.service.CancelServiceImpl","line":248,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"public Response\u003cUser\u003e getAccount(String orderId, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Get By Id]\");\n        HttpEntity requestEntity \u003d new HttpEntity( headers);\n        ResponseEntity\u003cResponse\u003cUser\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-user-service:12342/api/v1/userservice/users/id/\" + orderId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response\u003cUser\u003e","methodName":"getAccount","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.getAccount","classId":"cancel.service.CancelServiceImpl","line":262,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e getOrderByIdFromOrder(String orderId, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Get Order] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response\u003cOrder\u003e","methodName":"getOrderByIdFromOrder","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.getOrderByIdFromOrder","classId":"cancel.service.CancelServiceImpl","line":274,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e getOrderByIdFromOrderOther(String orderId, HttpHeaders headers) {\n        CancelServiceImpl.LOGGER.info(\"[Cancel Order Service][Get Order] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(  headers);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response\u003cOrder\u003e","methodName":"getOrderByIdFromOrderOther","className":"CancelServiceImpl","packageName":"cancel.service","methodId":"cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther","classId":"cancel.service.CancelServiceImpl","line":286,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelService.java","directoryName":""},"code":"Response cancelOrder(String orderId, String loginId, HttpHeaders headers);","returnType":"Response","methodName":"cancelOrder","className":"CancelService","packageName":"cancel.service","methodId":"cancel.service.CancelService.cancelOrder","classId":"cancel.service.CancelService","line":20,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-cancel-service/src/main/java/cancel/service/CancelService.java","directoryName":""},"code":"Response calculateRefund(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"calculateRefund","className":"CancelService","packageName":"cancel.service","methodId":"cancel.service.CancelService.calculateRefund","classId":"cancel.service.CancelService","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Travel Service ] !\";\n    }","returnType":"String","methodName":"home","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.home","classId":"travel.controller.TravelController","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/train_types/{tripId}\")\n    public HttpEntity getTrainTypeByTripId(@PathVariable String tripId,\n                                           @RequestHeader HttpHeaders headers) {\n        // TrainType\n        return ok(travelService.getTrainTypeByTripId(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getTrainTypeByTripId","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.getTrainTypeByTripId","classId":"travel.controller.TravelController","line":36,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/train_types/{tripId}\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/routes/{tripId}\")\n    public HttpEntity getRouteByTripId(@PathVariable String tripId,\n                                       @RequestHeader HttpHeaders headers) {\n        TravelController.LOGGER.info(\"[Get Route By Trip ID] TripId: {}\", tripId);\n        //Route\n        return ok(travelService.getRouteByTripId(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getRouteByTripId","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.getRouteByTripId","classId":"travel.controller.TravelController","line":43,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/routes/{tripId}\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/trips/routes\")\n    public HttpEntity getTripsByRouteId(@RequestBody ArrayList\u003cString\u003e routeIds,\n                                        @RequestHeader HttpHeaders headers) {\n        // ArrayList\u003cArrayList\u003cTrip\u003e\u003e\n        return ok(travelService.getTripByRoute(routeIds, headers));\n    }","returnType":"HttpEntity","methodName":"getTripsByRouteId","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.getTripsByRouteId","classId":"travel.controller.TravelController","line":51,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips/routes\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trips\")\n    public HttpEntity\u003c?\u003e createTrip(@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers) {\n        // null\n        return new ResponseEntity\u003c\u003e(travelService.create(routeIds, headers), HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003c?\u003e","methodName":"createTrip","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.createTrip","classId":"travel.controller.TravelController","line":58,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trips/{tripId}\")\n    public HttpEntity retrieve(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        // Trip\n        return ok(travelService.retrieve(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"retrieve","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.retrieve","classId":"travel.controller.TravelController","line":72,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trips/{tripId}\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(value \u003d \"/trips\")\n    public HttpEntity updateTrip(@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers) {\n        // Trip\n        return ok(travelService.update(info, headers));\n    }","returnType":"HttpEntity","methodName":"updateTrip","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.updateTrip","classId":"travel.controller.TravelController","line":79,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(value \u003d \"/trips/{tripId}\")\n    public HttpEntity deleteTrip(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        // string\n        return ok(travelService.delete(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteTrip","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.deleteTrip","classId":"travel.controller.TravelController","line":86,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/trips/{tripId}\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trips/left\")\n    public HttpEntity queryInfo(@RequestBody TripInfo info, @RequestHeader HttpHeaders headers) {\n        if (info.getStartingPlace() \u003d\u003d null || info.getStartingPlace().length() \u003d\u003d 0 ||\n                info.getEndPlace() \u003d\u003d null || info.getEndPlace().length() \u003d\u003d 0 ||\n                info.getDepartureTime() \u003d\u003d null) {\n            TravelController.LOGGER.info(\"[Travel Service][Travel Query] Fail.Something null.\");\n            ArrayList\u003cTripResponse\u003e errorList \u003d new ArrayList\u003c\u003e();\n            return ok(errorList);\n        }\n        TravelController.LOGGER.info(\"[Travel Service] Query TripResponse\");\n        return ok(travelService.query(info, headers));\n    }","returnType":"HttpEntity","methodName":"queryInfo","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.queryInfo","classId":"travel.controller.TravelController","line":100,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips/left\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trip_detail\")\n    public HttpEntity getTripAllDetailInfo(@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers) {\n        // TripAllDetailInfo\n        // TripAllDetail tripAllDetail\n        return ok(travelService.getTripAllDetailInfo(gtdi, headers));\n    }","returnType":"HttpEntity","methodName":"getTripAllDetailInfo","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.getTripAllDetailInfo","classId":"travel.controller.TravelController","line":121,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trip_detail\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trips\")\n    public HttpEntity queryAll(@RequestHeader HttpHeaders headers) {\n        // List\u003cTrip\u003e\n        return ok(travelService.queryAll(headers));\n    }","returnType":"HttpEntity","methodName":"queryAll","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.queryAll","classId":"travel.controller.TravelController","line":129,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/controller/TravelController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/admin_trip\")\n    public HttpEntity adminQueryAll(@RequestHeader HttpHeaders headers) {\n        // ArrayList\u003cAdminTrip\u003e\n        return ok(travelService.adminQueryAll(headers));\n    }","returnType":"HttpEntity","methodName":"adminQueryAll","className":"TravelController","packageName":"travel.controller","methodId":"travel.controller.TravelController.adminQueryAll","classId":"travel.controller.TravelController","line":136,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/admin_trip\""}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/repository/TripRepository.java","directoryName":""},"code":"Trip findByTripId(TripId tripId);","returnType":"Trip","methodName":"findByTripId","className":"TripRepository","packageName":"travel.repository","methodId":"travel.repository.TripRepository.findByTripId","classId":"travel.repository.TripRepository","line":14,"msArgumentList":[{"returnType":"TripId"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/repository/TripRepository.java","directoryName":""},"code":"void deleteByTripId(TripId tripId);","returnType":"void","methodName":"deleteByTripId","className":"TripRepository","packageName":"travel.repository","methodId":"travel.repository.TripRepository.deleteByTripId","classId":"travel.repository.TripRepository","line":16,"msArgumentList":[{"returnType":"TripId"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/repository/TripRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cTrip\u003e findAll();","returnType":"ArrayList\u003cTrip\u003e","methodName":"findAll","className":"TripRepository","packageName":"travel.repository","methodId":"travel.repository.TripRepository.findAll","classId":"travel.repository.TripRepository","line":18,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/repository/TripRepository.java","directoryName":""},"code":"ArrayList\u003cTrip\u003e findByRouteId(String routeId);","returnType":"ArrayList\u003cTrip\u003e","methodName":"findByRouteId","className":"TripRepository","packageName":"travel.repository","methodId":"travel.repository.TripRepository.findByRouteId","classId":"travel.repository.TripRepository","line":21,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(TravelInfo info, HttpHeaders headers) {\n        TripId ti \u003d new TripId(info.getTripId());\n        if (repository.findByTripId(ti) \u003d\u003d null) {\n            Trip trip \u003d new Trip(ti, info.getTrainTypeId(), info.getStartingStationId(),\n                    info.getStationsId(), info.getTerminalStationId(), info.getStartingTime(), info.getEndTime());\n            trip.setRouteId(info.getRouteId());\n            repository.save(trip);\n            return new Response\u003c\u003e(1, \"Create trip:\" + ti.toString() + \".\", null);\n        } else {\n            return new Response\u003c\u003e(1, \"Trip \" + info.getTripId().toString() + \" already exists\", null);\n        }\n    }","returnType":"Response","methodName":"create","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.create","classId":"travel.service.TravelServiceImpl","line":37,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getRouteByTripId(String tripId, HttpHeaders headers) {\n        Route route \u003d null;\n        if (null !\u003d tripId \u0026\u0026 tripId.length() \u003e\u003d 2) {\n            TripId tripId1 \u003d new TripId(tripId);\n            Trip trip \u003d repository.findByTripId(tripId1);\n            if (trip !\u003d null) {\n                route \u003d getRouteByRouteId(trip.getRouteId(), headers);\n            }\n        }\n        if (route !\u003d null) {\n            return new Response\u003c\u003e(1, success, route);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"getRouteByTripId","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getRouteByTripId","classId":"travel.service.TravelServiceImpl","line":51,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTrainTypeByTripId(String tripId, HttpHeaders headers) {\n        TripId tripId1 \u003d new TripId(tripId);\n        TrainType trainType \u003d null;\n        Trip trip \u003d repository.findByTripId(tripId1);\n        if (trip !\u003d null) {\n            trainType \u003d getTrainType(trip.getTrainTypeId(), headers);\n        }\n        if (trainType !\u003d null) {\n            return new Response\u003c\u003e(1, success, trainType);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"getTrainTypeByTripId","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getTrainTypeByTripId","classId":"travel.service.TravelServiceImpl","line":68,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTripByRoute(ArrayList\u003cString\u003e routeIds, HttpHeaders headers) {\n        ArrayList\u003cArrayList\u003cTrip\u003e\u003e tripList \u003d new ArrayList\u003c\u003e();\n        for (String routeId : routeIds) {\n            ArrayList\u003cTrip\u003e tempTripList \u003d repository.findByRouteId(routeId);\n            if (tempTripList \u003d\u003d null) {\n                tempTripList \u003d new ArrayList\u003c\u003e();\n            }\n            tripList.add(tempTripList);\n        }\n        if (!tripList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, tripList);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"getTripByRoute","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getTripByRoute","classId":"travel.service.TravelServiceImpl","line":83,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response retrieve(String tripId, HttpHeaders headers) {\n        TripId ti \u003d new TripId(tripId);\n        Trip trip \u003d repository.findByTripId(ti);\n        if (trip !\u003d null) {\n            return new Response\u003c\u003e(1, \"Search Trip Success by Trip Id \" + tripId, trip);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content according to tripId\" + tripId, null);\n        }\n    }","returnType":"Response","methodName":"retrieve","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.retrieve","classId":"travel.service.TravelServiceImpl","line":101,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response update(TravelInfo info, HttpHeaders headers) {\n        TripId ti \u003d new TripId(info.getTripId());\n        if (repository.findByTripId(ti) !\u003d null) {\n            Trip trip \u003d new Trip(ti, info.getTrainTypeId(), info.getStartingStationId(),\n                    info.getStationsId(), info.getTerminalStationId(), info.getStartingTime(), info.getEndTime());\n            trip.setRouteId(info.getRouteId());\n            repository.save(trip);\n            return new Response\u003c\u003e(1, \"Update trip:\" + ti.toString(), trip);\n        } else {\n            return new Response\u003c\u003e(1, \"Trip\" + info.getTripId().toString() + \"doesn \u0027t exists\", null);\n        }\n    }","returnType":"Response","methodName":"update","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.update","classId":"travel.service.TravelServiceImpl","line":112,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response delete(String tripId, HttpHeaders headers) {\n        TripId ti \u003d new TripId(tripId);\n        if (repository.findByTripId(ti) !\u003d null) {\n            repository.deleteByTripId(ti);\n            return new Response\u003c\u003e(1, \"Delete trip:\" + tripId + \".\", tripId);\n        } else {\n            return new Response\u003c\u003e(0, \"Trip \" + tripId + \" doesn\u0027t exist.\", null);\n        }\n    }","returnType":"Response","methodName":"delete","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.delete","classId":"travel.service.TravelServiceImpl","line":126,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response query(TripInfo info, HttpHeaders headers) {\n\n        //Gets the start and arrival stations of the train number to query. The originating and arriving stations received here are both station names, so two requests need to be sent to convert to station ids\n        String startingPlaceName \u003d info.getStartingPlace();\n        String endPlaceName \u003d info.getEndPlace();\n        String startingPlaceId \u003d queryForStationId(startingPlaceName, headers);\n        String endPlaceId \u003d queryForStationId(endPlaceName, headers);\n\n        //This is the final result\n        List\u003cTripResponse\u003e list \u003d new ArrayList\u003c\u003e();\n\n        //Check all train info\n        List\u003cTrip\u003e allTripList \u003d repository.findAll();\n        for (Trip tempTrip : allTripList) {\n            //Get the detailed route list of this train\n            Route tempRoute \u003d getRouteByRouteId(tempTrip.getRouteId(), headers);\n            //Check the route list for this train. Check that the required start and arrival stations are in the list of stops that are not on the route, and check that the location of the start station is before the stop\n            //Trains that meet the above criteria are added to the return list\n            if (tempRoute.getStations().contains(startingPlaceId) \u0026\u0026\n                    tempRoute.getStations().contains(endPlaceId) \u0026\u0026\n                    tempRoute.getStations().indexOf(startingPlaceId) \u003c tempRoute.getStations().indexOf(endPlaceId)) {\n                TripResponse response \u003d getTickets(tempTrip, tempRoute, startingPlaceId, endPlaceId, startingPlaceName, endPlaceName, info.getDepartureTime(), headers);\n                if (response \u003d\u003d null) {\n                    return new Response\u003c\u003e(0, \"No Trip info content\", null);\n                }\n                list.add(response);\n            }\n        }\n        return new Response\u003c\u003e(1, success, list);\n    }","returnType":"Response","methodName":"query","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.query","classId":"travel.service.TravelServiceImpl","line":137,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTripAllDetailInfo(TripAllDetailInfo gtdi, HttpHeaders headers) {\n        TripAllDetail gtdr \u003d new TripAllDetail();\n        TravelServiceImpl.LOGGER.info(\"[TravelService] [TripAllDetailInfo] TripId: {}\", gtdi.getTripId());\n        Trip trip \u003d repository.findByTripId(new TripId(gtdi.getTripId()));\n        if (trip \u003d\u003d null) {\n            gtdr.setTripResponse(null);\n            gtdr.setTrip(null);\n        } else {\n            String startingPlaceName \u003d gtdi.getFrom();\n            String endPlaceName \u003d gtdi.getTo();\n            String startingPlaceId \u003d queryForStationId(startingPlaceName, headers);\n            String endPlaceId \u003d queryForStationId(endPlaceName, headers);\n            Route tempRoute \u003d getRouteByRouteId(trip.getRouteId(), headers);\n\n            TripResponse tripResponse \u003d getTickets(trip, tempRoute, startingPlaceId, endPlaceId, gtdi.getFrom(), gtdi.getTo(), gtdi.getTravelDate(), headers);\n            if (tripResponse \u003d\u003d null) {\n                gtdr.setTripResponse(null);\n                gtdr.setTrip(null);\n            } else {\n                gtdr.setTripResponse(tripResponse);\n                gtdr.setTrip(repository.findByTripId(new TripId(gtdi.getTripId())));\n            }\n        }\n        return new Response\u003c\u003e(1, success, gtdr);\n    }","returnType":"Response","methodName":"getTripAllDetailInfo","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getTripAllDetailInfo","classId":"travel.service.TravelServiceImpl","line":169,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private TripResponse getTickets(Trip trip, Route route, String startingPlaceId, String endPlaceId, String startingPlaceName, String endPlaceName, Date departureTime, HttpHeaders headers) {\n\n        //Determine if the date checked is the same day and after\n        if (!afterToday(departureTime)) {\n            return null;\n        }\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(startingPlaceName);\n        query.setEndPlace(endPlaceName);\n        query.setDepartureTime(departureTime);\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        TravelServiceImpl.LOGGER.info(\"Ts-basic-service ticket info is: {}\", re.getBody().toString());\n        TravelResult resultForTravel \u003d JsonUtils.conveterObject(re.getBody().getData(), TravelResult.class);\n\n        //Ticket order _ high-speed train (number of tickets purchased)\n        requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cSoldTicket\u003e\u003e re2 \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order/\" + departureTime + \"/\" + trip.getTripId().toString(),\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cSoldTicket\u003e\u003e() {\n                });\n\n        Response\u003cSoldTicket\u003e result \u003d re2.getBody();\n        TravelServiceImpl.LOGGER.info(\"Order info is: {}\", result.toString());\n\n\n        //Set the returned ticket information\n        TripResponse response \u003d new TripResponse();\n        response.setConfortClass(50);\n        response.setEconomyClass(50);\n\n        int first \u003d getRestTicketNumber(departureTime, trip.getTripId().toString(),\n                startingPlaceName, endPlaceName, SeatClass.FIRSTCLASS.getCode(), headers);\n\n        int second \u003d getRestTicketNumber(departureTime, trip.getTripId().toString(),\n                startingPlaceName, endPlaceName, SeatClass.SECONDCLASS.getCode(), headers);\n        response.setConfortClass(first);\n        response.setEconomyClass(second);\n\n        response.setStartingStation(startingPlaceName);\n        response.setTerminalStation(endPlaceName);\n\n        //Calculate the distance from the starting point\n        int indexStart \u003d route.getStations().indexOf(startingPlaceId);\n        int indexEnd \u003d route.getStations().indexOf(endPlaceId);\n        int distanceStart \u003d route.getDistances().get(indexStart) - route.getDistances().get(0);\n        int distanceEnd \u003d route.getDistances().get(indexEnd) - route.getDistances().get(0);\n        TrainType trainType \u003d getTrainType(trip.getTrainTypeId(), headers);\n        //Train running time is calculated according to the average running speed of the train\n        int minutesStart \u003d 60 * distanceStart / trainType.getAverageSpeed();\n        int minutesEnd \u003d 60 * distanceEnd / trainType.getAverageSpeed();\n\n        Calendar calendarStart \u003d Calendar.getInstance();\n        calendarStart.setTime(trip.getStartingTime());\n        calendarStart.add(Calendar.MINUTE, minutesStart);\n        response.setStartingTime(calendarStart.getTime());\n        TravelServiceImpl.LOGGER.info(\"[Train Service] calculate time：{}  time: {}\", minutesStart, calendarStart.getTime());\n\n        Calendar calendarEnd \u003d Calendar.getInstance();\n        calendarEnd.setTime(trip.getStartingTime());\n        calendarEnd.add(Calendar.MINUTE, minutesEnd);\n        response.setEndTime(calendarEnd.getTime());\n        TravelServiceImpl.LOGGER.info(\"[Train Service] calculate time：{}  time: {}\", minutesEnd, calendarEnd.getTime());\n\n        response.setTripId(new TripId(result.getData().getTrainNumber()));\n        response.setTrainTypeId(trip.getTrainTypeId());\n        response.setPriceForConfortClass(resultForTravel.getPrices().get(\"confortClass\"));\n        response.setPriceForEconomyClass(resultForTravel.getPrices().get(\"economyClass\"));\n\n        return response;\n    }","returnType":"TripResponse","methodName":"getTickets","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getTickets","classId":"travel.service.TravelServiceImpl","line":196,"msArgumentList":[{"returnType":"Trip"},{"returnType":"Route"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"Date"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAll(HttpHeaders headers) {\n        List\u003cTrip\u003e tripList \u003d repository.findAll();\n        if (tripList !\u003d null \u0026\u0026 !tripList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, tripList);\n        }\n        return new Response\u003c\u003e(0, noContent, null);\n    }","returnType":"Response","methodName":"queryAll","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.queryAll","classId":"travel.service.TravelServiceImpl","line":277,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private static boolean afterToday(Date date) {\n        Calendar calDateA \u003d Calendar.getInstance();\n        Date today \u003d new Date();\n        calDateA.setTime(today);\n\n        Calendar calDateB \u003d Calendar.getInstance();\n        calDateB.setTime(date);\n\n        if (calDateA.get(Calendar.YEAR) \u003e calDateB.get(Calendar.YEAR)) {\n            return false;\n        } else if (calDateA.get(Calendar.YEAR) \u003d\u003d calDateB.get(Calendar.YEAR)) {\n            if (calDateA.get(Calendar.MONTH) \u003e calDateB.get(Calendar.MONTH)) {\n                return false;\n            } else if (calDateA.get(Calendar.MONTH) \u003d\u003d calDateB.get(Calendar.MONTH)) {\n                return calDateA.get(Calendar.DAY_OF_MONTH) \u003c\u003d calDateB.get(Calendar.DAY_OF_MONTH) ;\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }","returnType":"boolean","methodName":"afterToday","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.afterToday","classId":"travel.service.TravelServiceImpl","line":286,"msArgumentList":[{"returnType":"Date"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private TrainType getTrainType(String trainTypeId, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cTrainType\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-train-service:14567/api/v1/trainservice/trains/\" + trainTypeId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"TrainType","methodName":"getTrainType","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getTrainType","classId":"travel.service.TravelServiceImpl","line":309,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n        TravelServiceImpl.LOGGER.info(\"Query for Station id is: {}\", re.getBody().toString());\n\n        return re.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.queryForStationId","classId":"travel.service.TravelServiceImpl","line":321,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private Route getRouteByRouteId(String routeId, HttpHeaders headers) {\n        TravelServiceImpl.LOGGER.info(\"[Travel Service][Get Route By Id] Route ID：{}\", routeId);\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response routeRes \u003d re.getBody();\n\n        Route route1 \u003d new Route();\n        TravelServiceImpl.LOGGER.info(\"Routes Response is : {}\", routeRes.toString());\n        if (routeRes.getStatus() \u003d\u003d 1) {\n            route1 \u003d JsonUtils.conveterObject(routeRes.getData(), Route.class);\n            TravelServiceImpl.LOGGER.info(\"Route is: {}\", route1.toString());\n        }\n        return route1;\n    }","returnType":"Route","methodName":"getRouteByRouteId","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getRouteByRouteId","classId":"travel.service.TravelServiceImpl","line":334,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"private int getRestTicketNumber(Date travelDate, String trainNumber, String startStationName, String endStationName, int seatType, HttpHeaders headers) {\n        Seat seatRequest \u003d new Seat();\n\n        String fromId \u003d queryForStationId(startStationName, headers);\n        String toId \u003d queryForStationId(endStationName, headers);\n\n        seatRequest.setDestStation(toId);\n        seatRequest.setStartStation(fromId);\n        seatRequest.setTrainNumber(trainNumber);\n        seatRequest.setTravelDate(travelDate);\n        seatRequest.setSeatType(seatType);\n\n        TravelServiceImpl.LOGGER.info(\"Seat request To String: {}\", seatRequest.toString());\n\n        HttpEntity requestEntity \u003d new HttpEntity(seatRequest, headers);\n        ResponseEntity\u003cResponse\u003cInteger\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats/left_tickets\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cInteger\u003e\u003e() {\n                });\n        TravelServiceImpl.LOGGER.info(\"Get Rest tickets num is: {}\", re.getBody().toString());\n\n        return re.getBody().getData();\n    }","returnType":"int","methodName":"getRestTicketNumber","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.getRestTicketNumber","classId":"travel.service.TravelServiceImpl","line":353,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java","directoryName":""},"code":"@Override\n    public Response adminQueryAll(HttpHeaders headers) {\n        List\u003cTrip\u003e trips \u003d repository.findAll();\n        ArrayList\u003cAdminTrip\u003e adminTrips \u003d new ArrayList\u003c\u003e();\n        for (Trip trip : trips) {\n            AdminTrip adminTrip \u003d new AdminTrip();\n            adminTrip.setTrip(trip);\n            adminTrip.setRoute(getRouteByRouteId(trip.getRouteId(), headers));\n            adminTrip.setTrainType(getTrainType(trip.getTrainTypeId(), headers));\n            adminTrips.add(adminTrip);\n        }\n        if (!adminTrips.isEmpty()) {\n            return new Response\u003c\u003e(1, success, adminTrips);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"adminQueryAll","className":"TravelServiceImpl","packageName":"travel.service","methodId":"travel.service.TravelServiceImpl.adminQueryAll","classId":"travel.service.TravelServiceImpl","line":379,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response create(TravelInfo info, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.create","classId":"travel.service.TravelService","line":15,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response retrieve(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"retrieve","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.retrieve","classId":"travel.service.TravelService","line":17,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response update(TravelInfo info, HttpHeaders headers);","returnType":"Response","methodName":"update","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.update","classId":"travel.service.TravelService","line":19,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response delete(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"delete","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.delete","classId":"travel.service.TravelService","line":21,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response query(TripInfo info, HttpHeaders headers);","returnType":"Response","methodName":"query","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.query","classId":"travel.service.TravelService","line":23,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response getTripAllDetailInfo(TripAllDetailInfo gtdi, HttpHeaders headers);","returnType":"Response","methodName":"getTripAllDetailInfo","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.getTripAllDetailInfo","classId":"travel.service.TravelService","line":25,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response getRouteByTripId(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"getRouteByTripId","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.getRouteByTripId","classId":"travel.service.TravelService","line":27,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response getTrainTypeByTripId(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"getTrainTypeByTripId","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.getTrainTypeByTripId","classId":"travel.service.TravelService","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response queryAll(HttpHeaders headers);","returnType":"Response","methodName":"queryAll","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.queryAll","classId":"travel.service.TravelService","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response  getTripByRoute(ArrayList\u003cString\u003e routeIds, HttpHeaders headers);","returnType":"Response","methodName":"getTripByRoute","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.getTripByRoute","classId":"travel.service.TravelService","line":33,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-service/src/main/java/travel/service/TravelService.java","directoryName":""},"code":"Response adminQueryAll(HttpHeaders headers);","returnType":"Response","methodName":"adminQueryAll","className":"TravelService","packageName":"travel.service","methodId":"travel.service.TravelService.adminQueryAll","classId":"travel.service.TravelService","line":35,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Preserve Service ] !\";\n    }","returnType":"String","methodName":"home","className":"PreserveController","packageName":"preserve.controller","methodId":"preserve.controller.PreserveController.home","classId":"preserve.controller.PreserveController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/preserve\")\n    public HttpEntity preserve(@RequestBody OrderTicketsInfo oti,\n                               @RequestHeader HttpHeaders headers) {\n        PreserveController.LOGGER.info(\"[Preserve Service][Preserve] Account  order from {} -----\u003e {} at {}\", oti.getFrom(), oti.getTo(), oti.getDate());\n        return ok(preserveService.preserve(oti, headers));\n    }","returnType":"HttpEntity","methodName":"preserve","className":"PreserveController","packageName":"preserve.controller","methodId":"preserve.controller.PreserveController.preserve","classId":"preserve.controller.PreserveController","line":31,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/preserve\""}]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"@Override\n    public Response preserve(OrderTicketsInfo oti, HttpHeaders headers) {\n        //1.detect ticket scalper\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security\");\n\n        Response result \u003d checkSecurity(oti.getAccountId(), headers);\n        if (result.getStatus() \u003d\u003d 0) {\n            return new Response\u003c\u003e(0, result.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Complete\");\n        //2.Querying contact information -- modification, mediated by the underlying information micro service\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 2] Find contacts\");\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 2] Contacts Id: {}\", oti.getContactsId());\n\n        Response\u003cContacts\u003e gcr \u003d getContactsById(oti.getContactsId(), headers);\n        if (gcr.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Get Contacts] Fail. {}\", gcr.getMsg());\n            return new Response\u003c\u003e(0, gcr.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 2] Complete\");\n        //3.Check the info of train and the number of remaining tickets\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] Check tickets num\");\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n\n        gtdi.setFrom(oti.getFrom());\n        gtdi.setTo(oti.getTo());\n\n        gtdi.setTravelDate(oti.getDate());\n        gtdi.setTripId(oti.getTripId());\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] TripId: {}\", oti.getTripId());\n        Response\u003cTripAllDetail\u003e response \u003d getTripAllDetailInformation(gtdi, headers);\n        TripAllDetail gtdr \u003d response.getData();\n        LOGGER.info(\"TripAllDetail:\" + gtdr.toString());\n        if (response.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Search For Trip Detail Information] {}\", response.getMsg());\n            return new Response\u003c\u003e(0, response.getMsg(), null);\n        } else {\n            TripResponse tripResponse \u003d gtdr.getTripResponse();\n            LOGGER.info(\"TripResponse:\" + tripResponse.toString());\n            if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                if (tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            } else {\n                if (tripResponse.getEconomyClass() \u003d\u003d SeatClass.SECONDCLASS.getCode() \u0026\u0026 tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            }\n        }\n        Trip trip \u003d gtdr.getTrip();\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] Tickets Enough\");\n        //4.send the order request and set the order information\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 4] Do Order\");\n        Contacts contacts \u003d gcr.getData();\n        Order order \u003d new Order();\n        UUID orderId \u003d UUID.randomUUID();\n        order.setId(orderId);\n        order.setTrainNumber(oti.getTripId());\n        order.setAccountId(UUID.fromString(oti.getAccountId()));\n\n        String fromStationId \u003d queryForStationId(oti.getFrom(), headers);\n        String toStationId \u003d queryForStationId(oti.getTo(), headers);\n\n        order.setFrom(fromStationId);\n        order.setTo(toStationId);\n        order.setBoughtDate(new Date());\n        order.setStatus(OrderStatus.NOTPAID.getCode());\n        order.setContactsDocumentNumber(contacts.getDocumentNumber());\n        order.setContactsName(contacts.getName());\n        order.setDocumentType(contacts.getDocumentType());\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(oti.getFrom());\n        query.setEndPlace(oti.getTo());\n        query.setDepartureTime(new Date());\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, headers);\n        ResponseEntity\u003cResponse\u003cTravelResult\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                });\n        TravelResult resultForTravel \u003d re.getBody().getData();\n\n        order.setSeatClass(oti.getSeatType());\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Order] Order Travel Date: {}\", oti.getDate().toString());\n        order.setTravelDate(oti.getDate());\n        order.setTravelTime(gtdr.getTripResponse().getStartingTime());\n\n        //Dispatch the seat\n        if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.FIRSTCLASS.getCode(), headers);\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setSeatClass(SeatClass.FIRSTCLASS.getCode());\n            order.setPrice(resultForTravel.getPrices().get(\"confortClass\"));\n        } else {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.SECONDCLASS.getCode(), headers);\n            order.setSeatClass(SeatClass.SECONDCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setPrice(resultForTravel.getPrices().get(\"economyClass\"));\n        }\n\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Order Price] Price is: {}\", order.getPrice());\n\n        Response\u003cOrder\u003e cor \u003d createOrder(order, headers);\n        if (cor.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Create Order Fail] Create Order Fail.  Reason: {}\", cor.getMsg());\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 4] Do Order Complete\");\n\n        Response returnResponse \u003d new Response\u003c\u003e(1, \"Success.\", cor.getMsg());\n        //5.Check insurance options\n        if (oti.getAssurance() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Do not need to buy assurance\");\n        } else {\n            Response addAssuranceResult \u003d addAssuranceForOrder(\n                    oti.getAssurance(), cor.getData().getId().toString(), headers);\n            if (addAssuranceResult.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Assurance Fail.\");\n            }\n        }\n\n        //6.Increase the food order\n        if (oti.getFoodType() !\u003d 0) {\n\n            FoodOrder foodOrder \u003d new FoodOrder();\n            foodOrder.setOrderId(cor.getData().getId());\n            foodOrder.setFoodType(oti.getFoodType());\n            foodOrder.setFoodName(oti.getFoodName());\n            foodOrder.setPrice(oti.getFoodPrice());\n\n            if (oti.getFoodType() \u003d\u003d 2) {\n                foodOrder.setStationName(oti.getStationName());\n                foodOrder.setStoreName(oti.getStoreName());\n                PreserveServiceImpl.LOGGER.info(\"[Food Service]!!!!!!!!!!!!!!!foodstore\u003d {}   {}   {}\", foodOrder.getFoodType(), foodOrder.getStationName(), foodOrder.getStoreName());\n            }\n            Response afor \u003d createFoodOrder(foodOrder, headers);\n            if (afor.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Food Fail.\");\n            }\n        } else {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Do not need to buy food\");\n        }\n\n        //7.add consign\n        if (null !\u003d oti.getConsigneeName() \u0026\u0026 !\"\".equals(oti.getConsigneeName())) {\n\n            Consign consignRequest \u003d new Consign();\n            consignRequest.setOrderId(cor.getData().getId());\n            consignRequest.setAccountId(cor.getData().getAccountId());\n            consignRequest.setHandleDate(oti.getHandleDate());\n            consignRequest.setTargetDate(cor.getData().getTravelDate().toString());\n            consignRequest.setFrom(cor.getData().getFrom());\n            consignRequest.setTo(cor.getData().getTo());\n            consignRequest.setConsignee(oti.getConsigneeName());\n            consignRequest.setPhone(oti.getConsigneePhone());\n            consignRequest.setWeight(oti.getConsigneeWeight());\n            consignRequest.setWithin(oti.isWithin());\n            LOGGER.info(\"CONSIGN INFO : \" +consignRequest.toString());\n            Response icresult \u003d createConsign(consignRequest, headers);\n            if (icresult.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Fail.\");\n                returnResponse.setMsg(\"Consign Fail.\");\n            }\n        } else {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Do not need to consign\");\n        }\n\n        //8.send notification\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service]\");\n\n        User getUser \u003d getAccount(order.getAccountId().toString(), headers);\n\n        NotifyInfo notifyInfo \u003d new NotifyInfo();\n        notifyInfo.setDate(new Date().toString());\n\n        notifyInfo.setEmail(getUser.getEmail());\n        notifyInfo.setStartingPlace(order.getFrom());\n        notifyInfo.setEndPlace(order.getTo());\n        notifyInfo.setUsername(getUser.getUserName());\n        notifyInfo.setSeatNumber(order.getSeatNumber());\n        notifyInfo.setOrderNumber(order.getId().toString());\n        notifyInfo.setPrice(order.getPrice());\n        notifyInfo.setSeatClass(SeatClass.getNameByCode(order.getSeatClass()));\n        notifyInfo.setStartingTime(order.getTravelTime().toString());\n\n        sendEmail(notifyInfo, headers);\n\n        return returnResponse;\n    }","returnType":"Response","methodName":"preserve","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.preserve","classId":"preserve.service.PreserveServiceImpl","line":30,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"public Ticket dipatchSeat(Date date, String tripId, String startStationId, String endStataionId, int seatType, HttpHeaders httpHeaders) {\n        Seat seatRequest \u003d new Seat();\n        seatRequest.setTravelDate(date);\n        seatRequest.setTrainNumber(tripId);\n        seatRequest.setStartStation(startStationId);\n        seatRequest.setDestStation(endStataionId);\n        seatRequest.setSeatType(seatType);\n\n        HttpEntity requestEntityTicket \u003d new HttpEntity(seatRequest, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTicket\u003e\u003e reTicket \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats\",\n                HttpMethod.POST,\n                requestEntityTicket,\n                new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n                });\n\n        return reTicket.getBody().getData();\n    }","returnType":"Ticket","methodName":"dipatchSeat","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.dipatchSeat","classId":"preserve.service.PreserveServiceImpl","line":240,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"public boolean sendEmail(NotifyInfo notifyInfo, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Send Email]\");\n        HttpEntity requestEntitySendEmail \u003d new HttpEntity(notifyInfo, httpHeaders);\n        ResponseEntity\u003cBoolean\u003e reSendEmail \u003d restTemplate.exchange(\n                \"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\",\n                HttpMethod.POST,\n                requestEntitySendEmail,\n                Boolean.class);\n\n        return reSendEmail.getBody();\n    }","returnType":"boolean","methodName":"sendEmail","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.sendEmail","classId":"preserve.service.PreserveServiceImpl","line":259,"msArgumentList":[{"returnType":"NotifyInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"public User getAccount(String accountId, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Cancel Order Service][Get Order By Id]\");\n\n        HttpEntity requestEntitySendEmail \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cUser\u003e\u003e getAccount \u003d restTemplate.exchange(\n                \"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId,\n                HttpMethod.GET,\n                requestEntitySendEmail,\n                new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n                });\n        Response\u003cUser\u003e result \u003d getAccount.getBody();\n        return result.getData();\n    }","returnType":"User","methodName":"getAccount","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.getAccount","classId":"preserve.service.PreserveServiceImpl","line":271,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response addAssuranceForOrder(int assuranceType, String orderId, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Add Assurance For Order]\");\n        HttpEntity requestAddAssuranceResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reAddAssuranceResult \u003d restTemplate.exchange(\n                \"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId,\n                HttpMethod.GET,\n                requestAddAssuranceResult,\n                Response.class);\n\n        return reAddAssuranceResult.getBody();\n    }","returnType":"Response","methodName":"addAssuranceForOrder","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.addAssuranceForOrder","classId":"preserve.service.PreserveServiceImpl","line":285,"msArgumentList":[{"returnType":"int"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Station Name]\");\n\n\n        HttpEntity requestQueryForStationId \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e reQueryForStationId \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName,\n                HttpMethod.GET,\n                requestQueryForStationId,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n\n        return reQueryForStationId.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.queryForStationId","classId":"preserve.service.PreserveServiceImpl","line":297,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response checkSecurity(String accountId, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Other Service][Check Security] Checking....\");\n\n        HttpEntity requestCheckResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reCheckResult \u003d restTemplate.exchange(\n                \"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId,\n                HttpMethod.GET,\n                requestCheckResult,\n                Response.class);\n\n        return reCheckResult.getBody();\n    }","returnType":"Response","methodName":"checkSecurity","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.checkSecurity","classId":"preserve.service.PreserveServiceImpl","line":312,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response\u003cTripAllDetail\u003e getTripAllDetailInformation(TripAllDetailInfo gtdi, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Trip All Detail Information] Getting....\");\n\n        HttpEntity requestGetTripAllDetailResult \u003d new HttpEntity(gtdi, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTripAllDetail\u003e\u003e reGetTripAllDetailResult \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/trip_detail\",\n                HttpMethod.POST,\n                requestGetTripAllDetailResult,\n                new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n                });\n\n        return reGetTripAllDetailResult.getBody();\n    }","returnType":"Response\u003cTripAllDetail\u003e","methodName":"getTripAllDetailInformation","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.getTripAllDetailInformation","classId":"preserve.service.PreserveServiceImpl","line":326,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response\u003cContacts\u003e getContactsById(String contactsId, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Contacts By Id] Getting....\");\n\n        HttpEntity requestGetContactsResult \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cContacts\u003e\u003e reGetContactsResult \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId,\n                HttpMethod.GET,\n                requestGetContactsResult,\n                new ParameterizedTypeReference\u003cResponse\u003cContacts\u003e\u003e() {\n                });\n\n        return reGetContactsResult.getBody();\n    }","returnType":"Response\u003cContacts\u003e","methodName":"getContactsById","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.getContactsById","classId":"preserve.service.PreserveServiceImpl","line":341,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response createOrder(Order coi, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Other Service][Get Contacts By Id] Creating....\");\n\n        HttpEntity requestEntityCreateOrderResult \u003d new HttpEntity(coi, httpHeaders);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e reCreateOrderResult \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order\",\n                HttpMethod.POST,\n                requestEntityCreateOrderResult,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n\n        return reCreateOrderResult.getBody();\n    }","returnType":"Response","methodName":"createOrder","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.createOrder","classId":"preserve.service.PreserveServiceImpl","line":355,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response createFoodOrder(FoodOrder afi, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Add food Order] Creating....\");\n\n        HttpEntity requestEntityAddFoodOrderResult \u003d new HttpEntity(afi, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reAddFoodOrderResult \u003d restTemplate.exchange(\n                \"http://ts-food-service:18856/api/v1/foodservice/orders\",\n                HttpMethod.POST,\n                requestEntityAddFoodOrderResult,\n                Response.class);\n\n        return reAddFoodOrderResult.getBody();\n    }","returnType":"Response","methodName":"createFoodOrder","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.createFoodOrder","classId":"preserve.service.PreserveServiceImpl","line":369,"msArgumentList":[{"returnType":"FoodOrder"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"private Response createConsign(Consign cr, HttpHeaders httpHeaders) {\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Add Condign] Creating....\");\n\n        HttpEntity requestEntityResultForTravel \u003d new HttpEntity(cr, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reResultForTravel \u003d restTemplate.exchange(\n                \"http://ts-consign-service:16111/api/v1/consignservice/consigns\",\n                HttpMethod.POST,\n                requestEntityResultForTravel,\n                Response.class);\n        return reResultForTravel.getBody();\n    }","returnType":"Response","methodName":"createConsign","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.createConsign","classId":"preserve.service.PreserveServiceImpl","line":382,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveService.java","directoryName":""},"code":"Response preserve(OrderTicketsInfo oti, HttpHeaders headers);","returnType":"Response","methodName":"preserve","className":"PreserveService","packageName":"preserve.service","methodId":"preserve.service.PreserveService.preserve","classId":"preserve.service.PreserveService","line":12,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/contacts/welcome\")\n    public String home() {\n        return \"Welcome to [ Contacts Service ] !\";\n    }","returnType":"String","methodName":"home","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.home","classId":"contacts.controller.ContactsController","line":29,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/contacts/welcome\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/contacts\")\n    public HttpEntity getAllContacts(@RequestHeader HttpHeaders headers) {\n        ContactsController.LOGGER.info(\"[Contacts Service][Get All Contacts]\");\n        return ok(contactsService.getAllContacts(headers));\n    }","returnType":"HttpEntity","methodName":"getAllContacts","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.getAllContacts","classId":"contacts.controller.ContactsController","line":34,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/contacts\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/contacts\")\n    public ResponseEntity\u003cResponse\u003e createNewContacts(@RequestBody Contacts aci,\n                                                      @RequestHeader HttpHeaders headers) {\n        ContactsController.LOGGER.info(\"[ContactsService][VerifyLogin] Success\");\n        return new ResponseEntity\u003c\u003e(contactsService.create(aci, headers), HttpStatus.CREATED);\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"createNewContacts","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.createNewContacts","classId":"contacts.controller.ContactsController","line":41,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/contacts\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/contacts/admin\")\n    public HttpEntity\u003c?\u003e createNewContactsAdmin(@RequestBody Contacts aci, @RequestHeader HttpHeaders headers) {\n        aci.setId(UUID.randomUUID());\n        ContactsController.LOGGER.info(\"[ContactsService][Create Contacts In Admin]\");\n        return new ResponseEntity\u003c\u003e(contactsService.createContacts(aci, headers), HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003c?\u003e","methodName":"createNewContactsAdmin","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.createNewContactsAdmin","classId":"contacts.controller.ContactsController","line":49,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/contacts/admin\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/contacts/{contactsId}\")\n    public HttpEntity deleteContacts(@PathVariable String contactsId, @RequestHeader HttpHeaders headers) {\n        return ok(contactsService.delete(UUID.fromString(contactsId), headers));\n    }","returnType":"HttpEntity","methodName":"deleteContacts","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.deleteContacts","classId":"contacts.controller.ContactsController","line":58,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/contacts/{contactsId}\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/contacts\")\n    public HttpEntity modifyContacts(@RequestBody Contacts info, @RequestHeader HttpHeaders headers) {\n        ContactsController.LOGGER.info(\"[Contacts Service][Modify Contacts] ContactsId: {}\", info.getId());\n        return ok(contactsService.modify(info, headers));\n    }","returnType":"HttpEntity","methodName":"modifyContacts","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.modifyContacts","classId":"contacts.controller.ContactsController","line":65,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/contacts\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/contacts/account/{accountId}\")\n    public HttpEntity findContactsByAccountId(@PathVariable String accountId, @RequestHeader HttpHeaders headers) {\n        ContactsController.LOGGER.info(\"[Contacts Service][Find Contacts By Account Id: {}\", accountId);\n        ContactsController.LOGGER.info(\"[ContactsService][VerifyLogin] Success\");\n        return ok(contactsService.findContactsByAccountId(UUID.fromString(accountId), headers));\n    }","returnType":"HttpEntity","methodName":"findContactsByAccountId","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.findContactsByAccountId","classId":"contacts.controller.ContactsController","line":72,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/contacts/account/{accountId}\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/contacts/{id}\")\n    public HttpEntity getContactsByContactsId(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        ContactsController.LOGGER.info(\"[ContactsService][Contacts Id Print] {}\", id);\n        ContactsController.LOGGER.info(\"[ContactsService][VerifyLogin] Success.\");\n        return ok(contactsService.findContactsById(UUID.fromString(id), headers));\n    }","returnType":"HttpEntity","methodName":"getContactsByContactsId","className":"ContactsController","packageName":"contacts.controller","methodId":"contacts.controller.ContactsController.getContactsByContactsId","classId":"contacts.controller.ContactsController","line":80,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/contacts/{id}\""}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java","directoryName":""},"code":"Contacts findById(UUID id);","returnType":"Contacts","methodName":"findById","className":"ContactsRepository","packageName":"contacts.repository","methodId":"contacts.repository.ContactsRepository.findById","classId":"contacts.repository.ContactsRepository","line":22,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java","directoryName":""},"code":"@Query(\"{ \u0027accountId\u0027 : ?0 }\")\n    ArrayList\u003cContacts\u003e findByAccountId(UUID accountId);","returnType":"ArrayList\u003cContacts\u003e","methodName":"findByAccountId","className":"ContactsRepository","packageName":"contacts.repository","methodId":"contacts.repository.ContactsRepository.findByAccountId","classId":"contacts.repository.ContactsRepository","line":30,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"ContactsRepository","packageName":"contacts.repository","methodId":"contacts.repository.ContactsRepository.deleteById","classId":"contacts.repository.ContactsRepository","line":39,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cContacts\u003e findAll();","returnType":"ArrayList\u003cContacts\u003e","methodName":"findAll","className":"ContactsRepository","packageName":"contacts.repository","methodId":"contacts.repository.ContactsRepository.findAll","classId":"contacts.repository.ContactsRepository","line":46,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findContactsById(UUID id, HttpHeaders headers) {\n        LOGGER.info(\"FIND CONTACTS BY ID: \" + id);\n        Contacts contacts \u003d contactsRepository.findById(id);\n        if (contacts !\u003d null) {\n            return new Response\u003c\u003e(1, success, contacts);\n        } else {\n            return new Response\u003c\u003e(0, \"No contacts according to contacts id\", null);\n        }\n    }","returnType":"Response","methodName":"findContactsById","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.findContactsById","classId":"contacts.service.ContactsServiceImpl","line":29,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findContactsByAccountId(UUID accountId, HttpHeaders headers) {\n        ArrayList\u003cContacts\u003e arr \u003d contactsRepository.findByAccountId(accountId);\n        ContactsServiceImpl.LOGGER.info(\"[Contacts-Query-Service][Query-Contacts] Result Size: {}\", arr.size());\n        return new Response\u003c\u003e(1, success, arr);\n    }","returnType":"Response","methodName":"findContactsByAccountId","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.findContactsByAccountId","classId":"contacts.service.ContactsServiceImpl","line":40,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createContacts(Contacts contacts, HttpHeaders headers) {\n        Contacts contactsTemp \u003d contactsRepository.findById(contacts.getId());\n        if (contactsTemp !\u003d null) {\n            ContactsServiceImpl.LOGGER.info(\"[Contacts Service][Init Contacts] Already Exists Id: {}\", contacts.getId());\n            return new Response\u003c\u003e(0, \"Already Exists\", contactsTemp);\n        } else {\n            contactsRepository.save(contacts);\n            return new Response\u003c\u003e(1, \"Create Success\", null);\n        }\n    }","returnType":"Response","methodName":"createContacts","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.createContacts","classId":"contacts.service.ContactsServiceImpl","line":47,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(Contacts addContacts, HttpHeaders headers) {\n        Contacts contacts \u003d new Contacts();\n        contacts.setId(UUID.randomUUID());\n        contacts.setName(addContacts.getName());\n        contacts.setPhoneNumber(addContacts.getPhoneNumber());\n        contacts.setDocumentNumber(addContacts.getDocumentNumber());\n        contacts.setAccountId(addContacts.getAccountId());\n        contacts.setDocumentType(addContacts.getDocumentType());\n\n        ArrayList\u003cContacts\u003e accountContacts \u003d contactsRepository.findByAccountId(addContacts.getAccountId());\n\n        if (accountContacts.contains(contacts)) {\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Add\u0026Delete-Service][AddContacts] Fail.Contacts already exists\");\n            return new Response\u003c\u003e(0, \"Contacts already exists\", null);\n        } else {\n            contactsRepository.save(contacts);\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Add\u0026Delete-Service][AddContacts] Success.\");\n            return new Response\u003c\u003e(1, \"Create contacts success\", contacts);\n        }\n    }","returnType":"Response","methodName":"create","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.create","classId":"contacts.service.ContactsServiceImpl","line":59,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response delete(UUID contactsId, HttpHeaders headers) {\n        contactsRepository.deleteById(contactsId);\n        Contacts contacts \u003d contactsRepository.findById(contactsId);\n        if (contacts \u003d\u003d null) {\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Add\u0026Delete-Service][DeleteContacts] Success.\");\n            return new Response\u003c\u003e(1, \"Delete success\", contactsId);\n        } else {\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Add\u0026Delete-Service][DeleteContacts] Fail.Reason not clear.\");\n            return new Response\u003c\u003e(0, \"Delete failed\", contactsId);\n        }\n    }","returnType":"Response","methodName":"delete","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.delete","classId":"contacts.service.ContactsServiceImpl","line":81,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modify(Contacts contacts, HttpHeaders headers) {\n        Response oldContactResponse \u003d findContactsById(contacts.getId(), headers);\n        LOGGER.info(oldContactResponse.toString());\n        Contacts oldContacts \u003d (Contacts) oldContactResponse.getData();\n        if (oldContacts \u003d\u003d null) {\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Modify-Service][ModifyContacts] Fail.Contacts not found.\");\n            return new Response\u003c\u003e(0, \"Contacts not found\", null);\n        } else {\n            oldContacts.setName(contacts.getName());\n            oldContacts.setDocumentType(contacts.getDocumentType());\n            oldContacts.setDocumentNumber(contacts.getDocumentNumber());\n            oldContacts.setPhoneNumber(contacts.getPhoneNumber());\n            contactsRepository.save(oldContacts);\n            ContactsServiceImpl.LOGGER.info(\"[Contacts-Modify-Service][ModifyContacts] Success.\");\n            return new Response\u003c\u003e(1, \"Modify success\", oldContacts);\n        }\n    }","returnType":"Response","methodName":"modify","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.modify","classId":"contacts.service.ContactsServiceImpl","line":94,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllContacts(HttpHeaders headers) {\n        ArrayList\u003cContacts\u003e contacts \u003d contactsRepository.findAll();\n        if (contacts !\u003d null \u0026\u0026 !contacts.isEmpty()) {\n            return new Response\u003c\u003e(1, success, contacts);\n        } else {\n            return new Response\u003c\u003e(0, \"No content\", null);\n        }\n    }","returnType":"Response","methodName":"getAllContacts","className":"ContactsServiceImpl","packageName":"contacts.service","methodId":"contacts.service.ContactsServiceImpl.getAllContacts","classId":"contacts.service.ContactsServiceImpl","line":113,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response createContacts(Contacts contacts, HttpHeaders headers);","returnType":"Response","methodName":"createContacts","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.createContacts","classId":"contacts.service.ContactsService","line":21,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response create(Contacts addContacts, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.create","classId":"contacts.service.ContactsService","line":30,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response delete(UUID contactsId, HttpHeaders headers);","returnType":"Response","methodName":"delete","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.delete","classId":"contacts.service.ContactsService","line":39,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response modify(Contacts contacts, HttpHeaders headers);","returnType":"Response","methodName":"modify","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.modify","classId":"contacts.service.ContactsService","line":48,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response getAllContacts(HttpHeaders headers);","returnType":"Response","methodName":"getAllContacts","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.getAllContacts","classId":"contacts.service.ContactsService","line":56,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response findContactsById(UUID id, HttpHeaders headers);","returnType":"Response","methodName":"findContactsById","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.findContactsById","classId":"contacts.service.ContactsService","line":65,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-contacts-service/src/main/java/contacts/service/ContactsService.java","directoryName":""},"code":"Response findContactsByAccountId(UUID accountId, HttpHeaders headers);","returnType":"Response","methodName":"findContactsByAccountId","className":"ContactsService","packageName":"contacts.service","methodId":"contacts.service.ContactsService.findContactsByAccountId","classId":"contacts.service.ContactsService","line":74,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ AdminUser Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AdminUserController","packageName":"adminuser.controller","methodId":"adminuser.controller.AdminUserController.home","classId":"adminuser.controller.AdminUserController","line":22,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping\n    public HttpEntity getAllUsers(@RequestHeader HttpHeaders headers) {\n        return ok(adminUserService.getAllUsers(headers));\n    }","returnType":"HttpEntity","methodName":"getAllUsers","className":"AdminUserController","packageName":"adminuser.controller","methodId":"adminuser.controller.AdminUserController.getAllUsers","classId":"adminuser.controller.AdminUserController","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java","directoryName":""},"code":"@PutMapping\n    public HttpEntity updateUser(@RequestBody UserDto userDto, @RequestHeader HttpHeaders headers) {\n        return ok(adminUserService.updateUser(userDto, headers));\n    }","returnType":"HttpEntity","methodName":"updateUser","className":"AdminUserController","packageName":"adminuser.controller","methodId":"adminuser.controller.AdminUserController.updateUser","classId":"adminuser.controller.AdminUserController","line":33,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PutMapping"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java","directoryName":""},"code":"@PostMapping\n    public HttpEntity addUser(@RequestBody UserDto userDto, @RequestHeader HttpHeaders headers) {\n        return ok(adminUserService.addUser(userDto, headers));\n    }","returnType":"HttpEntity","methodName":"addUser","className":"AdminUserController","packageName":"adminuser.controller","methodId":"adminuser.controller.AdminUserController.addUser","classId":"adminuser.controller.AdminUserController","line":39,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PostMapping"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/{userId}\")\n    public HttpEntity deleteUser(@PathVariable String userId, @RequestHeader HttpHeaders headers) {\n        return ok(adminUserService.deleteUser(userId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteUser","className":"AdminUserController","packageName":"adminuser.controller","methodId":"adminuser.controller.AdminUserController.deleteUser","classId":"adminuser.controller.AdminUserController","line":44,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/{userId}\""}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserService.java","directoryName":""},"code":"Response getAllUsers(HttpHeaders headers);","returnType":"Response","methodName":"getAllUsers","className":"AdminUserService","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserService.getAllUsers","classId":"adminuser.service.AdminUserService","line":18,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserService.java","directoryName":""},"code":"Response deleteUser(String userId, HttpHeaders headers);","returnType":"Response","methodName":"deleteUser","className":"AdminUserService","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserService.deleteUser","classId":"adminuser.service.AdminUserService","line":27,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserService.java","directoryName":""},"code":"Response updateUser(UserDto userDto, HttpHeaders headers);","returnType":"Response","methodName":"updateUser","className":"AdminUserService","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserService.updateUser","classId":"adminuser.service.AdminUserService","line":36,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserService.java","directoryName":""},"code":"Response addUser(UserDto userDto, HttpHeaders headers);","returnType":"Response","methodName":"addUser","className":"AdminUserService","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserService.addUser","classId":"adminuser.service.AdminUserService","line":45,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllUsers(HttpHeaders headers) {\n        AdminUserServiceImpl.LOGGER.info(\"[Admin User Service][Get All Users]\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cList\u003cUser\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                USER_SERVICE_IP_URI,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cUser\u003e\u003e\u003e() {\n                });\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"getAllUsers","className":"AdminUserServiceImpl","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserServiceImpl.getAllUsers","classId":"adminuser.service.AdminUserServiceImpl","line":32,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteUser(String userId, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                USER_SERVICE_IP_URI + \"/\" + userId,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"deleteUser","className":"AdminUserServiceImpl","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserServiceImpl.deleteUser","classId":"adminuser.service.AdminUserServiceImpl","line":47,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateUser(UserDto userDto, HttpHeaders headers) {\n        LOGGER.info(\"UPDATE USER: \" + userDto.toString());\n        HttpEntity requestEntity \u003d new HttpEntity(userDto, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                USER_SERVICE_IP_URI,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"updateUser","className":"AdminUserServiceImpl","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserServiceImpl.updateUser","classId":"adminuser.service.AdminUserServiceImpl","line":58,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addUser(UserDto userDto, HttpHeaders headers) {\n        LOGGER.info(\"ADD USER INFO : \"+userDto.toString());\n        HttpEntity requestEntity \u003d new HttpEntity(userDto, headers);\n        ResponseEntity\u003cResponse\u003cUser\u003e\u003e re \u003d restTemplate.exchange(\n                USER_SERVICE_IP_URI + \"/register\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n                });\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"addUser","className":"AdminUserServiceImpl","packageName":"adminuser.service","methodId":"adminuser.service.AdminUserServiceImpl.addUser","classId":"adminuser.service.AdminUserServiceImpl","line":70,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ ConsignPrice Service ] !\";\n    }","returnType":"String","methodName":"home","className":"ConsignPriceController","packageName":"consignprice.controller","methodId":"consignprice.controller.ConsignPriceController.home","classId":"consignprice.controller.ConsignPriceController","line":22,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consignprice/{weight}/{isWithinRegion}\")\n    public HttpEntity getPriceByWeightAndRegion(@PathVariable String weight, @PathVariable String isWithinRegion,\n                                                @RequestHeader HttpHeaders headers) {\n        return ok(service.getPriceByWeightAndRegion(Double.parseDouble(weight),\n                Boolean.parseBoolean(isWithinRegion), headers));\n    }","returnType":"HttpEntity","methodName":"getPriceByWeightAndRegion","className":"ConsignPriceController","packageName":"consignprice.controller","methodId":"consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion","classId":"consignprice.controller.ConsignPriceController","line":27,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consignprice/{weight}/{isWithinRegion}\""}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consignprice/price\")\n    public HttpEntity getPriceInfo(@RequestHeader HttpHeaders headers) {\n        return ok(service.queryPriceInformation(headers));\n    }","returnType":"HttpEntity","methodName":"getPriceInfo","className":"ConsignPriceController","packageName":"consignprice.controller","methodId":"consignprice.controller.ConsignPriceController.getPriceInfo","classId":"consignprice.controller.ConsignPriceController","line":34,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consignprice/price\""}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consignprice/config\")\n    public HttpEntity getPriceConfig(@RequestHeader HttpHeaders headers) {\n        return ok(service.getPriceConfig(headers));\n    }","returnType":"HttpEntity","methodName":"getPriceConfig","className":"ConsignPriceController","packageName":"consignprice.controller","methodId":"consignprice.controller.ConsignPriceController.getPriceConfig","classId":"consignprice.controller.ConsignPriceController","line":39,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consignprice/config\""}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/consignprice\")\n    public HttpEntity modifyPriceConfig(@RequestBody ConsignPrice priceConfig,\n                                        @RequestHeader HttpHeaders headers) {\n        return ok(service.createAndModifyPrice(priceConfig, headers));\n    }","returnType":"HttpEntity","methodName":"modifyPriceConfig","className":"ConsignPriceController","packageName":"consignprice.controller","methodId":"consignprice.controller.ConsignPriceController.modifyPriceConfig","classId":"consignprice.controller.ConsignPriceController","line":44,"msArgumentList":[{"returnType":"ConsignPrice"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/consignprice\""}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java","directoryName":""},"code":"@Query(\"{ \u0027index\u0027: ?0 }\")\n    ConsignPrice findByIndex(int index);","returnType":"ConsignPrice","methodName":"findByIndex","className":"ConsignPriceConfigRepository","packageName":"consignprice.repository","methodId":"consignprice.repository.ConsignPriceConfigRepository.findByIndex","classId":"consignprice.repository.ConsignPriceConfigRepository","line":20,"msArgumentList":[{"returnType":"int"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getPriceByWeightAndRegion(double weight, boolean isWithinRegion, HttpHeaders headers) {\n        ConsignPrice priceConfig \u003d repository.findByIndex(0);\n        double price \u003d 0;\n        double initialPrice \u003d priceConfig.getInitialPrice();\n        if (weight \u003c\u003d priceConfig.getInitialWeight()) {\n            price \u003d initialPrice;\n        } else {\n            double extraWeight \u003d weight - priceConfig.getInitialWeight();\n            if (isWithinRegion) {\n                price \u003d initialPrice + extraWeight * priceConfig.getWithinPrice();\n            }else {\n                price \u003d initialPrice + extraWeight * priceConfig.getBeyondPrice();\n            }\n        }\n        return new Response\u003c\u003e(1, success, price);\n    }","returnType":"Response","methodName":"getPriceByWeightAndRegion","className":"ConsignPriceServiceImpl","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion","classId":"consignprice.service.ConsignPriceServiceImpl","line":25,"msArgumentList":[{"returnType":"double"},{"returnType":"boolean"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryPriceInformation(HttpHeaders headers) {\n        StringBuilder sb \u003d new StringBuilder();\n        ConsignPrice price \u003d repository.findByIndex(0);\n        sb.append(\"The price of weight within \");\n        sb.append(price.getInitialWeight());\n        sb.append(\" is \");\n        sb.append(price.getInitialPrice());\n        sb.append(\". The price of extra weight within the region is \");\n        sb.append(price.getWithinPrice());\n        sb.append(\" and beyond the region is \");\n        sb.append(price.getBeyondPrice());\n        sb.append(\"\\n\");\n        return new Response\u003c\u003e(1, success, sb.toString());\n    }","returnType":"Response","methodName":"queryPriceInformation","className":"ConsignPriceServiceImpl","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceServiceImpl.queryPriceInformation","classId":"consignprice.service.ConsignPriceServiceImpl","line":43,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createAndModifyPrice(ConsignPrice config, HttpHeaders headers) {\n        ConsignPriceServiceImpl.LOGGER.info(\"[Consign Price Service][Create New Price Config]\");\n        //update price\n        ConsignPrice originalConfig;\n        if (repository.findByIndex(0) !\u003d null) {\n            originalConfig \u003d repository.findByIndex(0);\n        } else {\n            originalConfig \u003d new ConsignPrice();\n        }\n        originalConfig.setId(config.getId());\n        originalConfig.setIndex(0);\n        originalConfig.setInitialPrice(config.getInitialPrice());\n        originalConfig.setInitialWeight(config.getInitialWeight());\n        originalConfig.setWithinPrice(config.getWithinPrice());\n        originalConfig.setBeyondPrice(config.getBeyondPrice());\n        repository.save(originalConfig);\n        return new Response\u003c\u003e(1, success, originalConfig);\n    }","returnType":"Response","methodName":"createAndModifyPrice","className":"ConsignPriceServiceImpl","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice","classId":"consignprice.service.ConsignPriceServiceImpl","line":59,"msArgumentList":[{"returnType":"ConsignPrice"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getPriceConfig(HttpHeaders headers) {\n        return new Response\u003c\u003e(1, success, repository.findByIndex(0));\n    }","returnType":"Response","methodName":"getPriceConfig","className":"ConsignPriceServiceImpl","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceServiceImpl.getPriceConfig","classId":"consignprice.service.ConsignPriceServiceImpl","line":79,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceService.java","directoryName":""},"code":"Response getPriceByWeightAndRegion(double weight, boolean isWithinRegion, HttpHeaders headers);","returnType":"Response","methodName":"getPriceByWeightAndRegion","className":"ConsignPriceService","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceService.getPriceByWeightAndRegion","classId":"consignprice.service.ConsignPriceService","line":20,"msArgumentList":[{"returnType":"double"},{"returnType":"boolean"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceService.java","directoryName":""},"code":"Response queryPriceInformation(HttpHeaders headers);","returnType":"Response","methodName":"queryPriceInformation","className":"ConsignPriceService","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceService.queryPriceInformation","classId":"consignprice.service.ConsignPriceService","line":28,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceService.java","directoryName":""},"code":"Response createAndModifyPrice(ConsignPrice config, HttpHeaders headers);","returnType":"Response","methodName":"createAndModifyPrice","className":"ConsignPriceService","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceService.createAndModifyPrice","classId":"consignprice.service.ConsignPriceService","line":37,"msArgumentList":[{"returnType":"ConsignPrice"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceService.java","directoryName":""},"code":"Response getPriceConfig(HttpHeaders headers);","returnType":"Response","methodName":"getPriceConfig","className":"ConsignPriceService","packageName":"consignprice.service","methodId":"consignprice.service.ConsignPriceService.getPriceConfig","classId":"consignprice.service.ConsignPriceService","line":45,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Payment Service ] !\";\n    }","returnType":"String","methodName":"home","className":"PaymentController","packageName":"com.trainticket.controller","methodId":"com.trainticket.controller.PaymentController.home","classId":"com.trainticket.controller.PaymentController","line":23,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java","directoryName":""},"code":"@PostMapping(path \u003d \"/payment\")\n    public HttpEntity pay(@RequestBody Payment info, @RequestHeader HttpHeaders headers) {\n        return ok(service.pay(info, headers));\n    }","returnType":"HttpEntity","methodName":"pay","className":"PaymentController","packageName":"com.trainticket.controller","methodId":"com.trainticket.controller.PaymentController.pay","classId":"com.trainticket.controller.PaymentController","line":28,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/payment\""}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java","directoryName":""},"code":"@PostMapping(path \u003d \"/payment/money\")\n    public HttpEntity addMoney(@RequestBody Payment info, @RequestHeader HttpHeaders headers) {\n        return ok(service.addMoney(info, headers));\n    }","returnType":"HttpEntity","methodName":"addMoney","className":"PaymentController","packageName":"com.trainticket.controller","methodId":"com.trainticket.controller.PaymentController.addMoney","classId":"com.trainticket.controller.PaymentController","line":33,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/payment/money\""}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/payment\")\n    public HttpEntity query(@RequestHeader HttpHeaders headers) {\n        return ok(service.query(headers));\n    }","returnType":"HttpEntity","methodName":"query","className":"PaymentController","packageName":"com.trainticket.controller","methodId":"com.trainticket.controller.PaymentController.query","classId":"com.trainticket.controller.PaymentController","line":38,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/payment\""}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java","directoryName":""},"code":"Payment findById(String id);","returnType":"Payment","methodName":"findById","className":"PaymentRepository","packageName":"com.trainticket.repository","methodId":"com.trainticket.repository.PaymentRepository.findById","classId":"com.trainticket.repository.PaymentRepository","line":13,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java","directoryName":""},"code":"Payment findByOrderId(String orderId);","returnType":"Payment","methodName":"findByOrderId","className":"PaymentRepository","packageName":"com.trainticket.repository","methodId":"com.trainticket.repository.PaymentRepository.findByOrderId","classId":"com.trainticket.repository.PaymentRepository","line":15,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java","directoryName":""},"code":"@Override\n    List\u003cPayment\u003e findAll();","returnType":"List\u003cPayment\u003e","methodName":"findAll","className":"PaymentRepository","packageName":"com.trainticket.repository","methodId":"com.trainticket.repository.PaymentRepository.findAll","classId":"com.trainticket.repository.PaymentRepository","line":17,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java","directoryName":""},"code":"List\u003cPayment\u003e findByUserId(String userId);","returnType":"List\u003cPayment\u003e","methodName":"findByUserId","className":"PaymentRepository","packageName":"com.trainticket.repository","methodId":"com.trainticket.repository.PaymentRepository.findByUserId","classId":"com.trainticket.repository.PaymentRepository","line":20,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response pay(Payment info, HttpHeaders headers){\n\n        if(paymentRepository.findByOrderId(info.getOrderId()) \u003d\u003d null){\n            Payment payment \u003d new Payment();\n            payment.setOrderId(info.getOrderId());\n            payment.setPrice(info.getPrice());\n            payment.setUserId(info.getUserId());\n            paymentRepository.save(payment);\n            return new Response\u003c\u003e(1, \"Pay Success\", null);\n        }else{\n            return new Response\u003c\u003e(0, \"Pay Failed, order not found with order id\" +info.getOrderId(), null);\n        }\n    }","returnType":"Response","methodName":"pay","className":"PaymentServiceImpl","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentServiceImpl.pay","classId":"com.trainticket.service.PaymentServiceImpl","line":31,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addMoney(Payment info, HttpHeaders headers){\n        Money addMoney \u003d new Money();\n        addMoney.setUserId(info.getUserId());\n        addMoney.setMoney(info.getPrice());\n        addMoneyRepository.save(addMoney);\n        return new Response\u003c\u003e(1,\"Add Money Success\", addMoney);\n    }","returnType":"Response","methodName":"addMoney","className":"PaymentServiceImpl","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentServiceImpl.addMoney","classId":"com.trainticket.service.PaymentServiceImpl","line":46,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public Response query(HttpHeaders headers){\n        List\u003cPayment\u003e payments \u003d paymentRepository.findAll();\n        if(payments!\u003d null \u0026\u0026 !payments.isEmpty()){\n            return new Response\u003c\u003e(1,\"Query Success\",  payments);\n        }else {\n            return new Response\u003c\u003e(0, \"No Content\", null);\n        }\n    }","returnType":"Response","methodName":"query","className":"PaymentServiceImpl","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentServiceImpl.query","classId":"com.trainticket.service.PaymentServiceImpl","line":55,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java","directoryName":""},"code":"@Override\n    public void initPayment(Payment payment, HttpHeaders headers){\n        Payment paymentTemp \u003d paymentRepository.findById(payment.getId());\n        if(paymentTemp \u003d\u003d null){\n            paymentRepository.save(payment);\n        }else{\n            PaymentServiceImpl.LOGGER.info(\"[Payment Service][Init Payment] Already Exists: {}\", payment.getId());\n        }\n    }","returnType":"void","methodName":"initPayment","className":"PaymentServiceImpl","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentServiceImpl.initPayment","classId":"com.trainticket.service.PaymentServiceImpl","line":65,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentService.java","directoryName":""},"code":"Response pay(Payment info, HttpHeaders headers);","returnType":"Response","methodName":"pay","className":"PaymentService","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentService.pay","classId":"com.trainticket.service.PaymentService","line":13,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentService.java","directoryName":""},"code":"Response addMoney(Payment info, HttpHeaders headers);","returnType":"Response","methodName":"addMoney","className":"PaymentService","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentService.addMoney","classId":"com.trainticket.service.PaymentService","line":15,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentService.java","directoryName":""},"code":"Response query(HttpHeaders headers);","returnType":"Response","methodName":"query","className":"PaymentService","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentService.query","classId":"com.trainticket.service.PaymentService","line":17,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-payment-service/src/main/java/com/trainticket/service/PaymentService.java","directoryName":""},"code":"void initPayment(Payment payment,HttpHeaders headers);","returnType":"void","methodName":"initPayment","className":"PaymentService","packageName":"com.trainticket.service","methodId":"com.trainticket.service.PaymentService.initPayment","classId":"com.trainticket.service.PaymentService","line":19,"msArgumentList":[{"returnType":"Payment"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/prices/welcome\")\n    public String home() {\n        return \"Welcome to [ Price Service ] !\";\n    }","returnType":"String","methodName":"home","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.home","classId":"price.controller.PriceController","line":23,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/prices/welcome\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/prices/{routeId}/{trainType}\")\n    public HttpEntity query(@PathVariable String routeId, @PathVariable String trainType,\n                            @RequestHeader HttpHeaders headers) {\n        return ok(service.findByRouteIdAndTrainType(routeId, trainType, headers));\n    }","returnType":"HttpEntity","methodName":"query","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.query","classId":"price.controller.PriceController","line":28,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/prices/{routeId}/{trainType}\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/prices\")\n    public HttpEntity queryAll(@RequestHeader HttpHeaders headers) {\n        return ok(service.findAllPriceConfig(headers));\n    }","returnType":"HttpEntity","methodName":"queryAll","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.queryAll","classId":"price.controller.PriceController","line":34,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/prices\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/prices\")\n    public HttpEntity\u003c?\u003e create(@RequestBody PriceConfig info,\n                                @RequestHeader HttpHeaders headers) {\n        return new ResponseEntity\u003c\u003e(service.createNewPriceConfig(info, headers), HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003c?\u003e","methodName":"create","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.create","classId":"price.controller.PriceController","line":39,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/prices\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/prices\")\n    public HttpEntity delete(@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers) {\n        return ok(service.deletePriceConfig(info, headers));\n    }","returnType":"HttpEntity","methodName":"delete","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.delete","classId":"price.controller.PriceController","line":45,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/prices\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/controller/PriceController.java","directoryName":""},"code":"@PutMapping(value \u003d \"/prices\")\n    public HttpEntity update(@RequestBody PriceConfig info, @RequestHeader HttpHeaders headers) {\n        return ok(service.updatePriceConfig(info, headers));\n    }","returnType":"HttpEntity","methodName":"update","className":"PriceController","packageName":"price.controller","methodId":"price.controller.PriceController.update","classId":"price.controller.PriceController","line":50,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/prices\""}]},{"msId":{"path":"/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java","directoryName":""},"code":"@Query(\"{ \u0027id\u0027: ?0 }\")\n    PriceConfig findById(UUID id);","returnType":"PriceConfig","methodName":"findById","className":"PriceConfigRepository","packageName":"price.repository","methodId":"price.repository.PriceConfigRepository.findById","classId":"price.repository.PriceConfigRepository","line":16,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java","directoryName":""},"code":"@Query(\"{ \u0027routeId\u0027: ?0 , \u0027trainType\u0027: ?1 }\")\n    PriceConfig findByRouteIdAndTrainType(String routeId,String trainType);","returnType":"PriceConfig","methodName":"findByRouteIdAndTrainType","className":"PriceConfigRepository","packageName":"price.repository","methodId":"price.repository.PriceConfigRepository.findByRouteIdAndTrainType","classId":"price.repository.PriceConfigRepository","line":19,"msArgumentList":[{"returnType":"String"},{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java","directoryName":""},"code":"@Override\n    List\u003cPriceConfig\u003e findAll();","returnType":"List\u003cPriceConfig\u003e","methodName":"findAll","className":"PriceConfigRepository","packageName":"price.repository","methodId":"price.repository.PriceConfigRepository.findAll","classId":"price.repository.PriceConfigRepository","line":22,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"Response createNewPriceConfig(PriceConfig priceConfig, HttpHeaders headers);","returnType":"Response","methodName":"createNewPriceConfig","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.createNewPriceConfig","classId":"price.service.PriceService","line":14,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"PriceConfig findById(String id, HttpHeaders headers);","returnType":"PriceConfig","methodName":"findById","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.findById","classId":"price.service.PriceService","line":16,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"Response findByRouteIdAndTrainType(String routeId, String trainType, HttpHeaders headers);","returnType":"Response","methodName":"findByRouteIdAndTrainType","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.findByRouteIdAndTrainType","classId":"price.service.PriceService","line":18,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"Response findAllPriceConfig(HttpHeaders headers);","returnType":"Response","methodName":"findAllPriceConfig","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.findAllPriceConfig","classId":"price.service.PriceService","line":20,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"Response deletePriceConfig(PriceConfig c, HttpHeaders headers);","returnType":"Response","methodName":"deletePriceConfig","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.deletePriceConfig","classId":"price.service.PriceService","line":22,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceService.java","directoryName":""},"code":"Response updatePriceConfig(PriceConfig c, HttpHeaders headers);","returnType":"Response","methodName":"updatePriceConfig","className":"PriceService","packageName":"price.service","methodId":"price.service.PriceService.updatePriceConfig","classId":"price.service.PriceService","line":24,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createNewPriceConfig(PriceConfig createAndModifyPriceConfig, HttpHeaders headers) {\n        PriceServiceImpl.LOGGER.info(\"[Price Service][Create New Price Config]\");\n        PriceConfig priceConfig \u003d null;\n        // create\n        if (createAndModifyPriceConfig.getId() \u003d\u003d null || createAndModifyPriceConfig.getId().toString().length() \u003c 10) {\n            priceConfig \u003d new PriceConfig();\n            priceConfig.setId(UUID.randomUUID());\n            priceConfig.setBasicPriceRate(createAndModifyPriceConfig.getBasicPriceRate());\n            priceConfig.setFirstClassPriceRate(createAndModifyPriceConfig.getFirstClassPriceRate());\n            priceConfig.setRouteId(createAndModifyPriceConfig.getRouteId());\n            priceConfig.setTrainType(createAndModifyPriceConfig.getTrainType());\n            priceConfigRepository.save(priceConfig);\n        } else {\n            // modify\n            priceConfig \u003d priceConfigRepository.findById(createAndModifyPriceConfig.getId());\n            if (priceConfig \u003d\u003d null) {\n                priceConfig \u003d new PriceConfig();\n                priceConfig.setId(createAndModifyPriceConfig.getId());\n            }\n            priceConfig.setBasicPriceRate(createAndModifyPriceConfig.getBasicPriceRate());\n            priceConfig.setFirstClassPriceRate(createAndModifyPriceConfig.getFirstClassPriceRate());\n            priceConfig.setRouteId(createAndModifyPriceConfig.getRouteId());\n            priceConfig.setTrainType(createAndModifyPriceConfig.getTrainType());\n            priceConfigRepository.save(priceConfig);\n        }\n        return new Response\u003c\u003e(1, \"Create success\", priceConfig);\n    }","returnType":"Response","methodName":"createNewPriceConfig","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.createNewPriceConfig","classId":"price.service.PriceServiceImpl","line":30,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public PriceConfig findById(String id, HttpHeaders headers) {\n        PriceServiceImpl.LOGGER.info(\"[Price Service][Find By Id] ID: {}\", id);\n        return priceConfigRepository.findById(UUID.fromString(id));\n    }","returnType":"PriceConfig","methodName":"findById","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.findById","classId":"price.service.PriceServiceImpl","line":59,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findByRouteIdAndTrainType(String routeId, String trainType, HttpHeaders headers) {\n        PriceServiceImpl.LOGGER.info(\"[Price Service][Find By Route And Train Type] Rote: {}   Train Type: {}\", routeId, trainType);\n        PriceConfig priceConfig \u003d priceConfigRepository.findByRouteIdAndTrainType(routeId, trainType);\n        PriceServiceImpl.LOGGER.info(\"[Price Service][Find By Route Id And Train Type]\");\n\n        if (priceConfig \u003d\u003d null) {\n            return new Response\u003c\u003e(0, noThatConfig, null);\n        } else {\n            return new Response\u003c\u003e(1, \"Success\", priceConfig);\n        }\n    }","returnType":"Response","methodName":"findByRouteIdAndTrainType","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.findByRouteIdAndTrainType","classId":"price.service.PriceServiceImpl","line":65,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findAllPriceConfig(HttpHeaders headers) {\n        List\u003cPriceConfig\u003e list \u003d priceConfigRepository.findAll();\n        if (list \u003d\u003d null) {\n            list \u003d new ArrayList\u003c\u003e();\n        }\n\n        if (!list.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Success\", list);\n        } else {\n            return new Response\u003c\u003e(0, \"No price config\", null);\n        }\n\n    }","returnType":"Response","methodName":"findAllPriceConfig","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.findAllPriceConfig","classId":"price.service.PriceServiceImpl","line":79,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deletePriceConfig(PriceConfig c, HttpHeaders headers) {\n        PriceConfig priceConfig \u003d priceConfigRepository.findById(c.getId());\n        if (priceConfig \u003d\u003d null) {\n            return new Response\u003c\u003e(0, noThatConfig, null);\n        } else {\n            PriceConfig pc \u003d new PriceConfig();\n            pc.setId(c.getId());\n            pc.setRouteId(c.getRouteId());\n            pc.setTrainType(c.getTrainType());\n            pc.setBasicPriceRate(c.getBasicPriceRate());\n            pc.setFirstClassPriceRate(c.getFirstClassPriceRate());\n            priceConfigRepository.delete(pc);\n            return new Response\u003c\u003e(1, \"Delete success\", pc);\n        }\n    }","returnType":"Response","methodName":"deletePriceConfig","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.deletePriceConfig","classId":"price.service.PriceServiceImpl","line":94,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-price-service/src/main/java/price/service/PriceServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updatePriceConfig(PriceConfig c, HttpHeaders headers) {\n        PriceConfig priceConfig \u003d priceConfigRepository.findById(c.getId());\n        if (priceConfig \u003d\u003d null) {\n            return new Response\u003c\u003e(0, noThatConfig, null);\n        } else {\n            priceConfig.setId(c.getId());\n            priceConfig.setBasicPriceRate(c.getBasicPriceRate());\n            priceConfig.setFirstClassPriceRate(c.getFirstClassPriceRate());\n            priceConfig.setRouteId(c.getRouteId());\n            priceConfig.setTrainType(c.getTrainType());\n            priceConfigRepository.save(priceConfig);\n            return new Response\u003c\u003e(1, \"Update success\", priceConfig);\n        }\n    }","returnType":"Response","methodName":"updatePriceConfig","className":"PriceServiceImpl","packageName":"price.service","methodId":"price.service.PriceServiceImpl.updatePriceConfig","classId":"price.service.PriceServiceImpl","line":111,"msArgumentList":[{"returnType":"PriceConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Order Service ] !\";\n    }","returnType":"String","methodName":"home","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.home","classId":"order.controller.OrderController","line":28,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/order/tickets\")\n    public HttpEntity getTicketListByDateAndTripId(@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Service][Get Sold Ticket] Date: {}\", seatRequest.getTravelDate().toString());\n        return ok(orderService.getSoldTickets(seatRequest, headers));\n    }","returnType":"HttpEntity","methodName":"getTicketListByDateAndTripId","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.getTicketListByDateAndTripId","classId":"order.controller.OrderController","line":35,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/order/tickets\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/order\")\n    public HttpEntity createNewOrder(@RequestBody Order createOrder, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Service][Create Order] Create Order form {} ---\u003e {} at {}\", createOrder.getFrom(), createOrder.getTo(), createOrder.getTravelDate());\n        OrderController.LOGGER.info(\"[Order Service][Verify Login] Success\");\n        return ok(orderService.create(createOrder, headers));\n    }","returnType":"HttpEntity","methodName":"createNewOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.createNewOrder","classId":"order.controller.OrderController","line":41,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/order\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/order/admin\")\n    public HttpEntity addcreateNewOrder(@RequestBody Order order, @RequestHeader HttpHeaders headers) {\n        return ok(orderService.addNewOrder(order, headers));\n    }","returnType":"HttpEntity","methodName":"addcreateNewOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.addcreateNewOrder","classId":"order.controller.OrderController","line":49,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/order/admin\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/order/query\")\n    public HttpEntity queryOrders(@RequestBody OrderInfo qi,\n                                  @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Query Orders] Query Orders for {}\", qi.getLoginId());\n        OrderController.LOGGER.info(\"[Order Other Service][Verify Login] Success\");\n        return ok(orderService.queryOrders(qi, qi.getLoginId(), headers));\n    }","returnType":"HttpEntity","methodName":"queryOrders","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.queryOrders","classId":"order.controller.OrderController","line":55,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/order/query\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/order/refresh\")\n    public HttpEntity queryOrdersForRefresh(@RequestBody OrderInfo qi,\n                                            @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Query Orders] Query Orders for {}\", qi.getLoginId());\n        return ok(orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers));\n    }","returnType":"HttpEntity","methodName":"queryOrdersForRefresh","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.queryOrdersForRefresh","classId":"order.controller.OrderController","line":64,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/order/refresh\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/{travelDate}/{trainNumber}\")\n    public HttpEntity calculateSoldTicket(@PathVariable Date travelDate, @PathVariable String trainNumber,\n                                          @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Calculate Sold Tickets] Date: {} TrainNumber: {}\", travelDate, trainNumber);\n        return ok(orderService.queryAlreadySoldOrders(travelDate, trainNumber, headers));\n    }","returnType":"HttpEntity","methodName":"calculateSoldTicket","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.calculateSoldTicket","classId":"order.controller.OrderController","line":72,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/{travelDate}/{trainNumber}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/price/{orderId}\")\n    public HttpEntity getOrderPrice(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Get Order Price] Order Id: {}\", orderId);\n        // String\n        return ok(orderService.getOrderPrice(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"getOrderPrice","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.getOrderPrice","classId":"order.controller.OrderController","line":80,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/price/{orderId}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/orderPay/{orderId}\")\n    public HttpEntity payOrder(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Pay Order] Order Id: {}\", orderId);\n        // Order\n        return ok(orderService.payOrder(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"payOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.payOrder","classId":"order.controller.OrderController","line":89,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/orderPay/{orderId}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/{orderId}\")\n    public HttpEntity getOrderById(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Get Order By Id] Order Id: {}\", orderId);\n        // Order\n        return ok(orderService.getOrderById(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"getOrderById","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.getOrderById","classId":"order.controller.OrderController","line":97,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/{orderId}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/status/{orderId}/{status}\")\n    public HttpEntity modifyOrder(@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Modify Order Status] Order Id: {}\", orderId);\n        // Order\n        return ok(orderService.modifyOrder(orderId, status, headers));\n    }","returnType":"HttpEntity","methodName":"modifyOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.modifyOrder","classId":"order.controller.OrderController","line":105,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/status/{orderId}/{status}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order/security/{checkDate}/{accountId}\")\n    public HttpEntity securityInfoCheck(@PathVariable Date checkDate, @PathVariable String accountId,\n                                        @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Security Info Get] {}\", accountId);\n        return ok(orderService.checkSecurityAboutOrder(checkDate, accountId, headers));\n    }","returnType":"HttpEntity","methodName":"securityInfoCheck","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.securityInfoCheck","classId":"order.controller.OrderController","line":114,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order/security/{checkDate}/{accountId}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/order\")\n    public HttpEntity saveOrderInfo(@RequestBody Order orderInfo,\n                                    @RequestHeader HttpHeaders headers) {\n\n        OrderController.LOGGER.info(\"[Order Other Service][Verify Login] Success\");\n        return ok(orderService.saveChanges(orderInfo, headers));\n    }","returnType":"HttpEntity","methodName":"saveOrderInfo","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.saveOrderInfo","classId":"order.controller.OrderController","line":123,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/order\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/order/admin\")\n    public HttpEntity updateOrder(@RequestBody Order order, @RequestHeader HttpHeaders headers) {\n        // Order\n        return ok(orderService.updateOrder(order, headers));\n    }","returnType":"HttpEntity","methodName":"updateOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.updateOrder","classId":"order.controller.OrderController","line":132,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/order/admin\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/order/{orderId}\")\n    public HttpEntity deleteOrder(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Delete Order] Order Id: {}\", orderId);\n        // Order\n        return ok(orderService.deleteOrder(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.deleteOrder","classId":"order.controller.OrderController","line":140,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/order/{orderId}\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/controller/OrderController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/order\")\n    public HttpEntity findAllOrder(@RequestHeader HttpHeaders headers) {\n        OrderController.LOGGER.info(\"[Order Other Service][Find All Order]\");\n        // ArrayList\u003cOrder\u003e\n        return ok(orderService.getAllOrders(headers));\n    }","returnType":"HttpEntity","methodName":"findAllOrder","className":"OrderController","packageName":"order.controller","methodId":"order.controller.OrderController.findAllOrder","classId":"order.controller.OrderController","line":150,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/order\""}]},{"msId":{"path":"/ts-order-service/src/main/java/order/repository/OrderRepository.java","directoryName":""},"code":"@Query(\"{ \u0027id\u0027: ?0 }\")\n    Order findById(UUID id);","returnType":"Order","methodName":"findById","className":"OrderRepository","packageName":"order.repository","methodId":"order.repository.OrderRepository.findById","classId":"order.repository.OrderRepository","line":17,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/repository/OrderRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cOrder\u003e findAll();","returnType":"ArrayList\u003cOrder\u003e","methodName":"findAll","className":"OrderRepository","packageName":"order.repository","methodId":"order.repository.OrderRepository.findAll","classId":"order.repository.OrderRepository","line":20,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/repository/OrderRepository.java","directoryName":""},"code":"@Query(\"{ \u0027accountId\u0027 : ?0 }\")\n    ArrayList\u003cOrder\u003e findByAccountId(UUID accountId);","returnType":"ArrayList\u003cOrder\u003e","methodName":"findByAccountId","className":"OrderRepository","packageName":"order.repository","methodId":"order.repository.OrderRepository.findByAccountId","classId":"order.repository.OrderRepository","line":23,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/repository/OrderRepository.java","directoryName":""},"code":"@Query(\"{ \u0027travelDate\u0027 : ?0 , trainNumber : ?1 }\")\n    ArrayList\u003cOrder\u003e findByTravelDateAndTrainNumber(Date travelDate,String trainNumber);","returnType":"ArrayList\u003cOrder\u003e","methodName":"findByTravelDateAndTrainNumber","className":"OrderRepository","packageName":"order.repository","methodId":"order.repository.OrderRepository.findByTravelDateAndTrainNumber","classId":"order.repository.OrderRepository","line":26,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/repository/OrderRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"OrderRepository","packageName":"order.repository","methodId":"order.repository.OrderRepository.deleteById","classId":"order.repository.OrderRepository","line":29,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response findOrderById(UUID id, HttpHeaders headers);","returnType":"Response","methodName":"findOrderById","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.findOrderById","classId":"order.service.OrderService","line":15,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response create(Order newOrder, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.create","classId":"order.service.OrderService","line":17,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response saveChanges(Order order, HttpHeaders headers);","returnType":"Response","methodName":"saveChanges","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.saveChanges","classId":"order.service.OrderService","line":19,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response cancelOrder(UUID accountId, UUID orderId, HttpHeaders headers);","returnType":"Response","methodName":"cancelOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.cancelOrder","classId":"order.service.OrderService","line":21,"msArgumentList":[{"returnType":"UUID"},{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response queryOrders(OrderInfo qi, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"queryOrders","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.queryOrders","classId":"order.service.OrderService","line":23,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response queryOrdersForRefresh(OrderInfo qi, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"queryOrdersForRefresh","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.queryOrdersForRefresh","classId":"order.service.OrderService","line":25,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response alterOrder(OrderAlterInfo oai, HttpHeaders headers);","returnType":"Response","methodName":"alterOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.alterOrder","classId":"order.service.OrderService","line":27,"msArgumentList":[{"returnType":"OrderAlterInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response queryAlreadySoldOrders(Date travelDate, String trainNumber, HttpHeaders headers);","returnType":"Response","methodName":"queryAlreadySoldOrders","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.queryAlreadySoldOrders","classId":"order.service.OrderService","line":29,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response getAllOrders(HttpHeaders headers);","returnType":"Response","methodName":"getAllOrders","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.getAllOrders","classId":"order.service.OrderService","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response modifyOrder(String orderId, int status, HttpHeaders headers);","returnType":"Response","methodName":"modifyOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.modifyOrder","classId":"order.service.OrderService","line":33,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response getOrderPrice(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"getOrderPrice","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.getOrderPrice","classId":"order.service.OrderService","line":35,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response payOrder(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"payOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.payOrder","classId":"order.service.OrderService","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response getOrderById(String orderId , HttpHeaders headers);","returnType":"Response","methodName":"getOrderById","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.getOrderById","classId":"order.service.OrderService","line":39,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response checkSecurityAboutOrder(Date checkDate, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"checkSecurityAboutOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.checkSecurityAboutOrder","classId":"order.service.OrderService","line":41,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"void initOrder(Order order, HttpHeaders headers);","returnType":"void","methodName":"initOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.initOrder","classId":"order.service.OrderService","line":43,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response deleteOrder(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"deleteOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.deleteOrder","classId":"order.service.OrderService","line":45,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response getSoldTickets(Seat seatRequest, HttpHeaders headers);","returnType":"Response","methodName":"getSoldTickets","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.getSoldTickets","classId":"order.service.OrderService","line":47,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response addNewOrder(Order order, HttpHeaders headers);","returnType":"Response","methodName":"addNewOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.addNewOrder","classId":"order.service.OrderService","line":49,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderService.java","directoryName":""},"code":"Response updateOrder(Order order, HttpHeaders headers);","returnType":"Response","methodName":"updateOrder","className":"OrderService","packageName":"order.service","methodId":"order.service.OrderService.updateOrder","classId":"order.service.OrderService","line":51,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getSoldTickets(Seat seatRequest, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e list \u003d orderRepository.findByTravelDateAndTrainNumber(seatRequest.getTravelDate(),\n                seatRequest.getTrainNumber());\n        if (list !\u003d null \u0026\u0026 !list.isEmpty()) {\n            Set ticketSet \u003d new HashSet();\n            for (Order tempOrder : list) {\n                ticketSet.add(new Ticket(Integer.parseInt(tempOrder.getSeatNumber()),\n                        tempOrder.getFrom(), tempOrder.getTo()));\n            }\n            LeftTicketInfo leftTicketInfo \u003d new LeftTicketInfo();\n            leftTicketInfo.setSoldTickets(ticketSet);\n            OrderServiceImpl.LOGGER.info(\"Left ticket info is: {}\", leftTicketInfo.toString());\n            return new Response\u003c\u003e(1, success, leftTicketInfo);\n        } else {\n            OrderServiceImpl.LOGGER.info(\"Left ticket info is empty\");\n            return new Response\u003c\u003e(0, \"Order is Null.\", null);\n        }\n    }","returnType":"Response","methodName":"getSoldTickets","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.getSoldTickets","classId":"order.service.OrderServiceImpl","line":36,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findOrderById(UUID id, HttpHeaders headers) {\n        Order order \u003d orderRepository.findById(id);\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No Content by this id\", null);\n        } else {\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"findOrderById","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.findOrderById","classId":"order.service.OrderServiceImpl","line":56,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(Order order, HttpHeaders headers) {\n        OrderServiceImpl.LOGGER.info(\"[Order Service][Create Order] Ready Create Order.\");\n        ArrayList\u003cOrder\u003e accountOrders \u003d orderRepository.findByAccountId(order.getAccountId());\n        if (accountOrders.contains(order)) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Order Create] Fail.Order already exists.\");\n            return new Response\u003c\u003e(0, \"Order already exist\", null);\n        } else {\n            order.setId(UUID.randomUUID());\n            orderRepository.save(order);\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Order Create] Success.\");\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Order Create] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"create","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.create","classId":"order.service.OrderServiceImpl","line":66,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response alterOrder(OrderAlterInfo oai, HttpHeaders headers) {\n\n        UUID oldOrderId \u003d oai.getPreviousOrderId();\n        Order oldOrder \u003d orderRepository.findById(oldOrderId);\n        if (oldOrder \u003d\u003d null) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Alter Order] Fail.Order do not exist.\");\n            return new Response\u003c\u003e(0, \"Old Order Does Not Exists\", null);\n        }\n        oldOrder.setStatus(OrderStatus.CANCEL.getCode());\n        saveChanges(oldOrder, headers);\n        Order newOrder \u003d oai.getNewOrderInfo();\n        newOrder.setId(UUID.randomUUID());\n        Response cor \u003d create(oai.getNewOrderInfo(), headers);\n        if (cor.getStatus() \u003d\u003d 1) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Alter Order] Success.\");\n            return new Response\u003c\u003e(1, success, newOrder);\n        } else {\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n    }","returnType":"Response","methodName":"alterOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.alterOrder","classId":"order.service.OrderServiceImpl","line":82,"msArgumentList":[{"returnType":"OrderAlterInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response\u003cArrayList\u003cOrder\u003e\u003e queryOrders(OrderInfo qi, String accountId, HttpHeaders headers) {\n        //1.Get all orders of the user\n        ArrayList\u003cOrder\u003e list \u003d orderRepository.findByAccountId(UUID.fromString(accountId));\n        OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order][Step 1] Get Orders Number of Account: {}\", list.size());\n        //2.Check is these orders fit the requirement/\n        if (qi.isEnableStateQuery() || qi.isEnableBoughtDateQuery() || qi.isEnableTravelDateQuery()) {\n            ArrayList\u003cOrder\u003e finalList \u003d new ArrayList\u003c\u003e();\n            for (Order tempOrder : list) {\n                boolean statePassFlag \u003d false;\n                boolean boughtDatePassFlag \u003d false;\n                boolean travelDatePassFlag \u003d false;\n                //3.Check order state requirement.\n                if (qi.isEnableStateQuery()) {\n                    if (tempOrder.getStatus() !\u003d qi.getState()) {\n                        statePassFlag \u003d false;\n                    } else {\n                        statePassFlag \u003d true;\n                    }\n                } else {\n                    statePassFlag \u003d true;\n                }\n                OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order][Step 2][Check Status Fits End]\");\n                //4.Check order travel date requirement.\n                if (qi.isEnableTravelDateQuery()) {\n                    if (tempOrder.getTravelDate().before(qi.getTravelDateEnd()) \u0026\u0026\n                            tempOrder.getTravelDate().after(qi.getBoughtDateStart())) {\n                        travelDatePassFlag \u003d true;\n                    } else {\n                        travelDatePassFlag \u003d false;\n                    }\n                } else {\n                    travelDatePassFlag \u003d true;\n                }\n                OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order][Step 2][Check Travel Date End]\");\n                //5.Check order bought date requirement.\n                if (qi.isEnableBoughtDateQuery()) {\n                    if (tempOrder.getBoughtDate().before(qi.getBoughtDateEnd()) \u0026\u0026\n                            tempOrder.getBoughtDate().after(qi.getBoughtDateStart())) {\n                        boughtDatePassFlag \u003d true;\n                    } else {\n                        boughtDatePassFlag \u003d false;\n                    }\n                } else {\n                    boughtDatePassFlag \u003d true;\n                }\n                OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order][Step 2][Check Bought Date End]\");\n                //6.check if all requirement fits.\n                if (statePassFlag \u0026\u0026 boughtDatePassFlag \u0026\u0026 travelDatePassFlag) {\n                    finalList.add(tempOrder);\n                }\n                OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order][Step 2][Check All Requirement End]\");\n            }\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order] Get order num: {}\", finalList.size());\n            return new Response\u003c\u003e(1, \"Get order num\", finalList);\n        } else {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Query Order] Get order num: {}\", list.size());\n            return new Response\u003c\u003e(1, \"Get order num\", list);\n        }\n    }","returnType":"Response\u003cArrayList\u003cOrder\u003e\u003e","methodName":"queryOrders","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.queryOrders","classId":"order.service.OrderServiceImpl","line":104,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryOrdersForRefresh(OrderInfo qi, String accountId, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d   queryOrders(qi, accountId, headers).getData();\n        ArrayList\u003cString\u003e stationIds \u003d new ArrayList\u003c\u003e();\n        for (Order order : orders) {\n            stationIds.add(order.getFrom());\n            stationIds.add(order.getTo());\n        }\n\n        List\u003cString\u003e names \u003d queryForStationId(stationIds, headers);\n        for (int i \u003d 0; i \u003c orders.size(); i++) {\n            orders.get(i).setFrom(names.get(i * 2));\n            orders.get(i).setTo(names.get(i * 2 + 1));\n        }\n        return new Response\u003c\u003e(1, \"Query Orders For Refresh Success\", orders);\n    }","returnType":"Response","methodName":"queryOrdersForRefresh","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.queryOrdersForRefresh","classId":"order.service.OrderServiceImpl","line":165,"msArgumentList":[{"returnType":"OrderInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"public List\u003cString\u003e queryForStationId(List\u003cString\u003e ids, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(ids, headers);\n        ResponseEntity\u003cResponse\u003cList\u003cString\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/namelist\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cString\u003e\u003e\u003e() {\n                });\n        OrderServiceImpl.LOGGER.info(\"Name List is: {}\", re.getBody().toString());\n        return re.getBody().getData();\n    }","returnType":"List\u003cString\u003e","methodName":"queryForStationId","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.queryForStationId","classId":"order.service.OrderServiceImpl","line":182,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response saveChanges(Order order, HttpHeaders headers) {\n\n        Order oldOrder \u003d orderRepository.findById(order.getId());\n        if (oldOrder \u003d\u003d null) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Modify Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            oldOrder.setAccountId(order.getAccountId());\n            oldOrder.setBoughtDate(order.getBoughtDate());\n            oldOrder.setTravelDate(order.getTravelDate());\n            oldOrder.setTravelTime(order.getTravelTime());\n            oldOrder.setCoachNumber(order.getCoachNumber());\n            oldOrder.setSeatClass(order.getSeatClass());\n            oldOrder.setSeatNumber(order.getSeatNumber());\n            oldOrder.setFrom(order.getFrom());\n            oldOrder.setTo(order.getTo());\n            oldOrder.setStatus(order.getStatus());\n            oldOrder.setTrainNumber(order.getTrainNumber());\n            oldOrder.setPrice(order.getPrice());\n            oldOrder.setContactsName(order.getContactsName());\n            oldOrder.setContactsDocumentNumber(order.getContactsDocumentNumber());\n            oldOrder.setDocumentType(order.getDocumentType());\n            orderRepository.save(oldOrder);\n            OrderServiceImpl.LOGGER.info(\"[Order Service] Success.\");\n            return new Response\u003c\u003e(1, success, oldOrder);\n        }\n    }","returnType":"Response","methodName":"saveChanges","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.saveChanges","classId":"order.service.OrderServiceImpl","line":195,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response cancelOrder(UUID accountId, UUID orderId, HttpHeaders headers) {\n        Order oldOrder \u003d orderRepository.findById(orderId);\n        if (oldOrder \u003d\u003d null) {\n            OrderServiceImpl.LOGGER.info(\"[Cancel Service][Cancel Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            oldOrder.setStatus(OrderStatus.CANCEL.getCode());\n            orderRepository.save(oldOrder);\n            OrderServiceImpl.LOGGER.info(\"[Cancel Service][Cancel Order] Success.\");\n            return new Response\u003c\u003e(1, success, oldOrder);\n        }\n    }","returnType":"Response","methodName":"cancelOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.cancelOrder","classId":"order.service.OrderServiceImpl","line":224,"msArgumentList":[{"returnType":"UUID"},{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAlreadySoldOrders(Date travelDate, String trainNumber, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d orderRepository.findByTravelDateAndTrainNumber(travelDate, trainNumber);\n        SoldTicket cstr \u003d new SoldTicket();\n        cstr.setTravelDate(travelDate);\n        cstr.setTrainNumber(trainNumber);\n        OrderServiceImpl.LOGGER.info(\"[Order Service][Calculate Sold Ticket] Get Orders Number: {}\", orders.size());\n        for (Order order : orders) {\n            if (order.getStatus() \u003e\u003d OrderStatus.CHANGE.getCode()) {\n                continue;\n            }\n            if (order.getSeatClass() \u003d\u003d SeatClass.NONE.getCode()) {\n                cstr.setNoSeat(cstr.getNoSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.BUSINESS.getCode()) {\n                cstr.setBusinessSeat(cstr.getBusinessSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                cstr.setFirstClassSeat(cstr.getFirstClassSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SECONDCLASS.getCode()) {\n                cstr.setSecondClassSeat(cstr.getSecondClassSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HARDSEAT.getCode()) {\n                cstr.setHardSeat(cstr.getHardSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SOFTSEAT.getCode()) {\n                cstr.setSoftSeat(cstr.getSoftSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HARDBED.getCode()) {\n                cstr.setHardBed(cstr.getHardBed() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SOFTBED.getCode()) {\n                cstr.setSoftBed(cstr.getSoftBed() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HIGHSOFTBED.getCode()) {\n                cstr.setHighSoftBed(cstr.getHighSoftBed() + 1);\n            } else {\n                OrderServiceImpl.LOGGER.info(\"[Order Service][Calculate Sold Tickets] Seat class not exists. Order ID: {}\", order.getId());\n            }\n        }\n        return new Response\u003c\u003e(1, success, cstr);\n    }","returnType":"Response","methodName":"queryAlreadySoldOrders","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.queryAlreadySoldOrders","classId":"order.service.OrderServiceImpl","line":238,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllOrders(HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d orderRepository.findAll();\n        if (orders !\u003d null \u0026\u0026 !orders.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Success.\", orders);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content.\", null);\n        }\n    }","returnType":"Response","methodName":"getAllOrders","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.getAllOrders","classId":"order.service.OrderServiceImpl","line":274,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyOrder(String orderId, int status, HttpHeaders headers) {\n        Order order \u003d orderRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            order.setStatus(status);\n            orderRepository.save(order);\n            return new Response\u003c\u003e(1, \"Modify Order Success\", order);\n        }\n    }","returnType":"Response","methodName":"modifyOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.modifyOrder","classId":"order.service.OrderServiceImpl","line":284,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getOrderPrice(String orderId, HttpHeaders headers) {\n        Order order \u003d orderRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            OrderServiceImpl.LOGGER.info(\"[Other Service][Get Order Price] Order Not Found.\");\n            return new Response\u003c\u003e(0, orderNotFound, \"-1.0\");\n        } else {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Get Order Price] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, success, order.getPrice());\n        }\n    }","returnType":"Response","methodName":"getOrderPrice","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.getOrderPrice","classId":"order.service.OrderServiceImpl","line":296,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response payOrder(String orderId, HttpHeaders headers) {\n        Order order \u003d orderRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            order.setStatus(OrderStatus.PAID.getCode());\n            orderRepository.save(order);\n            return new Response\u003c\u003e(1, \"Pay Order Success.\", order);\n        }\n    }","returnType":"Response","methodName":"payOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.payOrder","classId":"order.service.OrderServiceImpl","line":308,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getOrderById(String orderId, HttpHeaders headers) {\n        Order order \u003d orderRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            return new Response\u003c\u003e(1, \"Success.\", order);\n        }\n    }","returnType":"Response","methodName":"getOrderById","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.getOrderById","classId":"order.service.OrderServiceImpl","line":320,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public void initOrder(Order order, HttpHeaders headers) {\n        Order orderTemp \u003d orderRepository.findById(order.getId());\n        if (orderTemp \u003d\u003d null) {\n            orderRepository.save(order);\n        } else {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Init Order] Order Already Exists ID: {}\", order.getId());\n        }\n    }","returnType":"void","methodName":"initOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.initOrder","classId":"order.service.OrderServiceImpl","line":330,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response checkSecurityAboutOrder(Date dateFrom, String accountId, HttpHeaders headers) {\n        OrderSecurity result \u003d new OrderSecurity();\n        ArrayList\u003cOrder\u003e orders \u003d orderRepository.findByAccountId(UUID.fromString(accountId));\n        int countOrderInOneHour \u003d 0;\n        int countTotalValidOrder \u003d 0;\n        Calendar ca \u003d Calendar.getInstance();\n        ca.setTime(dateFrom);\n        ca.add(Calendar.HOUR_OF_DAY, -1);\n        dateFrom \u003d ca.getTime();\n        for (Order order : orders) {\n            if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode() ||\n                    order.getStatus() \u003d\u003d OrderStatus.PAID.getCode() ||\n                    order.getStatus() \u003d\u003d OrderStatus.COLLECTED.getCode()) {\n                countTotalValidOrder +\u003d 1;\n            }\n            if (order.getBoughtDate().after(dateFrom)) {\n                countOrderInOneHour +\u003d 1;\n            }\n        }\n        result.setOrderNumInLastOneHour(countOrderInOneHour);\n        result.setOrderNumOfValidOrder(countTotalValidOrder);\n        return new Response\u003c\u003e(1, \"Check Security Success . \", result);\n    }","returnType":"Response","methodName":"checkSecurityAboutOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.checkSecurityAboutOrder","classId":"order.service.OrderServiceImpl","line":340,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteOrder(String orderId, HttpHeaders headers) {\n        UUID orderUuid \u003d UUID.fromString(orderId);\n        Order order \u003d orderRepository.findById(orderUuid);\n\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"Order Not Exist.\", null);\n        } else {\n            orderRepository.deleteById(orderUuid);\n            return new Response\u003c\u003e(1, \"Delete Order Success\", order);\n        }\n    }","returnType":"Response","methodName":"deleteOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.deleteOrder","classId":"order.service.OrderServiceImpl","line":365,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addNewOrder(Order order, HttpHeaders headers) {\n        OrderServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Ready Add Order.\");\n        ArrayList\u003cOrder\u003e accountOrders \u003d orderRepository.findByAccountId(order.getAccountId());\n        if (accountOrders.contains(order)) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Fail.Order already exists.\");\n            return new Response\u003c\u003e(0, \"Order already exist\", null);\n        } else {\n            order.setId(UUID.randomUUID());\n            orderRepository.save(order);\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Success.\");\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, \"Add new Order Success\", order);\n        }\n    }","returnType":"Response","methodName":"addNewOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.addNewOrder","classId":"order.service.OrderServiceImpl","line":378,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-service/src/main/java/order/service/OrderServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateOrder(Order order, HttpHeaders headers) {\n        LOGGER.info(\"UPDATE ORDER INFO: \" + order.toString());\n        Order oldOrder \u003d orderRepository.findById(order.getId());\n        if (oldOrder \u003d\u003d null) {\n            OrderServiceImpl.LOGGER.info(\"[Order Service][Admin Update Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, \"Order Not Found, Can\u0027t update\", null);\n        } else {\n            OrderServiceImpl.LOGGER.info(\"{}\", oldOrder.toString());\n            oldOrder.setAccountId(order.getAccountId());\n            oldOrder.setBoughtDate(order.getBoughtDate());\n            oldOrder.setTravelDate(order.getTravelDate());\n            oldOrder.setTravelTime(order.getTravelTime());\n            oldOrder.setCoachNumber(order.getCoachNumber());\n            oldOrder.setSeatClass(order.getSeatClass());\n            oldOrder.setSeatNumber(order.getSeatNumber());\n            oldOrder.setFrom(order.getFrom());\n            oldOrder.setTo(order.getTo());\n            oldOrder.setStatus(order.getStatus());\n            oldOrder.setTrainNumber(order.getTrainNumber());\n            oldOrder.setPrice(order.getPrice());\n            oldOrder.setContactsName(order.getContactsName());\n            oldOrder.setContactsDocumentNumber(order.getContactsDocumentNumber());\n            oldOrder.setDocumentType(order.getDocumentType());\n            orderRepository.save(oldOrder);\n            OrderServiceImpl.LOGGER.info(\"[Order Service] [Admin Update Order] Success.\");\n            return new Response\u003c\u003e(1, \"Admin Update Order Success\", oldOrder);\n        }\n    }","returnType":"Response","methodName":"updateOrder","className":"OrderServiceImpl","packageName":"order.service","methodId":"order.service.OrderServiceImpl.updateOrder","classId":"order.service.OrderServiceImpl","line":394,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Route Service ] !\";\n    }","returnType":"String","methodName":"home","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.home","classId":"route.controller.RouteController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@PostMapping(path \u003d \"/routes\")\n    public ResponseEntity\u003cResponse\u003e createAndModifyRoute(@RequestBody RouteInfo createAndModifyRouteInfo, @RequestHeader HttpHeaders headers) {\n        RouteController.LOGGER.info(\"Create Route id: {}\", createAndModifyRouteInfo.getId());\n        return ok(routeService.createAndModify(createAndModifyRouteInfo, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"createAndModifyRoute","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.createAndModifyRoute","classId":"route.controller.RouteController","line":31,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/routes\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@DeleteMapping(path \u003d \"/routes/{routeId}\")\n    public HttpEntity deleteRoute(@PathVariable String routeId, @RequestHeader HttpHeaders headers) {\n        RouteController.LOGGER.info(\"Route id: {}\", routeId);\n        return ok(routeService.deleteRoute(routeId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteRoute","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.deleteRoute","classId":"route.controller.RouteController","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/routes/{routeId}\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/routes/{routeId}\")\n    public HttpEntity queryById(@PathVariable String routeId, @RequestHeader HttpHeaders headers) {\n        RouteController.LOGGER.info(\"Route id: {}\", routeId);\n        return ok(routeService.getRouteById(routeId, headers));\n    }","returnType":"HttpEntity","methodName":"queryById","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.queryById","classId":"route.controller.RouteController","line":43,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/routes/{routeId}\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/routes\")\n    public HttpEntity queryAll(@RequestHeader HttpHeaders headers) {\n        return ok(routeService.getAllRoutes(headers));\n    }","returnType":"HttpEntity","methodName":"queryAll","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.queryAll","classId":"route.controller.RouteController","line":49,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/routes\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/controller/RouteController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/routes/{startId}/{terminalId}\")\n    public HttpEntity queryByStartAndTerminal(@PathVariable String startId,\n                                              @PathVariable String terminalId,\n                                              @RequestHeader HttpHeaders headers) {\n        RouteController.LOGGER.info(\"startId : {}, terminalId: {}\", startId, terminalId);\n        return ok(routeService.getRouteByStartAndTerminal(startId, terminalId, headers));\n    }","returnType":"HttpEntity","methodName":"queryByStartAndTerminal","className":"RouteController","packageName":"route.controller","methodId":"route.controller.RouteController.queryByStartAndTerminal","classId":"route.controller.RouteController","line":54,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/routes/{startId}/{terminalId}\""}]},{"msId":{"path":"/ts-route-service/src/main/java/route/repository/RouteRepository.java","directoryName":""},"code":"@Query(\"{ \u0027id\u0027: ?0 }\")\n    Route findById(String id);","returnType":"Route","methodName":"findById","className":"RouteRepository","packageName":"route.repository","methodId":"route.repository.RouteRepository.findById","classId":"route.repository.RouteRepository","line":21,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/repository/RouteRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cRoute\u003e findAll();","returnType":"ArrayList\u003cRoute\u003e","methodName":"findAll","className":"RouteRepository","packageName":"route.repository","methodId":"route.repository.RouteRepository.findAll","classId":"route.repository.RouteRepository","line":29,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/repository/RouteRepository.java","directoryName":""},"code":"void removeRouteById(String id);","returnType":"void","methodName":"removeRouteById","className":"RouteRepository","packageName":"route.repository","methodId":"route.repository.RouteRepository.removeRouteById","classId":"route.repository.RouteRepository","line":37,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-service/src/main/java/route/repository/RouteRepository.java","directoryName":""},"code":"@Query(\"{ \u0027startStationId\u0027: ?0 , \u0027terminalStationId\u0027: ?1 }\")\n    ArrayList\u003cRoute\u003e findByStartStationIdAndTerminalStationId(String startingId, String terminalId);","returnType":"ArrayList\u003cRoute\u003e","methodName":"findByStartStationIdAndTerminalStationId","className":"RouteRepository","packageName":"route.repository","methodId":"route.repository.RouteRepository.findByStartStationIdAndTerminalStationId","classId":"route.repository.RouteRepository","line":46,"msArgumentList":[{"returnType":"String"},{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createAndModify(RouteInfo info, HttpHeaders headers) {\n        RouteServiceImpl.LOGGER.info(\"Create And Modify Start: {} End: {}\", info.getStartStation(), info.getEndStation());\n\n        String[] stations \u003d info.getStationList().split(\",\");\n        String[] distances \u003d info.getDistanceList().split(\",\");\n        List\u003cString\u003e stationList \u003d new ArrayList\u003c\u003e();\n        List\u003cInteger\u003e distanceList \u003d new ArrayList\u003c\u003e();\n        if (stations.length !\u003d distances.length) {\n            RouteServiceImpl.LOGGER.info(\"Station Number Not Equal To Distance Number\");\n\n            return new Response\u003c\u003e(0, \"Station Number Not Equal To Distance Number\", null);\n        }\n        for (int i \u003d 0; i \u003c stations.length; i++) {\n            stationList.add(stations[i]);\n            distanceList.add(Integer.parseInt(distances[i]));\n        }\n        int maxIdArrayLen \u003d 10;\n        if (info.getId() \u003d\u003d null || info.getId().length() \u003c maxIdArrayLen) {\n            Route route \u003d new Route();\n            route.setId(UUID.randomUUID().toString());\n            route.setStartStationId(info.getStartStation());\n            route.setTerminalStationId(info.getEndStation());\n            route.setStations(stationList);\n            route.setDistances(distanceList);\n            routeRepository.save(route);\n            RouteServiceImpl.LOGGER.info(\"Save success\");\n\n            return new Response\u003c\u003e(1, \"Save Success\", route);\n        } else {\n            Route route \u003d routeRepository.findById(info.getId());\n            if (route \u003d\u003d null) {\n                route \u003d new Route();\n                route.setId(info.getId());\n            }\n\n            route.setStartStationId(info.getStartStation());\n            route.setTerminalStationId(info.getEndStation());\n            route.setStations(stationList);\n            route.setDistances(distanceList);\n            routeRepository.save(route);\n            RouteServiceImpl.LOGGER.info(\"Modify success\");\n            return new Response\u003c\u003e(1, \"Modify success\", route);\n        }\n    }","returnType":"Response","methodName":"createAndModify","className":"RouteServiceImpl","packageName":"route.service","methodId":"route.service.RouteServiceImpl.createAndModify","classId":"route.service.RouteServiceImpl","line":29,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteRoute(String routeId, HttpHeaders headers) {\n        routeRepository.removeRouteById(routeId);\n        Route route \u003d routeRepository.findById(routeId);\n        if (route \u003d\u003d null) {\n            return new Response\u003c\u003e(1, \"Delete Success\", routeId);\n        } else {\n            return new Response\u003c\u003e(0, \"Delete failed, Reason unKnown with this routeId\", routeId);\n        }\n    }","returnType":"Response","methodName":"deleteRoute","className":"RouteServiceImpl","packageName":"route.service","methodId":"route.service.RouteServiceImpl.deleteRoute","classId":"route.service.RouteServiceImpl","line":75,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getRouteById(String routeId, HttpHeaders headers) {\n        Route route \u003d routeRepository.findById(routeId);\n        if (route \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No content with the routeId\", null);\n        } else {\n            return new Response\u003c\u003e(1, success, route);\n        }\n\n    }","returnType":"Response","methodName":"getRouteById","className":"RouteServiceImpl","packageName":"route.service","methodId":"route.service.RouteServiceImpl.getRouteById","classId":"route.service.RouteServiceImpl","line":86,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getRouteByStartAndTerminal(String startId, String terminalId, HttpHeaders headers) {\n        ArrayList\u003cRoute\u003e routes \u003d routeRepository.findAll();\n        RouteServiceImpl.LOGGER.info(\"[Route Service] Find All: {}\", routes.size());\n        List\u003cRoute\u003e resultList \u003d new ArrayList\u003c\u003e();\n        for (Route route : routes) {\n            if (route.getStations().contains(startId) \u0026\u0026\n                    route.getStations().contains(terminalId) \u0026\u0026\n                    route.getStations().indexOf(startId) \u003c route.getStations().indexOf(terminalId)) {\n                resultList.add(route);\n            }\n        }\n        if (!resultList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, resultList);\n        } else {\n            return new Response\u003c\u003e(0, \"No routes with the startId and terminalId\", null);\n        }\n    }","returnType":"Response","methodName":"getRouteByStartAndTerminal","className":"RouteServiceImpl","packageName":"route.service","methodId":"route.service.RouteServiceImpl.getRouteByStartAndTerminal","classId":"route.service.RouteServiceImpl","line":97,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllRoutes(HttpHeaders headers) {\n        ArrayList\u003cRoute\u003e routes \u003d routeRepository.findAll();\n        if (routes !\u003d null \u0026\u0026 !routes.isEmpty()) {\n            return new Response\u003c\u003e(1, success, routes);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content\", null);\n        }\n    }","returnType":"Response","methodName":"getAllRoutes","className":"RouteServiceImpl","packageName":"route.service","methodId":"route.service.RouteServiceImpl.getAllRoutes","classId":"route.service.RouteServiceImpl","line":116,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteService.java","directoryName":""},"code":"Response getRouteByStartAndTerminal(String startId, String terminalId, HttpHeaders headers);","returnType":"Response","methodName":"getRouteByStartAndTerminal","className":"RouteService","packageName":"route.service","methodId":"route.service.RouteService.getRouteByStartAndTerminal","classId":"route.service.RouteService","line":21,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteService.java","directoryName":""},"code":"Response getAllRoutes(HttpHeaders headers);","returnType":"Response","methodName":"getAllRoutes","className":"RouteService","packageName":"route.service","methodId":"route.service.RouteService.getAllRoutes","classId":"route.service.RouteService","line":29,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteService.java","directoryName":""},"code":"Response getRouteById(String routeId, HttpHeaders headers);","returnType":"Response","methodName":"getRouteById","className":"RouteService","packageName":"route.service","methodId":"route.service.RouteService.getRouteById","classId":"route.service.RouteService","line":38,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteService.java","directoryName":""},"code":"Response deleteRoute(String routeId, HttpHeaders headers);","returnType":"Response","methodName":"deleteRoute","className":"RouteService","packageName":"route.service","methodId":"route.service.RouteService.deleteRoute","classId":"route.service.RouteService","line":47,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-service/src/main/java/route/service/RouteService.java","directoryName":""},"code":"Response createAndModify(RouteInfo info, HttpHeaders headers);","returnType":"Response","methodName":"createAndModify","className":"RouteService","packageName":"route.service","methodId":"route.service.RouteService.createAndModify","classId":"route.service.RouteService","line":56,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/controller/RebookController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Rebook Service ] !\";\n    }","returnType":"String","methodName":"home","className":"RebookController","packageName":"rebook.controller","methodId":"rebook.controller.RebookController.home","classId":"rebook.controller.RebookController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/controller/RebookController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/rebook/difference\")\n    public HttpEntity payDifference(@RequestBody RebookInfo info,\n                                    @RequestHeader HttpHeaders headers) {\n        return ok(service.payDifference(info, headers));\n    }","returnType":"HttpEntity","methodName":"payDifference","className":"RebookController","packageName":"rebook.controller","methodId":"rebook.controller.RebookController.payDifference","classId":"rebook.controller.RebookController","line":31,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/rebook/difference\""}]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/controller/RebookController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/rebook\")\n    public HttpEntity rebook(@RequestBody RebookInfo info, @RequestHeader HttpHeaders headers) {\n        RebookController.LOGGER.info(\"[Rebook Service] OrderId: {}  Old Trip Id: {}  New Trip Id: {}  Date: {}  Seat Type: {}\", info.getOrderId(), info.getOldTripId(), info.getTripId(), info.getDate(), info.getSeatType());\n        return ok(service.rebook(info, headers));\n    }","returnType":"HttpEntity","methodName":"rebook","className":"RebookController","packageName":"rebook.controller","methodId":"rebook.controller.RebookController.rebook","classId":"rebook.controller.RebookController","line":37,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/rebook\""}]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookService.java","directoryName":""},"code":"Response rebook(RebookInfo info, HttpHeaders headers);","returnType":"Response","methodName":"rebook","className":"RebookService","packageName":"rebook.service","methodId":"rebook.service.RebookService.rebook","classId":"rebook.service.RebookService","line":11,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookService.java","directoryName":""},"code":"Response payDifference(RebookInfo info,  HttpHeaders headers);","returnType":"Response","methodName":"payDifference","className":"RebookService","packageName":"rebook.service","methodId":"rebook.service.RebookService.payDifference","classId":"rebook.service.RebookService","line":12,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"@Override\n    public Response rebook(RebookInfo info, HttpHeaders httpHeaders) {\n\n        Response\u003cOrder\u003e queryOrderResult \u003d getOrderByRebookInfo(info, httpHeaders);\n\n        if (queryOrderResult.getStatus() \u003d\u003d 1) {\n            if (queryOrderResult.getData().getStatus() !\u003d 1) {\n                return new Response\u003c\u003e(0, \"you order not suitable to rebook!\", null);\n            }\n        } else {\n            return new Response(0, \"order not found\", null);\n        }\n\n        Order order \u003d queryOrderResult.getData();\n        int status \u003d order.getStatus();\n        if (status \u003d\u003d OrderStatus.NOTPAID.getCode()) {\n            return new Response\u003c\u003e(0, \"You haven\u0027t paid the original ticket!\", null);\n        } else if (status \u003d\u003d OrderStatus.PAID.getCode()) {\n            // do nothing\n        } else if (status \u003d\u003d OrderStatus.CHANGE.getCode()) {\n            return new Response\u003c\u003e(0, \"You have already changed your ticket and you can only change one time.\", null);\n        } else if (status \u003d\u003d OrderStatus.COLLECTED.getCode()) {\n            return new Response\u003c\u003e(0, \"You have already collected your ticket and you can change it now.\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"You can\u0027t change your ticket.\", null);\n        }\n\n        //Check the current time and the bus time of the old order, and judge whether the ticket can be changed according to the time. The ticket cannot be changed after two hours.\n        if (!checkTime(order.getTravelDate(), order.getTravelTime())) {\n            return new Response\u003c\u003e(0, \"You can only change the ticket before the train start or within 2 hours after the train start.\", null);\n        }\n\n        //The departure and destination cannot be changed, only the train number, seat and time can be changed\n        //Check the info of seat availability and trains\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n        gtdi.setFrom(queryForStationName(order.getFrom(), httpHeaders));\n        gtdi.setTo(queryForStationName(order.getTo(), httpHeaders));\n        gtdi.setTravelDate(info.getDate());\n        gtdi.setTripId(info.getTripId());\n        Response\u003cTripAllDetail\u003e gtdr \u003d getTripAllDetailInformation(gtdi, info.getTripId(), httpHeaders);\n        if (gtdr.getStatus() \u003d\u003d 0) {\n            return new Response\u003c\u003e(0, gtdr.getMsg(), null);\n        } else {\n            TripResponse tripResponse \u003d gtdr.getData().getTripResponse();\n            if (info.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                if (tripResponse.getConfortClass() \u003c\u003d 0) {\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            } else {\n                if (tripResponse.getEconomyClass() \u003d\u003d SeatClass.SECONDCLASS.getCode() \u0026\u0026 tripResponse.getConfortClass() \u003c\u003d 0) {\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            }\n        }\n\n        //Deal with the difference, more refund less compensation\n        //Return the original ticket so that someone else can book the corresponding seat\n\n        String ticketPrice \u003d \"0\";\n        if (info.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            ticketPrice \u003d ((TripAllDetail) gtdr.getData()).getTripResponse().getPriceForConfortClass();\n        } else if (info.getSeatType() \u003d\u003d SeatClass.SECONDCLASS.getCode()) {\n            ticketPrice \u003d ((TripAllDetail) gtdr.getData()).getTripResponse().getPriceForEconomyClass();\n        }\n        String oldPrice \u003d order.getPrice();\n        BigDecimal priceOld \u003d new BigDecimal(oldPrice);\n        BigDecimal priceNew \u003d new BigDecimal(ticketPrice);\n        if (priceOld.compareTo(priceNew) \u003e 0) {\n            //Refund the difference\n            String difference \u003d priceOld.subtract(priceNew).toString();\n            if (!drawBackMoney(info.getLoginId(), difference, httpHeaders)) {\n                return new Response\u003c\u003e(0, \"Can\u0027t draw back the difference money, please try again!\", null);\n            }\n            return updateOrder(order, info, (TripAllDetail) gtdr.getData(), ticketPrice, httpHeaders);\n\n        } else if (priceOld.compareTo(priceNew) \u003d\u003d 0) {\n            //do nothing\n            return updateOrder(order, info, (TripAllDetail) gtdr.getData(), ticketPrice, httpHeaders);\n        } else {\n            //make up the difference\n            String difference \u003d priceNew.subtract(priceOld).toString();\n            Order orderMoneyDifference \u003d new Order();\n            orderMoneyDifference.setDifferenceMoney(difference);\n            return new Response\u003c\u003e(2, \"Please pay the different money!\", orderMoneyDifference);\n        }\n    }","returnType":"Response","methodName":"rebook","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.rebook","classId":"rebook.service.RebookServiceImpl","line":28,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"@Override\n    public Response payDifference(RebookInfo info, HttpHeaders httpHeaders) {\n\n        Response queryOrderResult \u003d getOrderByRebookInfo(info, httpHeaders);\n\n        if (queryOrderResult.getStatus() \u003d\u003d 0) {\n            return new Response\u003c\u003e(0, queryOrderResult.getMsg(), null);\n        }\n        Order order \u003d (Order) queryOrderResult.getData();\n\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n        gtdi.setFrom(queryForStationName(order.getFrom(), httpHeaders));\n        gtdi.setTo(queryForStationName(order.getTo(), httpHeaders));\n        gtdi.setTravelDate(info.getDate());\n        gtdi.setTripId(info.getTripId());\n        // TripAllDetail\n        Response gtdrResposne \u003d getTripAllDetailInformation(gtdi, info.getTripId(), httpHeaders);\n        TripAllDetail gtdr \u003d (TripAllDetail) gtdrResposne.getData();\n\n        String ticketPrice \u003d \"0\";\n        if (info.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            ticketPrice \u003d gtdr.getTripResponse().getPriceForConfortClass();\n        } else if (info.getSeatType() \u003d\u003d SeatClass.SECONDCLASS.getCode()) {\n            ticketPrice \u003d gtdr.getTripResponse().getPriceForEconomyClass();\n        }\n        String oldPrice \u003d order.getPrice();\n        BigDecimal priceOld \u003d new BigDecimal(oldPrice);\n        BigDecimal priceNew \u003d new BigDecimal(ticketPrice);\n\n        if (payDifferentMoney(info.getOrderId(), info.getTripId(), info.getLoginId(), priceNew.subtract(priceOld).toString(), httpHeaders)) {\n            return updateOrder(order, info, gtdr, ticketPrice, httpHeaders);\n        } else {\n            return new Response\u003c\u003e(0, \"Can\u0027t pay the difference,please try again\", null);\n        }\n    }","returnType":"Response","methodName":"payDifference","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.payDifference","classId":"rebook.service.RebookServiceImpl","line":115,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response updateOrder(Order order, RebookInfo info, TripAllDetail gtdr, String ticketPrice, HttpHeaders httpHeaders) {\n\n        //4.Modify the original order and set the information of the order\n        Trip trip \u003d gtdr.getTrip();\n        String oldTripId \u003d order.getTrainNumber();\n        order.setTrainNumber(info.getTripId());\n        order.setBoughtDate(new Date());\n        order.setStatus(OrderStatus.CHANGE.getCode());\n        order.setPrice(ticketPrice);//Set ticket price\n        order.setSeatClass(info.getSeatType());\n        order.setTravelDate(info.getDate());\n        order.setTravelTime(trip.getStartingTime());\n\n        if (info.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {//Dispatch the seat\n            Ticket ticket \u003d\n                    dipatchSeat(info.getDate(),\n                            order.getTrainNumber(), order.getFrom(), order.getTo(),\n                            SeatClass.FIRSTCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.FIRSTCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n        } else {\n            Ticket ticket \u003d\n                    dipatchSeat(info.getDate(),\n                            order.getTrainNumber(), order.getFrom(), order.getTo(),\n                            SeatClass.SECONDCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.SECONDCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n        }\n\n        //Update order information\n        //If the original order and the new order are located in the high-speed train and other orders respectively, the original order should be deleted and created on the other side with a new id.\n        if ((tripGD(oldTripId) \u0026\u0026 tripGD(info.getTripId())) || (!tripGD(oldTripId) \u0026\u0026 !tripGD(info.getTripId()))) {\n\n            Response changeOrderResult \u003d updateOrder(order, info.getTripId(), httpHeaders);\n            if (changeOrderResult.getStatus() \u003d\u003d 1) {\n                return new Response\u003c\u003e(1, \"Success!\", order);\n            } else {\n                return new Response\u003c\u003e(0, \"Can\u0027t update Order!\", null);\n            }\n        } else {\n            //Delete the original order\n            deleteOrder(order.getId().toString(), oldTripId, httpHeaders);\n            //Create a new order on the other side\n            createOrder(order, order.getTrainNumber(), httpHeaders);\n            return new Response\u003c\u003e(1, \"Success\", order);\n        }\n    }","returnType":"Response","methodName":"updateOrder","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.updateOrder","classId":"rebook.service.RebookServiceImpl","line":151,"msArgumentList":[{"returnType":"Order"},{"returnType":"RebookInfo"},{"returnType":"TripAllDetail"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"public Ticket dipatchSeat(Date date, String tripId, String startStationId, String endStataionId, int seatType, HttpHeaders httpHeaders) {\n        Seat seatRequest \u003d new Seat();\n        seatRequest.setTravelDate(date);\n        seatRequest.setTrainNumber(tripId);\n        seatRequest.setSeatType(seatType);\n        seatRequest.setStartStation(startStationId);\n        seatRequest.setDestStation(endStataionId);\n\n        HttpEntity requestEntityTicket \u003d new HttpEntity(seatRequest, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTicket\u003e\u003e reTicket \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats\",\n                HttpMethod.POST,\n                requestEntityTicket,\n                new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n                });\n        return reTicket.getBody().getData();\n    }","returnType":"Ticket","methodName":"dipatchSeat","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.dipatchSeat","classId":"rebook.service.RebookServiceImpl","line":199,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private boolean tripGD(String tripId) {\n        return tripId.startsWith(\"G\") || tripId.startsWith(\"D\");\n    }","returnType":"boolean","methodName":"tripGD","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.tripGD","classId":"rebook.service.RebookServiceImpl","line":218,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private boolean checkTime(Date travelDate, Date travelTime) {\n        boolean result \u003d true;\n        Calendar calDateA \u003d Calendar.getInstance();\n        Date today \u003d new Date();\n        calDateA.setTime(today);\n        Calendar calDateB \u003d Calendar.getInstance();\n        calDateB.setTime(travelDate);\n        Calendar calDateC \u003d Calendar.getInstance();\n        calDateC.setTime(travelTime);\n        if (calDateA.get(Calendar.YEAR) \u003e calDateB.get(Calendar.YEAR)) {\n            result \u003d false;\n        } else if (calDateA.get(Calendar.YEAR) \u003d\u003d calDateB.get(Calendar.YEAR)) {\n            if (calDateA.get(Calendar.MONTH) \u003e calDateB.get(Calendar.MONTH)) {\n                result \u003d false;\n            } else if (calDateA.get(Calendar.MONTH) \u003d\u003d calDateB.get(Calendar.MONTH)) {\n                if (calDateA.get(Calendar.DAY_OF_MONTH) \u003e calDateB.get(Calendar.DAY_OF_MONTH)) {\n                    result \u003d false;\n                } else if (calDateA.get(Calendar.DAY_OF_MONTH) \u003d\u003d calDateB.get(Calendar.DAY_OF_MONTH)) {\n                    if (calDateA.get(Calendar.HOUR_OF_DAY) \u003e calDateC.get(Calendar.HOUR_OF_DAY) + 2) {\n                        result \u003d false;\n                    } else if (calDateA.get(Calendar.HOUR_OF_DAY) \u003d\u003d (calDateC.get(Calendar.HOUR_OF_DAY) + 2) \u0026\u0026 calDateA.get(Calendar.MINUTE) \u003e calDateC.get(Calendar.MINUTE)) {\n                        result \u003d false;\n                    }\n                }\n            }\n        }\n        return result;\n    }","returnType":"boolean","methodName":"checkTime","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.checkTime","classId":"rebook.service.RebookServiceImpl","line":222,"msArgumentList":[{"returnType":"Date"},{"returnType":"Date"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response\u003cTripAllDetail\u003e getTripAllDetailInformation(TripAllDetailInfo gtdi, String tripId, HttpHeaders httpHeaders) {\n        Response\u003cTripAllDetail\u003e gtdr;\n        String requestUrl \u003d \"\";\n        if (tripId.startsWith(\"G\") || tripId.startsWith(\"D\")) {\n            requestUrl \u003d \"http://ts-travel-service:12346/api/v1/travelservice/trip_detail\";\n            // ts-travel-service:12346/travel/getTripAllDetailInfo\n        } else {\n            requestUrl \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/trip_detail\";\n            //ts-travel2-service:16346/travel2/getTripAllDetailInfo\n        }\n        HttpEntity requestGetTripAllDetailResult \u003d new HttpEntity(gtdi, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTripAllDetail\u003e\u003e reGetTripAllDetailResult \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.POST,\n                requestGetTripAllDetailResult,\n                new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n                });\n        gtdr \u003d reGetTripAllDetailResult.getBody();\n        return gtdr;\n    }","returnType":"Response\u003cTripAllDetail\u003e","methodName":"getTripAllDetailInformation","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.getTripAllDetailInformation","classId":"rebook.service.RebookServiceImpl","line":252,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response createOrder(Order order, String tripId, HttpHeaders httpHeaders) {\n        String requestUrl \u003d \"\";\n        if (tripId.startsWith(\"G\") || tripId.startsWith(\"D\")) {\n            // ts-order-service:12031/order/create\n            requestUrl \u003d \"http://ts-order-service:12031/api/v1/orderservice/order\";\n        } else {\n            //ts-order-other-service:12032/orderOther/create\n            requestUrl \u003d \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\";\n        }\n        HttpEntity requestCreateOrder \u003d new HttpEntity(order, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reCreateOrder \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.POST,\n                requestCreateOrder,\n                Response.class);\n        return reCreateOrder.getBody();\n    }","returnType":"Response","methodName":"createOrder","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.createOrder","classId":"rebook.service.RebookServiceImpl","line":273,"msArgumentList":[{"returnType":"Order"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response updateOrder(Order info, String tripId, HttpHeaders httpHeaders) {\n        String requestOrderUtl \u003d \"\";\n        if (tripGD(tripId)) {\n            requestOrderUtl \u003d \"http://ts-order-service:12031/api/v1/orderservice/order\";\n        } else {\n            requestOrderUtl \u003d \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\";\n        }\n        HttpEntity requestUpdateOrder \u003d new HttpEntity(info, httpHeaders);\n        ResponseEntity\u003cResponse\u003e reUpdateOrder \u003d restTemplate.exchange(\n                requestOrderUtl,\n                HttpMethod.PUT,\n                requestUpdateOrder,\n                Response.class);\n        return reUpdateOrder.getBody();\n    }","returnType":"Response","methodName":"updateOrder","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.updateOrder","classId":"rebook.service.RebookServiceImpl","line":291,"msArgumentList":[{"returnType":"Order"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response deleteOrder(String orderId, String tripId, HttpHeaders httpHeaders) {\n\n        String requestUrl \u003d \"\";\n        if (tripGD(tripId)) {\n            requestUrl \u003d \"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId;\n        } else {\n            requestUrl \u003d \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId;\n        }\n        HttpEntity requestDeleteOrder \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reDeleteOrder \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.POST,\n                requestDeleteOrder,\n                Response.class);\n\n        return reDeleteOrder.getBody();\n    }","returnType":"Response","methodName":"deleteOrder","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.deleteOrder","classId":"rebook.service.RebookServiceImpl","line":307,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e getOrderByRebookInfo(RebookInfo info, HttpHeaders httpHeaders) {\n        Response\u003cOrder\u003e queryOrderResult;\n        //Change can only be changed once, check the status of the order to determine whether it has been changed\n        String requestUrl \u003d \"\";\n        if (info.getOldTripId().startsWith(\"G\") || info.getOldTripId().startsWith(\"D\")) {\n            requestUrl \u003d \"http://ts-order-service:12031/api/v1/orderservice/order/\" + info.getOrderId();\n        } else {\n            requestUrl \u003d \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + info.getOrderId();\n        }\n        HttpEntity requestEntityGetOrderByRebookInfo \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e reGetOrderByRebookInfo \u003d restTemplate.exchange(\n                requestUrl,\n                HttpMethod.GET,\n                requestEntityGetOrderByRebookInfo,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        queryOrderResult \u003d reGetOrderByRebookInfo.getBody();\n        return queryOrderResult;\n    }","returnType":"Response\u003cOrder\u003e","methodName":"getOrderByRebookInfo","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.getOrderByRebookInfo","classId":"rebook.service.RebookServiceImpl","line":325,"msArgumentList":[{"returnType":"RebookInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private String queryForStationName(String stationId, HttpHeaders httpHeaders) {\n        HttpEntity requestEntityQueryForStationName \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reQueryForStationName \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/name/\" + stationId,\n                HttpMethod.GET,\n                requestEntityQueryForStationName,\n                Response.class);\n        Response station \u003d reQueryForStationName.getBody();\n        return (String) station.getData();\n    }","returnType":"String","methodName":"queryForStationName","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.queryForStationName","classId":"rebook.service.RebookServiceImpl","line":345,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private boolean payDifferentMoney(String orderId, String tripId, String userId, String money, HttpHeaders httpHeaders) {\n        PaymentDifferenceInfo info \u003d new PaymentDifferenceInfo();\n        info.setOrderId(orderId);\n        info.setTripId(tripId);\n        info.setUserId(userId);\n        info.setPrice(money);\n\n        HttpEntity requestEntityPayDifferentMoney \u003d new HttpEntity(info, httpHeaders);\n        ResponseEntity\u003cResponse\u003e rePayDifferentMoney \u003d restTemplate.exchange(\n                \"http://ts-inside-payment-service:18673/api/v1/inside_pay_service/inside_payment/difference\",\n                HttpMethod.POST,\n                requestEntityPayDifferentMoney,\n                Response.class);\n        Response result \u003d rePayDifferentMoney.getBody();\n        return result.getStatus() \u003d\u003d 1;\n    }","returnType":"boolean","methodName":"payDifferentMoney","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.payDifferentMoney","classId":"rebook.service.RebookServiceImpl","line":356,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java","directoryName":""},"code":"private boolean drawBackMoney(String userId, String money, HttpHeaders httpHeaders) {\n\n        HttpEntity requestEntityDrawBackMoney \u003d new HttpEntity(httpHeaders);\n        ResponseEntity\u003cResponse\u003e reDrawBackMoney \u003d restTemplate.exchange(\n                \"http://ts-inside-payment-service:18673/api/v1/inside_pay_service/inside_payment/drawback/\" + userId + \"/\" + money,\n                HttpMethod.GET,\n                requestEntityDrawBackMoney,\n                Response.class);\n        Response result \u003d reDrawBackMoney.getBody();\n        return result.getStatus() \u003d\u003d 1;\n    }","returnType":"boolean","methodName":"drawBackMoney","className":"RebookServiceImpl","packageName":"rebook.service","methodId":"rebook.service.RebookServiceImpl.drawBackMoney","classId":"rebook.service.RebookServiceImpl","line":373,"msArgumentList":[{"returnType":"String"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java","directoryName":""},"code":"@GetMapping(\"/generate\")\n    public void imageCode(@RequestHeader HttpHeaders headers,\n                          HttpServletRequest request,\n                          HttpServletResponse response) throws IOException {\n        OutputStream os \u003d response.getOutputStream();\n        Map\u003cString, Object\u003e map \u003d verifyCodeService.getImageCode(60, 20, os, request, response, headers);\n        String simpleCaptcha \u003d \"simpleCaptcha\";\n        request.getSession().setAttribute(simpleCaptcha, map.get(\"strEnsure\").toString().toLowerCase());\n        request.getSession().setAttribute(\"codeTime\", System.currentTimeMillis());\n        try {\n            ImageIO.write((BufferedImage) map.get(\"image\"), \"JPEG\", os);\n        } catch (IOException e) {\n            //error\n            String error \u003d \"Can\u0027t generate verification code\";\n            os.write(error.getBytes());\n        }\n    }","returnType":"void","methodName":"imageCode","className":"VerifyCodeController","packageName":"verifycode.controller","methodId":"verifycode.controller.VerifyCodeController.imageCode","classId":"verifycode.controller.VerifyCodeController","line":29,"msArgumentList":[{"returnType":"HttpHeaders"},{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/verify/{verifyCode}\")\n    public boolean verifyCode(@PathVariable String verifyCode, HttpServletRequest request,\n                              HttpServletResponse response, @RequestHeader HttpHeaders headers) {\n        LOGGER.info(\"receivedCode  \" + verifyCode);\n        return verifyCodeService.verifyCode(request, response, verifyCode, headers);\n    }","returnType":"boolean","methodName":"verifyCode","className":"VerifyCodeController","packageName":"verifycode.controller","methodId":"verifycode.controller.VerifyCodeController.verifyCode","classId":"verifycode.controller.VerifyCodeController","line":47,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/verify/{verifyCode}\""}]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java","directoryName":""},"code":"@Override\n    public Map\u003cString, Object\u003e getImageCode(int width, int height, OutputStream os, HttpServletRequest request, HttpServletResponse response, HttpHeaders headers) {\n        Map\u003cString, Object\u003e returnMap \u003d new HashMap\u003c\u003e();\n        if (width \u003c\u003d 0) {\n            width \u003d 60;\n        }\n        if (height \u003c\u003d 0) {\n            height \u003d 20;\n        }\n        BufferedImage image \u003d new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n\n        Graphics g \u003d image.getGraphics();\n\n        Random random \u003d new Random(); //NOSONAR\n\n        g.setColor(getRandColor(200, 250));\n        g.fillRect(0, 0, width, height);\n\n        g.setFont(new Font(\"Times New Roman\", Font.PLAIN, 18));\n\n        g.setColor(getRandColor(160, 200));\n        for (int i \u003d 0; i \u003c 168; i++) {\n            int x \u003d random.nextInt(width);\n            int y \u003d random.nextInt(height);\n            int xl \u003d random.nextInt(12);\n            int yl \u003d random.nextInt(12);\n            g.drawLine(x, y, x + xl, y + yl);\n        }\n\n        String strEnsure \u003d \"\";\n\n        for (int i \u003d 0; i \u003c 4; ++i) {\n            strEnsure +\u003d mapTable[(int) (mapTable.length * Math.random())];\n\n            g.setColor(new Color(20 + random.nextInt(110), 20 + random.nextInt(110), 20 + random.nextInt(110)));\n\n            String str \u003d strEnsure.substring(i, i + 1);\n            g.drawString(str, 13 * i + 6, 16);\n        }\n\n        g.dispose();\n        returnMap.put(\"image\", image);\n        returnMap.put(\"strEnsure\", strEnsure);\n\n        Cookie cookie \u003d CookieUtil.getCookieByName(request, ysbCaptcha);\n        String cookieId;\n        if (cookie \u003d\u003d null) {\n            cookieId \u003d UUID.randomUUID().toString().replace(\"-\", \"\").toUpperCase();\n            CookieUtil.addCookie(response, ysbCaptcha, cookieId, CAPTCHA_EXPIRED);\n        } else {\n            if (cookie.getValue() !\u003d null) {\n                cookieId \u003d UUID.randomUUID().toString().replace(\"-\", \"\").toUpperCase();\n                CookieUtil.addCookie(response, ysbCaptcha, cookieId, CAPTCHA_EXPIRED);\n            } else {\n                cookieId \u003d cookie.getValue();\n            }\n        }\n        VerifyCodeServiceImpl.LOGGER.info(\" {}  ___ st\", strEnsure);\n        cacheCode.put(cookieId, strEnsure);\n        return returnMap;\n    }","returnType":"Map\u003cString,Object\u003e","methodName":"getImageCode","className":"VerifyCodeServiceImpl","packageName":"verifycode.service.impl","methodId":"verifycode.service.impl.VerifyCodeServiceImpl.getImageCode","classId":"verifycode.service.impl.VerifyCodeServiceImpl","line":49,"msArgumentList":[{"returnType":"int"},{"returnType":"int"},{"returnType":"OutputStream"},{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java","directoryName":""},"code":"@Override\n    public boolean verifyCode(HttpServletRequest request, HttpServletResponse response, String receivedCode, HttpHeaders headers) {\n        boolean result \u003d false;\n        Cookie cookie \u003d CookieUtil.getCookieByName(request, ysbCaptcha);\n        String cookieId;\n        if (cookie \u003d\u003d null) {\n            cookieId \u003d UUID.randomUUID().toString().replace(\"-\", \"\").toUpperCase();\n            CookieUtil.addCookie(response, ysbCaptcha, cookieId, CAPTCHA_EXPIRED);\n        } else {\n            cookieId \u003d cookie.getValue();\n        }\n\n        String code \u003d cacheCode.getIfPresent(cookieId);\n        LOGGER.info(\"GET Code By cookieId \" + cookieId + \"   is :\" + code);\n        if (code \u003d\u003d null) {\n            return false;\n        }\n        if (code.equalsIgnoreCase(receivedCode)) {\n            result \u003d true;\n        }\n        return result;\n    }","returnType":"boolean","methodName":"verifyCode","className":"VerifyCodeServiceImpl","packageName":"verifycode.service.impl","methodId":"verifycode.service.impl.VerifyCodeServiceImpl.verifyCode","classId":"verifycode.service.impl.VerifyCodeServiceImpl","line":111,"msArgumentList":[{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java","directoryName":""},"code":"static Color getRandColor(int fc, int bc) {\n        Random random \u003d new Random(); //NOSONAR\n        if (fc \u003e 255) {\n            fc \u003d 255;\n        }\n        if (bc \u003e 255) {\n            bc \u003d 255;\n        }\n        int r \u003d fc + random.nextInt(bc - fc);\n        int g \u003d fc + random.nextInt(bc - fc);\n        int b \u003d fc + random.nextInt(bc - fc);\n        return new Color(r, g, b);\n    }","returnType":"Color","methodName":"getRandColor","className":"VerifyCodeServiceImpl","packageName":"verifycode.service.impl","methodId":"verifycode.service.impl.VerifyCodeServiceImpl.getRandColor","classId":"verifycode.service.impl.VerifyCodeServiceImpl","line":135,"msArgumentList":[{"returnType":"int"},{"returnType":"int"}],"msAnnotations":[]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/service/VerifyCodeService.java","directoryName":""},"code":"Map\u003cString, Object\u003e getImageCode(int width, int height, OutputStream os, HttpServletRequest request, HttpServletResponse response, HttpHeaders headers);","returnType":"Map\u003cString,Object\u003e","methodName":"getImageCode","className":"VerifyCodeService","packageName":"verifycode.service","methodId":"verifycode.service.VerifyCodeService.getImageCode","classId":"verifycode.service.VerifyCodeService","line":15,"msArgumentList":[{"returnType":"int"},{"returnType":"int"},{"returnType":"OutputStream"},{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-verification-code-service/src/main/java/verifycode/service/VerifyCodeService.java","directoryName":""},"code":"boolean verifyCode(HttpServletRequest request, HttpServletResponse response, String receivedCode, HttpHeaders headers);","returnType":"boolean","methodName":"verifyCode","className":"VerifyCodeService","packageName":"verifycode.service","methodId":"verifycode.service.VerifyCodeService.verifyCode","classId":"verifycode.service.VerifyCodeService","line":17,"msArgumentList":[{"returnType":"HttpServletRequest"},{"returnType":"HttpServletResponse"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"welcome to [Security Service]\";\n    }","returnType":"String","methodName":"home","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.home","classId":"security.controller.SecurityController","line":26,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/welcome\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/securityConfigs\")\n    public HttpEntity findAllSecurityConfig(@RequestHeader HttpHeaders headers) {\n        SecurityController.LOGGER.info(\"[Security Service][Find All]\");\n        return ok(securityService.findAllSecurityConfig(headers));\n    }","returnType":"HttpEntity","methodName":"findAllSecurityConfig","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.findAllSecurityConfig","classId":"security.controller.SecurityController","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/securityConfigs\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/securityConfigs\")\n    public HttpEntity create(@RequestBody SecurityConfig info, @RequestHeader HttpHeaders headers) {\n        SecurityController.LOGGER.info(\"[Security Service][Create] Name: {}\", info.getName());\n        return ok(securityService.addNewSecurityConfig(info, headers));\n    }","returnType":"HttpEntity","methodName":"create","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.create","classId":"security.controller.SecurityController","line":38,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/securityConfigs\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/securityConfigs\")\n    public HttpEntity update(@RequestBody SecurityConfig info, @RequestHeader HttpHeaders headers) {\n        SecurityController.LOGGER.info(\"[Security Service][Update] Name: {}\", info.getName());\n        return ok(securityService.modifySecurityConfig(info, headers));\n    }","returnType":"HttpEntity","methodName":"update","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.update","classId":"security.controller.SecurityController","line":45,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/securityConfigs\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/securityConfigs/{id}\")\n    public HttpEntity delete(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        SecurityController.LOGGER.info(\"[Security Service][Delete] Id: {}\", id);\n        return ok(securityService.deleteSecurityConfig(id, headers));\n    }","returnType":"HttpEntity","methodName":"delete","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.delete","classId":"security.controller.SecurityController","line":52,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/securityConfigs/{id}\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/controller/SecurityController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/securityConfigs/{accountId}\")\n    public HttpEntity check(@PathVariable String accountId, @RequestHeader HttpHeaders headers) {\n        SecurityController.LOGGER.info(\"[Security Service][Check Security] Check Account Id: {}\", accountId);\n        return ok(securityService.check(accountId, headers));\n    }","returnType":"HttpEntity","methodName":"check","className":"SecurityController","packageName":"security.controller","methodId":"security.controller.SecurityController.check","classId":"security.controller.SecurityController","line":59,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/securityConfigs/{accountId}\""}]},{"msId":{"path":"/ts-security-service/src/main/java/security/repository/SecurityRepository.java","directoryName":""},"code":"@Query(\"{ \u0027name\u0027: ?0 }\")\n    SecurityConfig findByName(String name);","returnType":"SecurityConfig","methodName":"findByName","className":"SecurityRepository","packageName":"security.repository","methodId":"security.repository.SecurityRepository.findByName","classId":"security.repository.SecurityRepository","line":16,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/repository/SecurityRepository.java","directoryName":""},"code":"@Query(\"{ \u0027id\u0027: ?0 }\")\n    SecurityConfig findById(UUID id);","returnType":"SecurityConfig","methodName":"findById","className":"SecurityRepository","packageName":"security.repository","methodId":"security.repository.SecurityRepository.findById","classId":"security.repository.SecurityRepository","line":19,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/repository/SecurityRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cSecurityConfig\u003e findAll();","returnType":"ArrayList\u003cSecurityConfig\u003e","methodName":"findAll","className":"SecurityRepository","packageName":"security.repository","methodId":"security.repository.SecurityRepository.findAll","classId":"security.repository.SecurityRepository","line":22,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/repository/SecurityRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"SecurityRepository","packageName":"security.repository","methodId":"security.repository.SecurityRepository.deleteById","classId":"security.repository.SecurityRepository","line":25,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityService.java","directoryName":""},"code":"Response findAllSecurityConfig(HttpHeaders headers);","returnType":"Response","methodName":"findAllSecurityConfig","className":"SecurityService","packageName":"security.service","methodId":"security.service.SecurityService.findAllSecurityConfig","classId":"security.service.SecurityService","line":12,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityService.java","directoryName":""},"code":"Response addNewSecurityConfig(SecurityConfig info, HttpHeaders headers);","returnType":"Response","methodName":"addNewSecurityConfig","className":"SecurityService","packageName":"security.service","methodId":"security.service.SecurityService.addNewSecurityConfig","classId":"security.service.SecurityService","line":14,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityService.java","directoryName":""},"code":"Response modifySecurityConfig(SecurityConfig info, HttpHeaders headers);","returnType":"Response","methodName":"modifySecurityConfig","className":"SecurityService","packageName":"security.service","methodId":"security.service.SecurityService.modifySecurityConfig","classId":"security.service.SecurityService","line":16,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityService.java","directoryName":""},"code":"Response deleteSecurityConfig(String id, HttpHeaders headers);","returnType":"Response","methodName":"deleteSecurityConfig","className":"SecurityService","packageName":"security.service","methodId":"security.service.SecurityService.deleteSecurityConfig","classId":"security.service.SecurityService","line":18,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityService.java","directoryName":""},"code":"Response check(String accountId, HttpHeaders headers);","returnType":"Response","methodName":"check","className":"SecurityService","packageName":"security.service","methodId":"security.service.SecurityService.check","classId":"security.service.SecurityService","line":20,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findAllSecurityConfig(HttpHeaders headers) {\n        ArrayList\u003cSecurityConfig\u003e securityConfigs \u003d securityRepository.findAll();\n        if (securityConfigs !\u003d null \u0026\u0026 !securityConfigs.isEmpty()) {\n            return new Response\u003c\u003e(1, success, securityConfigs);\n        }\n        return new Response\u003c\u003e(0, \"No Content\", null);\n    }","returnType":"Response","methodName":"findAllSecurityConfig","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.findAllSecurityConfig","classId":"security.service.SecurityServiceImpl","line":38,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addNewSecurityConfig(SecurityConfig info, HttpHeaders headers) {\n        SecurityConfig sc \u003d securityRepository.findByName(info.getName());\n        if (sc !\u003d null) {\n            return new Response\u003c\u003e(0, \"Security Config Already Exist\", null);\n        } else {\n            SecurityConfig config \u003d new SecurityConfig();\n            config.setId(UUID.randomUUID());\n            config.setName(info.getName());\n            config.setValue(info.getValue());\n            config.setDescription(info.getDescription());\n            securityRepository.save(config);\n            return new Response\u003c\u003e(1, success, config);\n        }\n    }","returnType":"Response","methodName":"addNewSecurityConfig","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.addNewSecurityConfig","classId":"security.service.SecurityServiceImpl","line":47,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifySecurityConfig(SecurityConfig info, HttpHeaders headers) {\n        SecurityConfig sc \u003d securityRepository.findById(info.getId());\n        if (sc \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"Security Config Not Exist\", null);\n        } else {\n            sc.setName(info.getName());\n            sc.setValue(info.getValue());\n            sc.setDescription(info.getDescription());\n            securityRepository.save(sc);\n            return new Response\u003c\u003e(1, success, sc);\n        }\n    }","returnType":"Response","methodName":"modifySecurityConfig","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.modifySecurityConfig","classId":"security.service.SecurityServiceImpl","line":63,"msArgumentList":[{"returnType":"SecurityConfig"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteSecurityConfig(String id, HttpHeaders headers) {\n        securityRepository.deleteById(UUID.fromString(id));\n        SecurityConfig sc \u003d securityRepository.findById(UUID.fromString(id));\n        if (sc \u003d\u003d null) {\n            return new Response\u003c\u003e(1, success, id);\n        } else {\n            return new Response\u003c\u003e(0, \"Reason Not clear\", id);\n        }\n    }","returnType":"Response","methodName":"deleteSecurityConfig","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.deleteSecurityConfig","classId":"security.service.SecurityServiceImpl","line":77,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"@Override\n    public Response check(String accountId, HttpHeaders headers) {\n        //1.Get the orders in the past one hour and the total effective votes\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Order Num Info]\");\n        OrderSecurity orderResult \u003d getSecurityOrderInfoFromOrder(new Date(), accountId, headers);\n        OrderSecurity orderOtherResult \u003d getSecurityOrderOtherInfoFromOrder(new Date(), accountId, headers);\n        int orderInOneHour \u003d orderOtherResult.getOrderNumInLastOneHour() + orderResult.getOrderNumInLastOneHour();\n        int totalValidOrder \u003d orderOtherResult.getOrderNumOfValidOrder() + orderResult.getOrderNumOfValidOrder();\n        //2. get critical configuration information\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Security Config Info]\");\n        SecurityConfig configMaxInHour \u003d securityRepository.findByName(\"max_order_1_hour\");\n        SecurityConfig configMaxNotUse \u003d securityRepository.findByName(\"max_order_not_use\");\n        SecurityServiceImpl.LOGGER.info(\"[Security Service] Max In One Hour: {}  Max Not Use: {}\", configMaxInHour.getValue(), configMaxNotUse.getValue());\n        int oneHourLine \u003d Integer.parseInt(configMaxInHour.getValue());\n        int totalValidLine \u003d Integer.parseInt(configMaxNotUse.getValue());\n        if (orderInOneHour \u003e oneHourLine || totalValidOrder \u003e totalValidLine) {\n            return new Response\u003c\u003e(0, \"Too much order in last one hour or too much valid order\", accountId);\n        } else {\n            return new Response\u003c\u003e(1, \"Success.r\", accountId);\n        }\n    }","returnType":"Response","methodName":"check","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.check","classId":"security.service.SecurityServiceImpl","line":88,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"private OrderSecurity getSecurityOrderInfoFromOrder(Date checkDate, String accountId, HttpHeaders headers) {\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Order Info For Security] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrderSecurity\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order/security/\" + checkDate + \"/\" + accountId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrderSecurity\u003e\u003e() {\n                });\n        Response\u003cOrderSecurity\u003e response \u003d re.getBody();\n        OrderSecurity result \u003d  response.getData();\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Order Info For Security] Last One Hour: {}  Total Valid Order: {}\", result.getOrderNumInLastOneHour(), result.getOrderNumOfValidOrder());\n        return result;\n    }","returnType":"OrderSecurity","methodName":"getSecurityOrderInfoFromOrder","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder","classId":"security.service.SecurityServiceImpl","line":110,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java","directoryName":""},"code":"private OrderSecurity getSecurityOrderOtherInfoFromOrder(Date checkDate, String accountId, HttpHeaders headers) {\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Order Other Info For Security] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrderSecurity\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/security/\" + checkDate + \"/\" + accountId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrderSecurity\u003e\u003e() {\n                });\n        Response\u003cOrderSecurity\u003e response \u003d re.getBody();\n        OrderSecurity result \u003d  response.getData();\n        SecurityServiceImpl.LOGGER.info(\"[Security Service][Get Order Other Info For Security] Last One Hour: {}  Total Valid Order: {}\", result.getOrderNumInLastOneHour(), result.getOrderNumOfValidOrder());\n        return result;\n    }","returnType":"OrderSecurity","methodName":"getSecurityOrderOtherInfoFromOrder","className":"SecurityServiceImpl","packageName":"security.service","methodId":"security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder","classId":"security.service.SecurityServiceImpl","line":125,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ AdminBasicInfo Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.home","classId":"adminbasic.controller.AdminBasicInfoController","line":25,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminbasic/contacts\")\n    public HttpEntity getAllContacts(@RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Find All Contacts by admin \");\n        return ok(adminBasicInfoService.getAllContacts(headers));\n    }","returnType":"HttpEntity","methodName":"getAllContacts","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.getAllContacts","classId":"adminbasic.controller.AdminBasicInfoController","line":30,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminbasic/contacts\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/adminbasic/contacts/{contactsId}\")\n    public HttpEntity deleteContacts(@PathVariable String contactsId, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Delete Contacts by admin \");\n        return ok(adminBasicInfoService.deleteContact(contactsId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteContacts","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.deleteContacts","classId":"adminbasic.controller.AdminBasicInfoController","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/adminbasic/contacts/{contactsId}\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/adminbasic/contacts\")\n    public HttpEntity modifyContacts(@RequestBody Contacts mci, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Contacts by admin: \");\n        return ok(adminBasicInfoService.modifyContact(mci, headers));\n    }","returnType":"HttpEntity","methodName":"modifyContacts","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.modifyContacts","classId":"adminbasic.controller.AdminBasicInfoController","line":44,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/adminbasic/contacts\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/adminbasic/contacts\")\n    public HttpEntity addContacts(@RequestBody Contacts c, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Contacts by admin  \");\n        return ok(adminBasicInfoService.addContact(c, headers));\n    }","returnType":"HttpEntity","methodName":"addContacts","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.addContacts","classId":"adminbasic.controller.AdminBasicInfoController","line":51,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/adminbasic/contacts\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminbasic/stations\")\n    public HttpEntity getAllStations(@RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Find All Station by admin  \");\n        return ok(adminBasicInfoService.getAllStations(headers));\n    }","returnType":"HttpEntity","methodName":"getAllStations","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.getAllStations","classId":"adminbasic.controller.AdminBasicInfoController","line":58,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminbasic/stations\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/adminbasic/stations\")\n    public HttpEntity deleteStation(@RequestBody Station s, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Delete Station by admin \");\n        return ok(adminBasicInfoService.deleteStation(s, headers));\n    }","returnType":"HttpEntity","methodName":"deleteStation","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.deleteStation","classId":"adminbasic.controller.AdminBasicInfoController","line":65,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/adminbasic/stations\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/adminbasic/stations\")\n    public HttpEntity modifyStation(@RequestBody Station s, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Station by admin \");\n        return ok(adminBasicInfoService.modifyStation(s, headers));\n    }","returnType":"HttpEntity","methodName":"modifyStation","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.modifyStation","classId":"adminbasic.controller.AdminBasicInfoController","line":72,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/adminbasic/stations\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/adminbasic/stations\")\n    public HttpEntity addStation(@RequestBody Station s, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Station by admin\");\n        return ok(adminBasicInfoService.addStation(s, headers));\n    }","returnType":"HttpEntity","methodName":"addStation","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.addStation","classId":"adminbasic.controller.AdminBasicInfoController","line":79,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/adminbasic/stations\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminbasic/trains\")\n    public HttpEntity getAllTrains(@RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Find All Train by admin: \");\n        return ok(adminBasicInfoService.getAllTrains(headers));\n    }","returnType":"HttpEntity","methodName":"getAllTrains","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.getAllTrains","classId":"adminbasic.controller.AdminBasicInfoController","line":86,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminbasic/trains\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/adminbasic/trains/{id}\")\n    public HttpEntity deleteTrain(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Delete Train by admin\");\n        return ok(adminBasicInfoService.deleteTrain(id, headers));\n    }","returnType":"HttpEntity","methodName":"deleteTrain","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.deleteTrain","classId":"adminbasic.controller.AdminBasicInfoController","line":93,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/adminbasic/trains/{id}\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/adminbasic/trains\")\n    public HttpEntity modifyTrain(@RequestBody TrainType t, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Train by admin  \");\n        return ok(adminBasicInfoService.modifyTrain(t, headers));\n    }","returnType":"HttpEntity","methodName":"modifyTrain","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.modifyTrain","classId":"adminbasic.controller.AdminBasicInfoController","line":100,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/adminbasic/trains\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/adminbasic/trains\")\n    public HttpEntity addTrain(@RequestBody TrainType t, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Train by admin \");\n        return ok(adminBasicInfoService.addTrain(t, headers));\n    }","returnType":"HttpEntity","methodName":"addTrain","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.addTrain","classId":"adminbasic.controller.AdminBasicInfoController","line":107,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/adminbasic/trains\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminbasic/configs\")\n    public HttpEntity getAllConfigs(@RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Find All Config by admin  \");\n        return ok(adminBasicInfoService.getAllConfigs(headers));\n    }","returnType":"HttpEntity","methodName":"getAllConfigs","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.getAllConfigs","classId":"adminbasic.controller.AdminBasicInfoController","line":114,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminbasic/configs\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/adminbasic/configs/{name}\")\n    public HttpEntity deleteConfig(@PathVariable String name, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Delete Config by admin \");\n        return ok(adminBasicInfoService.deleteConfig(name, headers));\n    }","returnType":"HttpEntity","methodName":"deleteConfig","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.deleteConfig","classId":"adminbasic.controller.AdminBasicInfoController","line":121,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/adminbasic/configs/{name}\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/adminbasic/configs\")\n    public HttpEntity modifyConfig(@RequestBody Config c, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Config by admin \");\n        return ok(adminBasicInfoService.modifyConfig(c, headers));\n    }","returnType":"HttpEntity","methodName":"modifyConfig","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.modifyConfig","classId":"adminbasic.controller.AdminBasicInfoController","line":128,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/adminbasic/configs\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/adminbasic/configs\")\n    public HttpEntity addConfig(@RequestBody Config c, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Config by admin  \");\n        return ok(adminBasicInfoService.addConfig(c, headers));\n    }","returnType":"HttpEntity","methodName":"addConfig","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.addConfig","classId":"adminbasic.controller.AdminBasicInfoController","line":135,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/adminbasic/configs\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminbasic/prices\")\n    public HttpEntity getAllPrices(@RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Find All Price by admin \");\n        return ok(adminBasicInfoService.getAllPrices(headers));\n    }","returnType":"HttpEntity","methodName":"getAllPrices","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.getAllPrices","classId":"adminbasic.controller.AdminBasicInfoController","line":142,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminbasic/prices\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/adminbasic/prices\")\n    public HttpEntity deletePrice(@RequestBody PriceInfo pi, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Delete Price by admin  \");\n        return ok(adminBasicInfoService.deletePrice(pi, headers));\n    }","returnType":"HttpEntity","methodName":"deletePrice","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.deletePrice","classId":"adminbasic.controller.AdminBasicInfoController","line":149,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/adminbasic/prices\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/adminbasic/prices\")\n    public HttpEntity modifyPrice(@RequestBody PriceInfo pi, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Modify Price by admin  \");\n        return ok(adminBasicInfoService.modifyPrice(pi, headers));\n    }","returnType":"HttpEntity","methodName":"modifyPrice","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.modifyPrice","classId":"adminbasic.controller.AdminBasicInfoController","line":156,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/adminbasic/prices\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/adminbasic/prices\")\n    public HttpEntity addPrice(@RequestBody PriceInfo pi, @RequestHeader HttpHeaders headers) {\n        AdminBasicInfoController.LOGGER.info(\"[Admin Basic Info Service][Add Price by admin\");\n        return ok(adminBasicInfoService.addPrice(pi, headers));\n    }","returnType":"HttpEntity","methodName":"addPrice","className":"AdminBasicInfoController","packageName":"adminbasic.controller","methodId":"adminbasic.controller.AdminBasicInfoController.addPrice","classId":"adminbasic.controller.AdminBasicInfoController","line":163,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/adminbasic/prices\""}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllContacts(HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts\",\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n    }","returnType":"Response","methodName":"getAllContacts","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":32,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteContact(String contactsId, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n    }","returnType":"Response","methodName":"deleteContact","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.deleteContact","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":47,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyContact(Contacts mci, HttpHeaders headers) {\n        Response result;\n        LOGGER.info(\"MODIFY CONTACTS: \" + mci.toString());\n        HttpEntity requestEntity \u003d new HttpEntity(mci, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts\",\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n    }","returnType":"Response","methodName":"modifyContact","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.modifyContact","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":62,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addContact(Contacts c, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(c, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-contacts-service:12347/api/v1/contactservice/contacts/admin\",\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n    }","returnType":"Response","methodName":"addContact","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.addContact","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":78,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllStations(HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                stations,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n\n\n    }","returnType":"Response","methodName":"getAllStations","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.getAllStations","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":93,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addStation(Station s, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(s, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                stations,\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        return result;\n    }","returnType":"Response","methodName":"addStation","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.addStation","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":108,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteStation(Station s, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(s, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                stations,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        return result;\n\n    }","returnType":"Response","methodName":"deleteStation","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.deleteStation","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":122,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyStation(Station s, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(s, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                stations,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n\n        return result;\n\n    }","returnType":"Response","methodName":"modifyStation","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.modifyStation","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":137,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllTrains(HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                trains,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n\n    }","returnType":"Response","methodName":"getAllTrains","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":153,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addTrain(TrainType t, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(t, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                trains,\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        return result;\n\n    }","returnType":"Response","methodName":"addTrain","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.addTrain","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":167,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteTrain(String id, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-train-service:14567/api/v1/trainservice/trains/\" + id,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        return result;\n    }","returnType":"Response","methodName":"deleteTrain","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":182,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyTrain(TrainType t, HttpHeaders headers) {\n        Response result;\n\n        HttpEntity requestEntity \u003d new HttpEntity(t, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                trains,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        result \u003d re.getBody();\n        return result;\n    }","returnType":"Response","methodName":"modifyTrain","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":196,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllConfigs(HttpHeaders headers) {\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                configs,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n    }","returnType":"Response","methodName":"getAllConfigs","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":210,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addConfig(Config c, HttpHeaders headers) {\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(c, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                configs,\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"addConfig","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.addConfig","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":224,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteConfig(String name, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-config-service:15679/api/v1/configservice/configs/\" + name,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"deleteConfig","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":237,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyConfig(Config c, HttpHeaders headers) {\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(c, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                configs,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"modifyConfig","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":249,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllPrices(HttpHeaders headers) {\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                prices,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n\n        AdminBasicInfoServiceImpl.LOGGER.info(\"[!!!!GetAllPriceResult] \");\n        return re.getBody();\n    }","returnType":"Response","methodName":"getAllPrices","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":262,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addPrice(PriceInfo pi, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(pi, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                prices,\n                HttpMethod.POST,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n\n    }","returnType":"Response","methodName":"addPrice","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.addPrice","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":277,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deletePrice(PriceInfo pi, HttpHeaders headers) {\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(pi, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                prices,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n\n        return re.getBody();\n\n    }","returnType":"Response","methodName":"deletePrice","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.deletePrice","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":290,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyPrice(PriceInfo pi, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(pi, headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                prices,\n                HttpMethod.PUT,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"modifyPrice","className":"AdminBasicInfoServiceImpl","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice","classId":"adminbasic.service.AdminBasicInfoServiceImpl","line":305,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response getAllContacts(  HttpHeaders headers);","returnType":"Response","methodName":"getAllContacts","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.getAllContacts","classId":"adminbasic.service.AdminBasicInfoService","line":19,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response addContact(  Contacts c, HttpHeaders headers);","returnType":"Response","methodName":"addContact","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.addContact","classId":"adminbasic.service.AdminBasicInfoService","line":28,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response deleteContact( String contactsId, HttpHeaders headers);","returnType":"Response","methodName":"deleteContact","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.deleteContact","classId":"adminbasic.service.AdminBasicInfoService","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response modifyContact(Contacts mci, HttpHeaders headers);","returnType":"Response","methodName":"modifyContact","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.modifyContact","classId":"adminbasic.service.AdminBasicInfoService","line":46,"msArgumentList":[{"returnType":"Contacts"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response getAllStations(  HttpHeaders headers);","returnType":"Response","methodName":"getAllStations","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.getAllStations","classId":"adminbasic.service.AdminBasicInfoService","line":56,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response addStation(Station s, HttpHeaders headers);","returnType":"Response","methodName":"addStation","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.addStation","classId":"adminbasic.service.AdminBasicInfoService","line":65,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response deleteStation(Station s, HttpHeaders headers);","returnType":"Response","methodName":"deleteStation","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.deleteStation","classId":"adminbasic.service.AdminBasicInfoService","line":74,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response modifyStation(Station s, HttpHeaders headers);","returnType":"Response","methodName":"modifyStation","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.modifyStation","classId":"adminbasic.service.AdminBasicInfoService","line":83,"msArgumentList":[{"returnType":"Station"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response getAllTrains(  HttpHeaders headers);","returnType":"Response","methodName":"getAllTrains","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.getAllTrains","classId":"adminbasic.service.AdminBasicInfoService","line":93,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response addTrain(TrainType t, HttpHeaders headers);","returnType":"Response","methodName":"addTrain","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.addTrain","classId":"adminbasic.service.AdminBasicInfoService","line":102,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response deleteTrain(String id,   HttpHeaders headers);","returnType":"Response","methodName":"deleteTrain","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.deleteTrain","classId":"adminbasic.service.AdminBasicInfoService","line":111,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response modifyTrain(TrainType t, HttpHeaders headers);","returnType":"Response","methodName":"modifyTrain","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.modifyTrain","classId":"adminbasic.service.AdminBasicInfoService","line":120,"msArgumentList":[{"returnType":"TrainType"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response getAllConfigs(  HttpHeaders headers);","returnType":"Response","methodName":"getAllConfigs","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.getAllConfigs","classId":"adminbasic.service.AdminBasicInfoService","line":130,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response addConfig(Config c, HttpHeaders headers);","returnType":"Response","methodName":"addConfig","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.addConfig","classId":"adminbasic.service.AdminBasicInfoService","line":139,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response deleteConfig(String name, HttpHeaders headers);","returnType":"Response","methodName":"deleteConfig","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.deleteConfig","classId":"adminbasic.service.AdminBasicInfoService","line":148,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response modifyConfig(Config c, HttpHeaders headers);","returnType":"Response","methodName":"modifyConfig","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.modifyConfig","classId":"adminbasic.service.AdminBasicInfoService","line":157,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response getAllPrices(  HttpHeaders headers);","returnType":"Response","methodName":"getAllPrices","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.getAllPrices","classId":"adminbasic.service.AdminBasicInfoService","line":167,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response addPrice(PriceInfo pi, HttpHeaders headers);","returnType":"Response","methodName":"addPrice","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.addPrice","classId":"adminbasic.service.AdminBasicInfoService","line":176,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response deletePrice(PriceInfo pi, HttpHeaders headers);","returnType":"Response","methodName":"deletePrice","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.deletePrice","classId":"adminbasic.service.AdminBasicInfoService","line":185,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoService.java","directoryName":""},"code":"Response modifyPrice(PriceInfo pi, HttpHeaders headers);","returnType":"Response","methodName":"modifyPrice","className":"AdminBasicInfoService","packageName":"adminbasic.service","methodId":"adminbasic.service.AdminBasicInfoService.modifyPrice","classId":"adminbasic.service.AdminBasicInfoService","line":194,"msArgumentList":[{"returnType":"PriceInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/controller/SeatController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Seat Service ] !\";\n    }","returnType":"String","methodName":"home","className":"SeatController","packageName":"seat.controller","methodId":"seat.controller.SeatController.home","classId":"seat.controller.SeatController","line":22,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/controller/SeatController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/seats\")\n    public HttpEntity create(@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers) {\n        return ok(seatService.distributeSeat(seatRequest, headers));\n    }","returnType":"HttpEntity","methodName":"create","className":"SeatController","packageName":"seat.controller","methodId":"seat.controller.SeatController.create","classId":"seat.controller.SeatController","line":34,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/seats\""}]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/controller/SeatController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/seats/left_tickets\")\n    public HttpEntity getLeftTicketOfInterval(@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers) {\n        // int\n        return ok(seatService.getLeftTicketOfInterval(seatRequest, headers));\n    }","returnType":"HttpEntity","methodName":"getLeftTicketOfInterval","className":"SeatController","packageName":"seat.controller","methodId":"seat.controller.SeatController.getLeftTicketOfInterval","classId":"seat.controller.SeatController","line":48,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/seats/left_tickets\""}]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatService.java","directoryName":""},"code":"Response distributeSeat(Seat seatRequest, HttpHeaders headers);","returnType":"Response","methodName":"distributeSeat","className":"SeatService","packageName":"seat.service","methodId":"seat.service.SeatService.distributeSeat","classId":"seat.service.SeatService","line":12,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatService.java","directoryName":""},"code":"Response getLeftTicketOfInterval(Seat seatRequest, HttpHeaders headers);","returnType":"Response","methodName":"getLeftTicketOfInterval","className":"SeatService","packageName":"seat.service","methodId":"seat.service.SeatService.getLeftTicketOfInterval","classId":"seat.service.SeatService","line":13,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java","directoryName":""},"code":"@Override\n    public Response distributeSeat(Seat seatRequest, HttpHeaders headers) {\n        Response\u003cRoute\u003e routeResult;\n\n        LeftTicketInfo leftTicketInfo;\n        TrainType trainTypeResult \u003d null;\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e re;\n        ResponseEntity\u003cResponse\u003cTrainType\u003e\u003e re2;\n        ResponseEntity\u003cResponse\u003cLeftTicketInfo\u003e\u003e re3;\n\n        //Distinguish G\\D from other trains\n        String trainNumber \u003d seatRequest.getTrainNumber();\n\n        if (trainNumber.startsWith(\"G\") || trainNumber.startsWith(\"D\")) {\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] TrainNumber start with G|D\");\n\n            //Call the microservice to query all the station information for the train\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            re \u003d restTemplate.exchange(\n                    \"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber,\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                    });\n            routeResult \u003d re.getBody();\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] The result of getRouteResult is {}\", routeResult.getMsg());\n\n            //Call the microservice to query for residual Ticket information: the set of the Ticket sold for the specified seat type\n            requestEntity \u003d new HttpEntity(seatRequest, headers);\n            re3 \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/tickets\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n                    });\n            SeatServiceImpl.LOGGER.info(\"Left ticket info is : {}\", re3.getBody().toString());\n            leftTicketInfo \u003d re3.getBody().getData();\n\n            //Calls the microservice to query the total number of seats specified for that vehicle\n            requestEntity \u003d new HttpEntity(headers);\n            re2 \u003d restTemplate.exchange(\n                    \"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                    });\n            Response\u003cTrainType\u003e trainTypeResponse \u003d re2.getBody();\n            trainTypeResult \u003d trainTypeResponse.getData();\n\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat 1] The result of getTrainTypeResult is {}\", trainTypeResponse.toString());\n        } else {\n            SeatServiceImpl.LOGGER.info(\"[SeatService] TrainNumber start with other capital\");\n            //Call the micro service to query all the station information for the trains\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            re \u003d restTemplate.exchange(\n                    \"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                    });\n            routeResult \u003d re.getBody();\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] The result of getRouteResult is {}\", routeResult.toString());\n\n            //Call the microservice to query for residual Ticket information: the set of the Ticket sold for the specified seat type\n            requestEntity \u003d new HttpEntity(seatRequest, headers);\n            re3 \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n                    });\n            SeatServiceImpl.LOGGER.info(\"Left ticket info is : {}\", re3.getBody().toString());\n            leftTicketInfo \u003d re3.getBody().getData();\n\n            //Calls the microservice to query the total number of seats specified for that vehicle\n            requestEntity \u003d new HttpEntity(headers);\n            re2 \u003d restTemplate.exchange(\n                    \"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                    });\n            Response\u003cTrainType\u003e trainTypeResponse \u003d re2.getBody();\n            trainTypeResult \u003d trainTypeResponse.getData();\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat 2] The result of getTrainTypeResult is {}\", trainTypeResponse.toString());\n        }\n\n\n        //Assign seats\n        List\u003cString\u003e stationList \u003d routeResult.getData().getStations();\n        int seatTotalNum \u003d 0;\n        if (seatRequest.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            seatTotalNum \u003d trainTypeResult.getConfortClass();\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] The request seat type is confortClass and the total num is {}\", seatTotalNum);\n        } else {\n            seatTotalNum \u003d trainTypeResult.getEconomyClass();\n            SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] The request seat type is economyClass and the total num is {}\", seatTotalNum);\n        }\n        String startStation \u003d seatRequest.getStartStation();\n        Ticket ticket \u003d new Ticket();\n        ticket.setStartStation(startStation);\n        ticket.setDestStation(seatRequest.getDestStation());\n\n        //Assign new tickets\n        Random rand \u003d new Random();\n        int range \u003d seatTotalNum;\n        int seat \u003d rand.nextInt(range) + 1;\n\n        if(leftTicketInfo !\u003d null) {\n            Set\u003cTicket\u003e soldTickets \u003d leftTicketInfo.getSoldTickets();\n            //Give priority to tickets already sold\n            for (Ticket soldTicket : soldTickets) {\n                String soldTicketDestStation \u003d soldTicket.getDestStation();\n                //Tickets can be allocated if the sold ticket\u0027s end station before the start station of the request\n                if (stationList.indexOf(soldTicketDestStation) \u003c stationList.indexOf(startStation)) {\n                    ticket.setSeatNo(soldTicket.getSeatNo());\n                    SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] Use the previous distributed seat number! {}\", soldTicket.getSeatNo());\n                    return new Response\u003c\u003e(1, \"Use the previous distributed seat number!\", ticket);\n                }\n            }\n            while (isContained(soldTickets, seat)) {\n                seat \u003d rand.nextInt(range) + 1;\n            }\n        }\n        ticket.setSeatNo(seat);\n        SeatServiceImpl.LOGGER.info(\"[SeatService distributeSeat] Use a new seat number! {}\", seat);\n        return new Response\u003c\u003e(1, \"Use a new seat number!\", ticket);\n    }","returnType":"Response","methodName":"distributeSeat","className":"SeatServiceImpl","packageName":"seat.service","methodId":"seat.service.SeatServiceImpl.distributeSeat","classId":"seat.service.SeatServiceImpl","line":30,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java","directoryName":""},"code":"private boolean isContained(Set\u003cTicket\u003e soldTickets, int seat) {\n        //Check that the seat number has been used\n        boolean result \u003d false;\n        for (Ticket soldTicket : soldTickets) {\n            if (soldTicket.getSeatNo() \u003d\u003d seat) {\n                return true;\n            }\n        }\n        return result;\n    }","returnType":"boolean","methodName":"isContained","className":"SeatServiceImpl","packageName":"seat.service","methodId":"seat.service.SeatServiceImpl.isContained","classId":"seat.service.SeatServiceImpl","line":159,"msArgumentList":[{"returnType":"Set\u003cTicket\u003e"},{"returnType":"int"}],"msAnnotations":[]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getLeftTicketOfInterval(Seat seatRequest, HttpHeaders headers) {\n        int numOfLeftTicket \u003d 0;\n        Response\u003cRoute\u003e routeResult;\n        TrainType trainTypeResult;\n        LeftTicketInfo leftTicketInfo;\n\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e re;\n        ResponseEntity\u003cResponse\u003cTrainType\u003e\u003e re2;\n        ResponseEntity\u003cResponse\u003cLeftTicketInfo\u003e\u003e re3;\n\n        //Distinguish G\\D from other trains\n        String trainNumber \u003d seatRequest.getTrainNumber();\n        SeatServiceImpl.LOGGER.info(\"Seat request To String: {}\", seatRequest.toString());\n        if (trainNumber.startsWith(\"G\") || trainNumber.startsWith(\"D\")) {\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] TrainNumber start with G|D {}\", trainNumber);\n\n            //Call the micro service to query all the station information for the trains\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            re \u003d restTemplate.exchange(\n                    \"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber,\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                    });\n            routeResult \u003d re.getBody();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The result of getRouteResult is {}\", routeResult.getMsg());\n\n            //Call the micro service to query for residual Ticket information: the set of the Ticket sold for the specified seat type\n            requestEntity \u003d new HttpEntity(seatRequest, headers);\n            re3 \u003d restTemplate.exchange(\n                    \"http://ts-order-service:12031/api/v1/orderservice/order/tickets\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n                    });\n\n            SeatServiceImpl.LOGGER.info(\"Get Order tickets result is : {}\", re3);\n            leftTicketInfo \u003d re3.getBody().getData();\n\n            //Calls the microservice to query the total number of seats specified for that vehicle\n            requestEntity \u003d new HttpEntity(headers);\n            re2 \u003d restTemplate.exchange(\n                    \"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                    });\n            Response\u003cTrainType\u003e trainTypeResponse \u003d re2.getBody();\n\n\n            trainTypeResult \u003d trainTypeResponse.getData();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The result of getTrainTypeResult is {}\", trainTypeResponse.toString());\n        } else {\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] TrainNumber start with other capital\");\n            //Call the micro service to query all the station information for the trains\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            re \u003d restTemplate.exchange(\n                    \"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                    });\n            routeResult \u003d re.getBody();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The result of getRouteResult is {}\", routeResult.toString());\n\n            //Call the micro service to query for residual Ticket information: the set of the Ticket sold for the specified seat type\n            requestEntity \u003d new HttpEntity(seatRequest, headers);\n            re3 \u003d restTemplate.exchange(\n                    \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\",\n                    HttpMethod.POST,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n                    });\n            SeatServiceImpl.LOGGER.info(\"Get Order tickets result is : {}\", re3);\n            leftTicketInfo \u003d re3.getBody().getData();\n\n\n            //Calls the microservice to query the total number of seats specified for that vehicle\n            requestEntity \u003d new HttpEntity(headers);\n            re2 \u003d restTemplate.exchange(\n                    \"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                    });\n            Response\u003cTrainType\u003e trainTypeResponse \u003d re2.getBody();\n            trainTypeResult \u003d trainTypeResponse.getData();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The result of getTrainTypeResult is {}\", trainTypeResponse.toString());\n        }\n\n        //Counting the seats remaining in certain sections\n        List\u003cString\u003e stationList \u003d routeResult.getData().getStations();\n        int seatTotalNum;\n        if (seatRequest.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            seatTotalNum \u003d trainTypeResult.getConfortClass();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The request seat type is confortClass and the total num is {}\", seatTotalNum);\n        } else {\n            seatTotalNum \u003d trainTypeResult.getEconomyClass();\n            SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The request seat type is economyClass and the total num is {}\", seatTotalNum);\n        }\n\n        int solidTicketSize \u003d 0;\n        if (leftTicketInfo !\u003d null) {\n            String startStation \u003d seatRequest.getStartStation();\n            Set\u003cTicket\u003e soldTickets \u003d leftTicketInfo.getSoldTickets();\n            solidTicketSize \u003d soldTickets.size();\n            //To find out if tickets already sold are available\n            for (Ticket soldTicket : soldTickets) {\n                String soldTicketDestStation \u003d soldTicket.getDestStation();\n                //Tickets can be allocated if the sold ticket\u0027s end station before the start station of the request\n                if (stationList.indexOf(soldTicketDestStation) \u003c stationList.indexOf(startStation)) {\n                    SeatServiceImpl.LOGGER.info(\"[SeatService getLeftTicketOfInterval] The previous distributed seat number is usable! {}\", soldTicket.getSeatNo());\n                    numOfLeftTicket++;\n                }\n            }\n        }\n        //Count the unsold tickets\n\n        double direstPart \u003d getDirectProportion(headers);\n        Route route \u003d routeResult.getData();\n        if (route.getStations().get(0).equals(seatRequest.getStartStation()) \u0026\u0026\n                route.getStations().get(route.getStations().size() - 1).equals(seatRequest.getDestStation())) {\n            //do nothing\n        } else {\n            direstPart \u003d 1.0 - direstPart;\n        }\n\n        int unusedNum \u003d (int) (seatTotalNum * direstPart) - solidTicketSize;\n        numOfLeftTicket +\u003d unusedNum;\n\n        return new Response\u003c\u003e(1, \"Get Left Ticket of Internal Success\", numOfLeftTicket);\n    }","returnType":"Response","methodName":"getLeftTicketOfInterval","className":"SeatServiceImpl","packageName":"seat.service","methodId":"seat.service.SeatServiceImpl.getLeftTicketOfInterval","classId":"seat.service.SeatServiceImpl","line":170,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java","directoryName":""},"code":"private double getDirectProportion(HttpHeaders headers) {\n\n        String configName \u003d \"DirectTicketAllocationProportion\";\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cConfig\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-config-service:15679/api/v1/configservice/configs/\" + configName,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cConfig\u003e\u003e() {\n                });\n        Response\u003cConfig\u003e configValue \u003d re.getBody();\n        SeatServiceImpl.LOGGER.info(\"Configs is : {}\", configValue.getData().toString());\n        return Double.parseDouble(configValue.getData().getValue());\n    }","returnType":"double","methodName":"getDirectProportion","className":"SeatServiceImpl","packageName":"seat.service","methodId":"seat.service.SeatServiceImpl.getDirectProportion","classId":"seat.service.SeatServiceImpl","line":304,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Travle2 Service ] !\";\n    }","returnType":"String","methodName":"home","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.home","classId":"travel2.controller.Travel2Controller","line":30,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@GetMapping(value \u003d \"/train_types/{tripId}\")\n    public HttpEntity getTrainTypeByTripId(@PathVariable String tripId,\n                                           @RequestHeader HttpHeaders headers) {\n        // TrainType\n        return ok(service.getTrainTypeByTripId(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getTrainTypeByTripId","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.getTrainTypeByTripId","classId":"travel2.controller.Travel2Controller","line":35,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/train_types/{tripId}\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@GetMapping(value \u003d \"/routes/{tripId}\")\n    public HttpEntity getRouteByTripId(@PathVariable String tripId,\n                                       @RequestHeader HttpHeaders headers) {\n        Travel2Controller.LOGGER.info(\"[Get Route By Trip ID] TripId: {}\", tripId);\n        //Route\n        return ok(service.getRouteByTripId(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getRouteByTripId","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.getRouteByTripId","classId":"travel2.controller.Travel2Controller","line":42,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/routes/{tripId}\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@PostMapping(value \u003d \"/trips/routes\")\n    public HttpEntity getTripsByRouteId(@RequestBody ArrayList\u003cString\u003e routeIds,\n                                        @RequestHeader HttpHeaders headers) {\n        // ArrayList\u003cArrayList\u003cTrip\u003e\u003e\n        return ok(service.getTripByRoute(routeIds, headers));\n    }","returnType":"HttpEntity","methodName":"getTripsByRouteId","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.getTripsByRouteId","classId":"travel2.controller.Travel2Controller","line":50,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips/routes\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trips\")\n    public HttpEntity\u003c?\u003e createTrip(@RequestBody TravelInfo routeIds, @RequestHeader HttpHeaders headers) {\n        // null\n        return new ResponseEntity\u003c\u003e(service.create(routeIds, headers), HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003c?\u003e","methodName":"createTrip","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.createTrip","classId":"travel2.controller.Travel2Controller","line":57,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trips/{tripId}\")\n    public HttpEntity retrieve(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        // Trip\n        return ok(service.retrieve(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"retrieve","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.retrieve","classId":"travel2.controller.Travel2Controller","line":71,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trips/{tripId}\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(value \u003d \"/trips\")\n    public HttpEntity updateTrip(@RequestBody TravelInfo info, @RequestHeader HttpHeaders headers) {\n        // Trip\n        return ok(service.update(info, headers));\n    }","returnType":"HttpEntity","methodName":"updateTrip","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.updateTrip","classId":"travel2.controller.Travel2Controller","line":78,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(value \u003d \"/trips/{tripId}\")\n    public HttpEntity deleteTrip(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        // string\n        return ok(service.delete(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteTrip","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.deleteTrip","classId":"travel2.controller.Travel2Controller","line":85,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/trips/{tripId}\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trips/left\")\n    public HttpEntity queryInfo(@RequestBody TripInfo info, @RequestHeader HttpHeaders headers) {\n        if (info.getStartingPlace() \u003d\u003d null || info.getStartingPlace().length() \u003d\u003d 0 ||\n                info.getEndPlace() \u003d\u003d null || info.getEndPlace().length() \u003d\u003d 0 ||\n                info.getDepartureTime() \u003d\u003d null) {\n            Travel2Controller.LOGGER.info(\"[Travel Service][Travel Query] Fail.Something null.\");\n            ArrayList\u003cTripResponse\u003e errorList \u003d new ArrayList\u003c\u003e();\n            return ok(errorList);\n        }\n        Travel2Controller.LOGGER.info(\"[Travel Service] Query TripResponse\");\n        return ok(service.query(info, headers));\n    }","returnType":"HttpEntity","methodName":"queryInfo","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.queryInfo","classId":"travel2.controller.Travel2Controller","line":99,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trips/left\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/trip_detail\")\n    public HttpEntity getTripAllDetailInfo(@RequestBody TripAllDetailInfo gtdi, @RequestHeader HttpHeaders headers) {\n        return ok(service.getTripAllDetailInfo(gtdi, headers));\n    }","returnType":"HttpEntity","methodName":"getTripAllDetailInfo","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.getTripAllDetailInfo","classId":"travel2.controller.Travel2Controller","line":120,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/trip_detail\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/trips\")\n    public HttpEntity queryAll(@RequestHeader HttpHeaders headers) {\n        // List\u003cTrip\u003e\n        return ok(service.queryAll(headers));\n    }","returnType":"HttpEntity","methodName":"queryAll","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.queryAll","classId":"travel2.controller.Travel2Controller","line":126,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/trips\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/admin_trip\")\n    public HttpEntity adminQueryAll(@RequestHeader HttpHeaders headers) {\n        // ArrayList\u003cAdminTrip\u003e\n        return ok(service.adminQueryAll(headers));\n    }","returnType":"HttpEntity","methodName":"adminQueryAll","className":"Travel2Controller","packageName":"travel2.controller","methodId":"travel2.controller.Travel2Controller.adminQueryAll","classId":"travel2.controller.Travel2Controller","line":133,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/admin_trip\""}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java","directoryName":""},"code":"Trip findByTripId(TripId tripId);","returnType":"Trip","methodName":"findByTripId","className":"TripRepository","packageName":"travel2.repository","methodId":"travel2.repository.TripRepository.findByTripId","classId":"travel2.repository.TripRepository","line":13,"msArgumentList":[{"returnType":"TripId"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java","directoryName":""},"code":"void deleteByTripId(TripId tripId);","returnType":"void","methodName":"deleteByTripId","className":"TripRepository","packageName":"travel2.repository","methodId":"travel2.repository.TripRepository.deleteByTripId","classId":"travel2.repository.TripRepository","line":15,"msArgumentList":[{"returnType":"TripId"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cTrip\u003e findAll();","returnType":"ArrayList\u003cTrip\u003e","methodName":"findAll","className":"TripRepository","packageName":"travel2.repository","methodId":"travel2.repository.TripRepository.findAll","classId":"travel2.repository.TripRepository","line":17,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java","directoryName":""},"code":"ArrayList\u003cTrip\u003e findByRouteId(String routeId);","returnType":"ArrayList\u003cTrip\u003e","methodName":"findByRouteId","className":"TripRepository","packageName":"travel2.repository","methodId":"travel2.repository.TripRepository.findByRouteId","classId":"travel2.repository.TripRepository","line":20,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getRouteByTripId(String tripId, HttpHeaders headers) {\n        TripId tripId1 \u003d new TripId(tripId);\n\n        Trip trip \u003d repository.findByTripId(tripId1);\n        if (trip \u003d\u003d null) {\n            Travel2ServiceImpl.LOGGER.info(\"[Get Route By Trip ID] Trip Not Found: {}\", tripId);\n            return new Response\u003c\u003e(0, \"\\\"[Get Route By Trip ID] Trip Not Found:\\\" + tripId\", null);\n        } else {\n            Route route \u003d getRouteByRouteId(trip.getRouteId(), headers);\n            if (route \u003d\u003d null) {\n                return new Response\u003c\u003e(0, \"\\\"[Get Route By Trip ID] Route Not Found:\\\" + trip.getRouteId()\", null);\n            } else {\n                Travel2ServiceImpl.LOGGER.info(\"[Get Route By Trip ID] Success\");\n                return new Response\u003c\u003e(1, \"[Get Route By Trip ID] Success\", route);\n            }\n        }\n    }","returnType":"Response","methodName":"getRouteByTripId","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getRouteByTripId","classId":"travel2.service.Travel2ServiceImpl","line":37,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTrainTypeByTripId(String tripId, HttpHeaders headers) {\n        TripId tripId1 \u003d new TripId(tripId);\n        TrainType trainType \u003d null;\n        Trip trip \u003d repository.findByTripId(tripId1);\n        if (trip !\u003d null) {\n            trainType \u003d getTrainType(trip.getTrainTypeId(), headers);\n        }\n        if (trainType !\u003d null) {\n            return new Response\u003c\u003e(1, \"Success query Train by trip id\", trainType);\n        } else {\n            return new Response\u003c\u003e(0, noCnontent, null);\n        }\n    }","returnType":"Response","methodName":"getTrainTypeByTripId","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getTrainTypeByTripId","classId":"travel2.service.Travel2ServiceImpl","line":57,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTripByRoute(ArrayList\u003cString\u003e routeIds, HttpHeaders headers) {\n        ArrayList\u003cArrayList\u003cTrip\u003e\u003e tripList \u003d new ArrayList\u003c\u003e();\n        for (String routeId : routeIds) {\n            ArrayList\u003cTrip\u003e tempTripList \u003d repository.findByRouteId(routeId);\n            if (tempTripList \u003d\u003d null) {\n                tempTripList \u003d new ArrayList\u003c\u003e();\n            }\n            tripList.add(tempTripList);\n        }\n        if (!tripList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, tripList);\n        } else {\n            return new Response\u003c\u003e(0, noCnontent, null);\n        }\n    }","returnType":"Response","methodName":"getTripByRoute","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getTripByRoute","classId":"travel2.service.Travel2ServiceImpl","line":72,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(TravelInfo info, HttpHeaders headers) {\n        TripId ti \u003d new TripId(info.getTripId());\n        if (repository.findByTripId(ti) \u003d\u003d null) {\n            Trip trip \u003d new Trip(ti, info.getTrainTypeId(), info.getStartingStationId(),\n                    info.getStationsId(), info.getTerminalStationId(), info.getStartingTime(), info.getEndTime());\n            trip.setRouteId(info.getRouteId());\n            repository.save(trip);\n            return new Response\u003c\u003e(1, \"Create trip info:\" + ti.toString() + \".\", null);\n        } else {\n            return new Response\u003c\u003e(1, \"Trip \" + info.getTripId() + \" already exists\", null);\n        }\n    }","returnType":"Response","methodName":"create","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.create","classId":"travel2.service.Travel2ServiceImpl","line":89,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response retrieve(String tripId, HttpHeaders headers) {\n        TripId ti \u003d new TripId(tripId);\n        Trip trip \u003d repository.findByTripId(ti);\n        if (trip !\u003d null) {\n            return new Response\u003c\u003e(1, \"Search Trip Success by Trip Id \" + tripId, trip);\n        } else {\n            return new Response\u003c\u003e(0, \"No Content according to tripId\" + tripId, null);\n        }\n    }","returnType":"Response","methodName":"retrieve","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.retrieve","classId":"travel2.service.Travel2ServiceImpl","line":103,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response update(TravelInfo info, HttpHeaders headers) {\n        TripId ti \u003d new TripId(info.getTripId());\n        if (repository.findByTripId(ti) !\u003d null) {\n            Trip trip \u003d new Trip(ti, info.getTrainTypeId(), info.getStartingStationId(),\n                    info.getStationsId(), info.getTerminalStationId(), info.getStartingTime(), info.getEndTime());\n            trip.setRouteId(info.getRouteId());\n            repository.save(trip);\n            return new Response\u003c\u003e(1, \"Update trip info:\" + ti.toString(), trip);\n        } else {\n            return new Response\u003c\u003e(1, \"Trip\" + info.getTripId() + \"doesn \u0027t exists\", null);\n        }\n    }","returnType":"Response","methodName":"update","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.update","classId":"travel2.service.Travel2ServiceImpl","line":114,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response delete(String tripId, HttpHeaders headers) {\n        TripId ti \u003d new TripId(tripId);\n        if (repository.findByTripId(ti) !\u003d null) {\n            repository.deleteByTripId(ti);\n            return new Response\u003c\u003e(1, \"Delete trip:\" + tripId + \".\", tripId);\n        } else {\n            return new Response\u003c\u003e(0, \"Trip \" + tripId + \" doesn\u0027t exist.\", null);\n        }\n    }","returnType":"Response","methodName":"delete","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.delete","classId":"travel2.service.Travel2ServiceImpl","line":128,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response query(TripInfo info, HttpHeaders headers) {\n\n        //Gets the start and arrival stations of the train number to query. The originating and arriving stations received here are both station names, so two requests need to be sent to convert to station ids\n        String startingPlaceName \u003d info.getStartingPlace();\n        String endPlaceName \u003d info.getEndPlace();\n        String startingPlaceId \u003d queryForStationId(startingPlaceName, headers);\n        String endPlaceId \u003d queryForStationId(endPlaceName, headers);\n\n        //This is the final result\n        ArrayList\u003cTripResponse\u003e list \u003d new ArrayList\u003c\u003e();\n\n        //Check all train info\n        ArrayList\u003cTrip\u003e allTripList \u003d repository.findAll();\n        for (Trip tempTrip : allTripList) {\n            //Get the detailed route list of this train\n            Route tempRoute \u003d getRouteByRouteId(tempTrip.getRouteId(), headers);\n            //Check the route list for this train. Check that the required start and arrival stations are in the list of stops that are not on the route, and check that the location of the start station is before the stop\n            //Trains that meet the above criteria are added to the return list\n            if (tempRoute.getStations().contains(startingPlaceId) \u0026\u0026\n                    tempRoute.getStations().contains(endPlaceId) \u0026\u0026\n                    tempRoute.getStations().indexOf(startingPlaceId) \u003c tempRoute.getStations().indexOf(endPlaceId)) {\n                TripResponse response \u003d getTickets(tempTrip, tempRoute, startingPlaceId, endPlaceId, startingPlaceName, endPlaceName, info.getDepartureTime(), headers);\n                if (response \u003d\u003d null) {\n                    return new Response\u003c\u003e(0, noCnontent, null);\n                }\n                list.add(response);\n            }\n        }\n        return new Response\u003c\u003e(1, \"Success Query\", list);\n    }","returnType":"Response","methodName":"query","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.query","classId":"travel2.service.Travel2ServiceImpl","line":139,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTripAllDetailInfo(TripAllDetailInfo gtdi, HttpHeaders headers) {\n        TripAllDetail gtdr \u003d new TripAllDetail();\n        Travel2ServiceImpl.LOGGER.info(\"[TravelService] [getTripAllDetailInfo] gtdi info: {}\", gtdi.toString());\n        Trip trip \u003d repository.findByTripId(new TripId(gtdi.getTripId()));\n        if (trip \u003d\u003d null) {\n            gtdr.setTripResponse(null);\n            gtdr.setTrip(null);\n        } else {\n            String endPlaceName \u003d gtdi.getTo();\n            String startingPlaceName \u003d gtdi.getFrom();\n            String startingPlaceId \u003d queryForStationId(startingPlaceName, headers);\n            String endPlaceId \u003d queryForStationId(endPlaceName, headers);\n            Travel2ServiceImpl.LOGGER.info(\"[TravelService] [getTripAllDetailInfo] endPlaceID: {}\", endPlaceId);\n            Route tempRoute \u003d getRouteByRouteId(trip.getRouteId(), headers);\n            TripResponse tripResponse \u003d getTickets(trip, tempRoute, startingPlaceId, endPlaceId, gtdi.getFrom(), gtdi.getTo(), gtdi.getTravelDate(), headers);\n            if (tripResponse \u003d\u003d null) {\n                gtdr.setTrip(null);\n                gtdr.setTripResponse(null);\n            } else {\n                gtdr.setTripResponse(tripResponse);\n                gtdr.setTrip(repository.findByTripId(new TripId(gtdi.getTripId())));\n            }\n        }\n\n\n        return new Response\u003c\u003e(1, success, gtdr);\n    }","returnType":"Response","methodName":"getTripAllDetailInfo","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getTripAllDetailInfo","classId":"travel2.service.Travel2ServiceImpl","line":171,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private TripResponse getTickets(Trip trip, Route route, String startingPlaceId, String endPlaceId, String startingPlaceName, String endPlaceName, Date departureTime, HttpHeaders headers) {\n\n        //Determine if the date checked is the same day and after\n        if (!afterToday(departureTime)) {\n            return null;\n        }\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(startingPlaceName);\n        query.setEndPlace(endPlaceName);\n        query.setDepartureTime(departureTime);\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, headers);\n        ResponseEntity\u003cResponse\u003cTravelResult\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                });\n        Travel2ServiceImpl.LOGGER.info(\"Ticket info  is: {}\", re.getBody().toString());\n        TravelResult resultForTravel \u003d  re.getBody().getData();\n\n\n\n        //Ticket order _ high-speed train (number of tickets purchased)\n        requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cSoldTicket\u003e\u003e re2 \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + departureTime + \"/\" + trip.getTripId().toString(),\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cSoldTicket\u003e\u003e() {\n                });\n        Travel2ServiceImpl.LOGGER.info(\"Order other Ticket info  is: {}\", re.getBody().toString());\n        SoldTicket result \u003d re2.getBody().getData();\n\n        if (result \u003d\u003d null) {\n            Travel2ServiceImpl.LOGGER.info(\"soldticket Info doesn\u0027t exist\");\n            return null;\n        }\n        //Set the returned ticket information\n        TripResponse response \u003d new TripResponse();\n        if (queryForStationId(startingPlaceName, headers).equals(trip.getStartingStationId()) \u0026\u0026\n                queryForStationId(endPlaceName, headers).equals(trip.getTerminalStationId())) {\n            response.setEconomyClass(50);\n            response.setConfortClass(50);\n        } else {\n            response.setConfortClass(50);\n            response.setEconomyClass(50);\n        }\n\n        int first \u003d getRestTicketNumber(departureTime, trip.getTripId().toString(),\n                startingPlaceName, endPlaceName, SeatClass.FIRSTCLASS.getCode(), headers);\n\n        int second \u003d getRestTicketNumber(departureTime, trip.getTripId().toString(),\n                startingPlaceName, endPlaceName, SeatClass.SECONDCLASS.getCode(), headers);\n        response.setConfortClass(first);\n        response.setEconomyClass(second);\n\n        response.setStartingStation(startingPlaceName);\n        response.setTerminalStation(endPlaceName);\n\n        //Calculate the distance from the starting point\n        Travel2ServiceImpl.LOGGER.info(\"[TravelService][getTickets] route: {}  station: {}\", route.getId(), route.getStations());\n        int indexStart \u003d route.getStations().indexOf(startingPlaceId);\n        int indexEnd \u003d route.getStations().indexOf(endPlaceId);\n        int distanceStart \u003d route.getDistances().get(indexStart) - route.getDistances().get(0);\n        int distanceEnd \u003d route.getDistances().get(indexEnd) - route.getDistances().get(0);\n        TrainType trainType \u003d getTrainType(trip.getTrainTypeId(), headers);\n        //Train running time is calculated according to the average running speed of the train\n        int minutesStart \u003d 60 * distanceStart / trainType.getAverageSpeed();\n        int minutesEnd \u003d 60 * distanceEnd / trainType.getAverageSpeed();\n\n        Calendar calendarStart \u003d Calendar.getInstance();\n        calendarStart.setTime(trip.getStartingTime());\n        calendarStart.add(Calendar.MINUTE, minutesStart);\n        response.setStartingTime(calendarStart.getTime());\n        Travel2ServiceImpl.LOGGER.info(\"[Train Service] calculate time：{}  time: {}\", minutesStart, calendarStart.getTime());\n\n        Calendar calendarEnd \u003d Calendar.getInstance();\n        calendarEnd.setTime(trip.getStartingTime());\n        calendarEnd.add(Calendar.MINUTE, minutesEnd);\n        response.setEndTime(calendarEnd.getTime());\n        Travel2ServiceImpl.LOGGER.info(\"[Train Service] calculate time：{}  time: {}\", minutesEnd, calendarEnd.getTime());\n\n        response.setTripId(new TripId(result.getTrainNumber()));\n        response.setTrainTypeId(trip.getTrainTypeId());\n        response.setPriceForConfortClass(resultForTravel.getPrices().get(\"confortClass\"));\n        response.setPriceForEconomyClass(resultForTravel.getPrices().get(\"economyClass\"));\n\n        return response;\n    }","returnType":"TripResponse","methodName":"getTickets","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getTickets","classId":"travel2.service.Travel2ServiceImpl","line":201,"msArgumentList":[{"returnType":"Trip"},{"returnType":"Route"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"Date"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAll(HttpHeaders headers) {\n        List\u003cTrip\u003e tripList \u003d repository.findAll();\n        if (tripList !\u003d null \u0026\u0026 !tripList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, tripList);\n        }\n        return new Response\u003c\u003e(0, noCnontent, null);\n    }","returnType":"Response","methodName":"queryAll","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.queryAll","classId":"travel2.service.Travel2ServiceImpl","line":294,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private static boolean afterToday(Date date) {\n        Calendar calDateA \u003d Calendar.getInstance();\n        Date today \u003d new Date();\n        calDateA.setTime(today);\n\n        Calendar calDateB \u003d Calendar.getInstance();\n        calDateB.setTime(date);\n\n        if (calDateA.get(Calendar.YEAR) \u003e calDateB.get(Calendar.YEAR)) {\n            return false;\n        } else if (calDateA.get(Calendar.YEAR) \u003d\u003d calDateB.get(Calendar.YEAR)) {\n            if (calDateA.get(Calendar.MONTH) \u003e calDateB.get(Calendar.MONTH)) {\n                return false;\n            } else if (calDateA.get(Calendar.MONTH) \u003d\u003d calDateB.get(Calendar.MONTH)) {\n                return calDateA.get(Calendar.DAY_OF_MONTH) \u003c\u003d calDateB.get(Calendar.DAY_OF_MONTH);\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }","returnType":"boolean","methodName":"afterToday","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.afterToday","classId":"travel2.service.Travel2ServiceImpl","line":303,"msArgumentList":[{"returnType":"Date"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private TrainType getTrainType(String trainTypeId, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cTrainType\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-train-service:14567/api/v1/trainservice/trains/\" + trainTypeId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"TrainType","methodName":"getTrainType","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getTrainType","classId":"travel2.service.Travel2ServiceImpl","line":326,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n\n\n        return re.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.queryForStationId","classId":"travel2.service.Travel2ServiceImpl","line":339,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private Route getRouteByRouteId(String routeId, HttpHeaders headers) {\n        Travel2ServiceImpl.LOGGER.info(\"[Travel Service][Get Route By Id] Route ID：{}\", routeId);\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        Response result \u003d re.getBody();\n\n        if (result.getStatus() \u003d\u003d 0 ) {\n            Travel2ServiceImpl.LOGGER.info(\"[Travel Other Service][Get Route By Id] Fail. {}\", result.getMsg());\n            return null;\n        } else {\n            Travel2ServiceImpl.LOGGER.info(\"[Travel Other Service][Get Route By Id] Success.\");\n            return JsonUtils.conveterObject(result.getData(), Route.class);\n        }\n    }","returnType":"Route","methodName":"getRouteByRouteId","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getRouteByRouteId","classId":"travel2.service.Travel2ServiceImpl","line":352,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"private int getRestTicketNumber(Date travelDate, String trainNumber, String startStationName, String endStationName, int seatType, HttpHeaders headers) {\n        Seat seatRequest \u003d new Seat();\n\n        String fromId \u003d queryForStationId(startStationName, headers);\n        String toId \u003d queryForStationId(endStationName, headers);\n\n        seatRequest.setDestStation(toId);\n        seatRequest.setStartStation(fromId);\n        seatRequest.setTrainNumber(trainNumber);\n        seatRequest.setSeatType(seatType);\n        seatRequest.setTravelDate(travelDate);\n        Travel2ServiceImpl.LOGGER.info(\"Seat request To String: {}\", seatRequest.toString());\n\n        HttpEntity requestEntity \u003d new HttpEntity(seatRequest, headers);\n        ResponseEntity\u003cResponse\u003cInteger\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats/left_tickets\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cInteger\u003e\u003e() {\n                });\n        int restNumber \u003d   re.getBody().getData();\n\n        Travel2ServiceImpl.LOGGER.info(\"Get Rest tickets num is: {}\", re.getBody().toString());\n        return restNumber;\n    }","returnType":"int","methodName":"getRestTicketNumber","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.getRestTicketNumber","classId":"travel2.service.Travel2ServiceImpl","line":371,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java","directoryName":""},"code":"@Override\n    public Response adminQueryAll(HttpHeaders headers) {\n        List\u003cTrip\u003e trips \u003d repository.findAll();\n        ArrayList\u003cAdminTrip\u003e adminTrips \u003d new ArrayList\u003c\u003e();\n        for (Trip trip : trips) {\n            AdminTrip adminTrip \u003d new AdminTrip();\n            adminTrip.setRoute(getRouteByRouteId(trip.getRouteId(), headers));\n            adminTrip.setTrainType(getTrainType(trip.getTrainTypeId(), headers));\n            adminTrip.setTrip(trip);\n            adminTrips.add(adminTrip);\n        }\n        if (!adminTrips.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Travel Service Admin Query All Travel Success\", adminTrips);\n        } else {\n            return new Response\u003c\u003e(0, noCnontent, null);\n        }\n    }","returnType":"Response","methodName":"adminQueryAll","className":"Travel2ServiceImpl","packageName":"travel2.service","methodId":"travel2.service.Travel2ServiceImpl.adminQueryAll","classId":"travel2.service.Travel2ServiceImpl","line":397,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response create(TravelInfo info, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.create","classId":"travel2.service.Travel2Service","line":14,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response retrieve(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"retrieve","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.retrieve","classId":"travel2.service.Travel2Service","line":16,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response update(TravelInfo info, HttpHeaders headers);","returnType":"Response","methodName":"update","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.update","classId":"travel2.service.Travel2Service","line":18,"msArgumentList":[{"returnType":"TravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response delete(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"delete","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.delete","classId":"travel2.service.Travel2Service","line":20,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response query(TripInfo info, HttpHeaders headers);","returnType":"Response","methodName":"query","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.query","classId":"travel2.service.Travel2Service","line":22,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response getTripAllDetailInfo(TripAllDetailInfo gtdi, HttpHeaders headers);","returnType":"Response","methodName":"getTripAllDetailInfo","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.getTripAllDetailInfo","classId":"travel2.service.Travel2Service","line":24,"msArgumentList":[{"returnType":"TripAllDetailInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response getRouteByTripId(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"getRouteByTripId","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.getRouteByTripId","classId":"travel2.service.Travel2Service","line":26,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response getTrainTypeByTripId(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"getTrainTypeByTripId","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.getTrainTypeByTripId","classId":"travel2.service.Travel2Service","line":28,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response queryAll(HttpHeaders headers);","returnType":"Response","methodName":"queryAll","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.queryAll","classId":"travel2.service.Travel2Service","line":30,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response getTripByRoute(ArrayList\u003cString\u003e routeIds, HttpHeaders headers);","returnType":"Response","methodName":"getTripByRoute","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.getTripByRoute","classId":"travel2.service.Travel2Service","line":32,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel2-service/src/main/java/travel2/service/Travel2Service.java","directoryName":""},"code":"Response adminQueryAll(HttpHeaders headers);","returnType":"Response","methodName":"adminQueryAll","className":"Travel2Service","packageName":"travel2.service","methodId":"travel2.service.Travel2Service.adminQueryAll","classId":"travel2.service.Travel2Service","line":34,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ Order Other Service ] !\";\n    }","returnType":"String","methodName":"home","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.home","classId":"other.controller.OrderOtherController","line":28,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/orderOther/tickets\")\n    public HttpEntity getTicketListByDateAndTripId(@RequestBody Seat seatRequest, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Get Sold Ticket] Date: {}\", seatRequest.getTravelDate().toString());\n        return ok(orderService.getSoldTickets(seatRequest, headers));\n    }","returnType":"HttpEntity","methodName":"getTicketListByDateAndTripId","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.getTicketListByDateAndTripId","classId":"other.controller.OrderOtherController","line":35,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/orderOther/tickets\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/orderOther\")\n    public HttpEntity createNewOrder(@RequestBody Order createOrder, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Create Order] Create Order form {}  ---\u003e {} at {}\", createOrder.getFrom(), createOrder.getTo(), createOrder.getTravelDate());\n\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Verify Login] Success\");\n        return ok(orderService.create(createOrder, headers));\n    }","returnType":"HttpEntity","methodName":"createNewOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.createNewOrder","classId":"other.controller.OrderOtherController","line":41,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/orderOther\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/orderOther/admin\")\n    public HttpEntity addcreateNewOrder(@RequestBody Order order, @RequestHeader HttpHeaders headers) {\n        return ok(orderService.addNewOrder(order, headers));\n    }","returnType":"HttpEntity","methodName":"addcreateNewOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.addcreateNewOrder","classId":"other.controller.OrderOtherController","line":50,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/orderOther/admin\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/orderOther/query\")\n    public HttpEntity queryOrders(@RequestBody QueryInfo qi,\n                                  @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Query Orders] Query Orders for {}\", qi.getLoginId());\n        return ok(orderService.queryOrders(qi, qi.getLoginId(), headers));\n\n    }","returnType":"HttpEntity","methodName":"queryOrders","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.queryOrders","classId":"other.controller.OrderOtherController","line":56,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/orderOther/query\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(path \u003d \"/orderOther/refresh\")\n    public HttpEntity queryOrdersForRefresh(@RequestBody QueryInfo qi,\n                                            @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Query Orders] Query Orders for {}\", qi.getLoginId());\n        return ok(orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers));\n    }","returnType":"HttpEntity","methodName":"queryOrdersForRefresh","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.queryOrdersForRefresh","classId":"other.controller.OrderOtherController","line":65,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"path","value":"\"/orderOther/refresh\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/{travelDate}/{trainNumber}\")\n    public HttpEntity calculateSoldTicket(@PathVariable Date travelDate, @PathVariable String trainNumber,\n                                          @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Calculate Sold Tickets] Date: {} TrainNumber: {}\", travelDate, trainNumber);\n        return ok(orderService.queryAlreadySoldOrders(travelDate, trainNumber, headers));\n    }","returnType":"HttpEntity","methodName":"calculateSoldTicket","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.calculateSoldTicket","classId":"other.controller.OrderOtherController","line":74,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/{travelDate}/{trainNumber}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/price/{orderId}\")\n    public HttpEntity getOrderPrice(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Get Order Price] Order Id: {}\", orderId);\n        return ok(orderService.getOrderPrice(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"getOrderPrice","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.getOrderPrice","classId":"other.controller.OrderOtherController","line":82,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/price/{orderId}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/orderPay/{orderId}\")\n    public HttpEntity payOrder(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Pay Order] Order Id: {}\", orderId);\n        return ok(orderService.payOrder(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"payOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.payOrder","classId":"other.controller.OrderOtherController","line":89,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/orderPay/{orderId}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/{orderId}\")\n    public HttpEntity getOrderById(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Get Order By Id] Order Id: {}\", orderId);\n        return ok(orderService.getOrderById(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"getOrderById","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.getOrderById","classId":"other.controller.OrderOtherController","line":96,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/{orderId}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/status/{orderId}/{status}\")\n    public HttpEntity modifyOrder(@PathVariable String orderId, @PathVariable int status, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Modify Order Status] Order Id: {}\", orderId);\n        return ok(orderService.modifyOrder(orderId, status, headers));\n    }","returnType":"HttpEntity","methodName":"modifyOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.modifyOrder","classId":"other.controller.OrderOtherController","line":103,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/status/{orderId}/{status}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther/security/{checkDate}/{accountId}\")\n    public HttpEntity securityInfoCheck(@PathVariable Date checkDate, @PathVariable String accountId,\n                                        @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Security Info Get]\");\n        return ok(orderService.checkSecurityAboutOrder(checkDate, accountId, headers));\n    }","returnType":"HttpEntity","methodName":"securityInfoCheck","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.securityInfoCheck","classId":"other.controller.OrderOtherController","line":110,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther/security/{checkDate}/{accountId}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/orderOther\")\n    public HttpEntity saveOrderInfo(@RequestBody Order orderInfo,\n                                    @RequestHeader HttpHeaders headers) {\n\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Verify Login] Success\");\n        return ok(orderService.saveChanges(orderInfo, headers));\n    }","returnType":"HttpEntity","methodName":"saveOrderInfo","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.saveOrderInfo","classId":"other.controller.OrderOtherController","line":118,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/orderOther\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(path \u003d \"/orderOther/admin\")\n    public HttpEntity updateOrder(@RequestBody Order order, @RequestHeader HttpHeaders headers) {\n        return ok(orderService.updateOrder(order, headers));\n    }","returnType":"HttpEntity","methodName":"updateOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.updateOrder","classId":"other.controller.OrderOtherController","line":127,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"path","value":"\"/orderOther/admin\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(path \u003d \"/orderOther/{orderId}\")\n    public HttpEntity deleteOrder(@PathVariable String orderId, @RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Delete Order] Order Id: {}\", orderId);\n        return ok(orderService.deleteOrder(orderId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.deleteOrder","classId":"other.controller.OrderOtherController","line":133,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"path","value":"\"/orderOther/{orderId}\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/orderOther\")\n    public HttpEntity findAllOrder(@RequestHeader HttpHeaders headers) {\n        OrderOtherController.LOGGER.info(\"[Order Other Service][Find All Order]\");\n        return ok(orderService.getAllOrders(headers));\n    }","returnType":"HttpEntity","methodName":"findAllOrder","className":"OrderOtherController","packageName":"other.controller","methodId":"other.controller.OrderOtherController.findAllOrder","classId":"other.controller.OrderOtherController","line":142,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/orderOther\""}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java","directoryName":""},"code":"@Query(\"{ \u0027id\u0027: ?0 }\")\n    Order findById(UUID id);","returnType":"Order","methodName":"findById","className":"OrderOtherRepository","packageName":"other.repository","methodId":"other.repository.OrderOtherRepository.findById","classId":"other.repository.OrderOtherRepository","line":23,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java","directoryName":""},"code":"@Override\n    ArrayList\u003cOrder\u003e findAll();","returnType":"ArrayList\u003cOrder\u003e","methodName":"findAll","className":"OrderOtherRepository","packageName":"other.repository","methodId":"other.repository.OrderOtherRepository.findAll","classId":"other.repository.OrderOtherRepository","line":31,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java","directoryName":""},"code":"@Query(\"{ \u0027accountId\u0027 : ?0 }\")\n    ArrayList\u003cOrder\u003e findByAccountId(UUID accountId);","returnType":"ArrayList\u003cOrder\u003e","methodName":"findByAccountId","className":"OrderOtherRepository","packageName":"other.repository","methodId":"other.repository.OrderOtherRepository.findByAccountId","classId":"other.repository.OrderOtherRepository","line":40,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java","directoryName":""},"code":"@Query(\"{ \u0027travelDate\u0027 : ?0 , trainNumber : ?1 }\")\n    ArrayList\u003cOrder\u003e findByTravelDateAndTrainNumber(Date travelDate, String trainNumber);","returnType":"ArrayList\u003cOrder\u003e","methodName":"findByTravelDateAndTrainNumber","className":"OrderOtherRepository","packageName":"other.repository","methodId":"other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber","classId":"other.repository.OrderOtherRepository","line":50,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"OrderOtherRepository","packageName":"other.repository","methodId":"other.repository.OrderOtherRepository.deleteById","classId":"other.repository.OrderOtherRepository","line":59,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getSoldTickets(Seat seatRequest, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e list \u003d orderOtherRepository.findByTravelDateAndTrainNumber(seatRequest.getTravelDate(),\n                seatRequest.getTrainNumber());\n        if (list !\u003d null \u0026\u0026 !list.isEmpty()) {\n            Set ticketSet \u003d new HashSet();\n            for (Order tempOrder : list) {\n                Ticket ticket \u003d new Ticket();\n                ticket.setSeatNo(Integer.parseInt(tempOrder.getSeatNumber()));\n                ticket.setStartStation(tempOrder.getFrom());\n                ticket.setDestStation(tempOrder.getTo());\n                ticketSet.add(ticket);\n            }\n\n            LeftTicketInfo leftTicketInfo \u003d new LeftTicketInfo();\n            leftTicketInfo.setSoldTickets(ticketSet);\n            OrderOtherServiceImpl.LOGGER.info(\"Left ticket info is: {}\", leftTicketInfo.toString());\n\n            return new Response\u003c\u003e(1, success, leftTicketInfo);\n        } else {\n            return new Response\u003c\u003e(0, \"Seat is Null.\", null);\n        }\n    }","returnType":"Response","methodName":"getSoldTickets","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.getSoldTickets","classId":"other.service.OrderOtherServiceImpl","line":36,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findOrderById(UUID id, HttpHeaders headers) {\n        Order order \u003d orderOtherRepository.findById(id);\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No Content by this id\", null);\n        } else {\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"findOrderById","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.findOrderById","classId":"other.service.OrderOtherServiceImpl","line":60,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(Order order, HttpHeaders headers) {\n        OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Create Order] Ready Create Order\");\n        ArrayList\u003cOrder\u003e accountOrders \u003d orderOtherRepository.findByAccountId(order.getAccountId());\n        if (accountOrders.contains(order)) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Order Create] Fail.Order already exists.\");\n            return new Response\u003c\u003e(0, \"Order already exist\", order);\n        } else {\n            order.setId(UUID.randomUUID());\n            orderOtherRepository.save(order);\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Order Create] Success.\");\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Order Create] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"create","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.create","classId":"other.service.OrderOtherServiceImpl","line":70,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public void initOrder(Order order, HttpHeaders headers) {\n        Order orderTemp \u003d orderOtherRepository.findById(order.getId());\n        if (orderTemp \u003d\u003d null) {\n            orderOtherRepository.save(order);\n        } else {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Init Order] Order Already Exists ID: {}\", order.getId());\n        }\n    }","returnType":"void","methodName":"initOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.initOrder","classId":"other.service.OrderOtherServiceImpl","line":86,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response alterOrder(OrderAlterInfo oai, HttpHeaders headers) {\n\n        UUID oldOrderId \u003d oai.getPreviousOrderId();\n        Order oldOrder \u003d orderOtherRepository.findById(oldOrderId);\n        if (oldOrder \u003d\u003d null) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Alter Order] Fail.Order do not exist.\");\n            return new Response\u003c\u003e(0, \"Old Order Does Not Exists\", null);\n        }\n        oldOrder.setStatus(OrderStatus.CANCEL.getCode());\n        saveChanges(oldOrder, headers);\n        Order newOrder \u003d oai.getNewOrderInfo();\n        newOrder.setId(UUID.randomUUID());\n        Response cor \u003d create(oai.getNewOrderInfo(), headers);\n        if (cor.getStatus() \u003d\u003d 1) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Alter Order] Success.\");\n            return new Response\u003c\u003e(1, \"Alter Order Success\", newOrder);\n        } else {\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n    }","returnType":"Response","methodName":"alterOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.alterOrder","classId":"other.service.OrderOtherServiceImpl","line":97,"msArgumentList":[{"returnType":"OrderAlterInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response\u003cArrayList\u003cOrder\u003e\u003e queryOrders(QueryInfo qi, String accountId, HttpHeaders headers) {\n        //1.Get all orders of the user\n        ArrayList\u003cOrder\u003e list \u003d orderOtherRepository.findByAccountId(UUID.fromString(accountId));\n        OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order][Step 1] Get Orders Number of Account: {}\", list.size());\n        //2.Check is these orders fit the requirement/\n        if (qi.isEnableStateQuery() || qi.isEnableBoughtDateQuery() || qi.isEnableTravelDateQuery()) {\n            ArrayList\u003cOrder\u003e finalList \u003d new ArrayList\u003c\u003e();\n            for (Order tempOrder : list) {\n                boolean statePassFlag \u003d false;\n                boolean boughtDatePassFlag \u003d false;\n                boolean travelDatePassFlag \u003d false;\n                //3.Check order state requirement.\n                if (qi.isEnableStateQuery()) {\n                    if (tempOrder.getStatus() !\u003d qi.getState()) {\n                        statePassFlag \u003d false;\n                    } else {\n                        statePassFlag \u003d true;\n                    }\n                } else {\n                    statePassFlag \u003d true;\n                }\n                OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order][Step 2][Check Status Fits End]\");\n                //4.Check order travel date requirement.\n                if (qi.isEnableTravelDateQuery()) {\n                    if (tempOrder.getTravelDate().before(qi.getTravelDateEnd()) \u0026\u0026\n                            tempOrder.getTravelDate().after(qi.getBoughtDateStart())) {\n                        travelDatePassFlag \u003d true;\n                    } else {\n                        travelDatePassFlag \u003d false;\n                    }\n                } else {\n                    travelDatePassFlag \u003d true;\n                }\n                OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order][Step 2][Check Travel Date End]\");\n                //5.Check order bought date requirement.\n                if (qi.isEnableBoughtDateQuery()) {\n                    if (tempOrder.getBoughtDate().before(qi.getBoughtDateEnd()) \u0026\u0026\n                            tempOrder.getBoughtDate().after(qi.getBoughtDateStart())) {\n                        boughtDatePassFlag \u003d true;\n                    } else {\n                        boughtDatePassFlag \u003d false;\n                    }\n                } else {\n                    boughtDatePassFlag \u003d true;\n                }\n                OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order][Step 2][Check Bought Date End]\");\n                //6.check if all requirement fits.\n                if (statePassFlag \u0026\u0026 boughtDatePassFlag \u0026\u0026 travelDatePassFlag) {\n                    finalList.add(tempOrder);\n                }\n                OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order][Step 2][Check All Requirement End]\");\n            }\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order] Get order num: {}\", finalList.size());\n            return new Response\u003c\u003e(1, \"Get order num\", finalList);\n        } else {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Query Order] Get order num: {}\", list.size());\n            return new Response\u003c\u003e(1, \"Get order num\", list);\n        }\n    }","returnType":"Response\u003cArrayList\u003cOrder\u003e\u003e","methodName":"queryOrders","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.queryOrders","classId":"other.service.OrderOtherServiceImpl","line":119,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryOrdersForRefresh(QueryInfo qi, String accountId, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d queryOrders(qi, accountId, headers).getData();\n        ArrayList\u003cString\u003e stationIds \u003d new ArrayList\u003c\u003e();\n        for (Order order : orders) {\n            stationIds.add(order.getFrom());\n            stationIds.add(order.getTo());\n        }\n        List\u003cString\u003e names \u003d queryForStationId(stationIds, headers);\n        for (int i \u003d 0; i \u003c orders.size(); i++) {\n            orders.get(i).setFrom(names.get(i * 2));\n            orders.get(i).setTo(names.get(i * 2 + 1));\n        }\n        return new Response\u003c\u003e(1, success, orders);\n    }","returnType":"Response","methodName":"queryOrdersForRefresh","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.queryOrdersForRefresh","classId":"other.service.OrderOtherServiceImpl","line":180,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"public List\u003cString\u003e queryForStationId(List\u003cString\u003e ids, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(ids, headers);\n        ResponseEntity\u003cResponse\u003cList\u003cString\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/namelist\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cString\u003e\u003e\u003e() {\n                });\n        OrderOtherServiceImpl.LOGGER.info(\"Stations name list is : {}\", re.getBody().toString());\n        return re.getBody().getData();\n    }","returnType":"List\u003cString\u003e","methodName":"queryForStationId","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.queryForStationId","classId":"other.service.OrderOtherServiceImpl","line":196,"msArgumentList":[{"returnType":"List\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response saveChanges(Order order, HttpHeaders headers) {\n        Order oldOrder \u003d orderOtherRepository.findById(order.getId());\n        if (oldOrder \u003d\u003d null) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Modify Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            oldOrder.setAccountId(order.getAccountId());\n            oldOrder.setBoughtDate(order.getBoughtDate());\n            oldOrder.setTravelDate(order.getTravelDate());\n            oldOrder.setTravelTime(order.getTravelTime());\n            oldOrder.setSeatClass(order.getSeatClass());\n            oldOrder.setCoachNumber(order.getCoachNumber());\n\n            oldOrder.setSeatNumber(order.getSeatNumber());\n            oldOrder.setTo(order.getTo());\n            oldOrder.setFrom(order.getFrom());\n            oldOrder.setStatus(order.getStatus());\n            oldOrder.setTrainNumber(order.getTrainNumber());\n            oldOrder.setPrice(order.getPrice());\n            oldOrder.setContactsName(order.getContactsName());\n            oldOrder.setDocumentType(order.getDocumentType());\n            oldOrder.setContactsDocumentNumber(order.getContactsDocumentNumber());\n\n            orderOtherRepository.save(oldOrder);\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service] Success.\");\n            return new Response\u003c\u003e(1, success, oldOrder);\n        }\n    }","returnType":"Response","methodName":"saveChanges","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.saveChanges","classId":"other.service.OrderOtherServiceImpl","line":209,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response cancelOrder(UUID accountId, UUID orderId, HttpHeaders headers) {\n\n        Order oldOrder \u003d orderOtherRepository.findById(orderId);\n        if (oldOrder \u003d\u003d null) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Cancel Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            oldOrder.setStatus(OrderStatus.CANCEL.getCode());\n            orderOtherRepository.save(oldOrder);\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Cancel Order] Success.\");\n            return new Response\u003c\u003e(1, success, oldOrder);\n        }\n    }","returnType":"Response","methodName":"cancelOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.cancelOrder","classId":"other.service.OrderOtherServiceImpl","line":239,"msArgumentList":[{"returnType":"UUID"},{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAlreadySoldOrders(Date travelDate, String trainNumber, HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d orderOtherRepository.findByTravelDateAndTrainNumber(travelDate, trainNumber);\n        SoldTicket cstr \u003d new SoldTicket();\n        cstr.setTravelDate(travelDate);\n        cstr.setTrainNumber(trainNumber);\n        OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Calculate Sold Ticket] Get Orders Number: {}\", orders.size());\n        for (Order order : orders) {\n            if (order.getStatus() \u003e\u003d OrderStatus.CHANGE.getCode()) {\n                continue;\n            }\n            if (order.getSeatClass() \u003d\u003d SeatClass.NONE.getCode()) {\n                cstr.setNoSeat(cstr.getNoSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.BUSINESS.getCode()) {\n                cstr.setBusinessSeat(cstr.getBusinessSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                cstr.setFirstClassSeat(cstr.getFirstClassSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SECONDCLASS.getCode()) {\n                cstr.setSecondClassSeat(cstr.getSecondClassSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HARDSEAT.getCode()) {\n                cstr.setHardSeat(cstr.getHardSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SOFTSEAT.getCode()) {\n                cstr.setSoftSeat(cstr.getSoftSeat() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HARDBED.getCode()) {\n                cstr.setHardBed(cstr.getHardBed() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.SOFTBED.getCode()) {\n                cstr.setSoftBed(cstr.getSoftBed() + 1);\n            } else if (order.getSeatClass() \u003d\u003d SeatClass.HIGHSOFTBED.getCode()) {\n                cstr.setHighSoftBed(cstr.getHighSoftBed() + 1);\n            } else {\n                OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Calculate Sold Tickets] Seat class not exists. Order ID: {}\", order.getId());\n            }\n        }\n        return new Response\u003c\u003e(1, success, cstr);\n    }","returnType":"Response","methodName":"queryAlreadySoldOrders","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.queryAlreadySoldOrders","classId":"other.service.OrderOtherServiceImpl","line":254,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllOrders(HttpHeaders headers) {\n        ArrayList\u003cOrder\u003e orders \u003d orderOtherRepository.findAll();\n        if (orders \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No Content\", null);\n        } else {\n            return new Response\u003c\u003e(1, success, orders);\n        }\n    }","returnType":"Response","methodName":"getAllOrders","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.getAllOrders","classId":"other.service.OrderOtherServiceImpl","line":290,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response modifyOrder(String orderId, int status, HttpHeaders headers) {\n        Order order \u003d orderOtherRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            order.setStatus(status);\n            orderOtherRepository.save(order);\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"modifyOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.modifyOrder","classId":"other.service.OrderOtherServiceImpl","line":300,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getOrderPrice(String orderId, HttpHeaders headers) {\n        Order order \u003d orderOtherRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, \"-1.0\");\n        } else {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Other Service][Get Order Price] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, success, order.getPrice());\n        }\n    }","returnType":"Response","methodName":"getOrderPrice","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.getOrderPrice","classId":"other.service.OrderOtherServiceImpl","line":312,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response payOrder(String orderId, HttpHeaders headers) {\n        Order order \u003d orderOtherRepository.findById(UUID.fromString(orderId));\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            order.setStatus(OrderStatus.PAID.getCode());\n            orderOtherRepository.save(order);\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"payOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.payOrder","classId":"other.service.OrderOtherServiceImpl","line":323,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getOrderById(String orderId, HttpHeaders headers) {\n        Order order \u003d orderOtherRepository.findById(UUID.fromString(orderId));\n\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"getOrderById","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.getOrderById","classId":"other.service.OrderOtherServiceImpl","line":335,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response checkSecurityAboutOrder(Date dateFrom, String accountId, HttpHeaders headers) {\n        OrderSecurity result \u003d new OrderSecurity();\n        ArrayList\u003cOrder\u003e orders \u003d orderOtherRepository.findByAccountId(UUID.fromString(accountId));\n        int countOrderInOneHour \u003d 0;\n        int countTotalValidOrder \u003d 0;\n        Calendar ca \u003d Calendar.getInstance();\n        ca.setTime(dateFrom);\n        ca.add(Calendar.HOUR_OF_DAY, -1);\n        dateFrom \u003d ca.getTime();\n        for (Order order : orders) {\n            if (order.getStatus() \u003d\u003d OrderStatus.NOTPAID.getCode() ||\n                    order.getStatus() \u003d\u003d OrderStatus.PAID.getCode() ||\n                    order.getStatus() \u003d\u003d OrderStatus.COLLECTED.getCode()) {\n                countTotalValidOrder +\u003d 1;\n            }\n            if (order.getBoughtDate().after(dateFrom)) {\n                countOrderInOneHour +\u003d 1;\n            }\n        }\n        result.setOrderNumInLastOneHour(countOrderInOneHour);\n        result.setOrderNumOfValidOrder(countTotalValidOrder);\n        return new Response\u003c\u003e(1, success, result);\n    }","returnType":"Response","methodName":"checkSecurityAboutOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.checkSecurityAboutOrder","classId":"other.service.OrderOtherServiceImpl","line":346,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteOrder(String orderId, HttpHeaders headers) {\n        UUID orderUuid \u003d UUID.fromString(orderId);\n        Order order \u003d orderOtherRepository.findById(orderUuid);\n        if (order \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"Order Not Exist.\", null);\n        } else {\n            orderOtherRepository.deleteById(orderUuid);\n            return new Response\u003c\u003e(1, success, orderUuid);\n        }\n    }","returnType":"Response","methodName":"deleteOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.deleteOrder","classId":"other.service.OrderOtherServiceImpl","line":371,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response addNewOrder(Order order, HttpHeaders headers) {\n        OrderOtherServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Ready Add Order.\");\n        ArrayList\u003cOrder\u003e accountOrders \u003d orderOtherRepository.findByAccountId(order.getAccountId());\n        if (accountOrders.contains(order)) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Fail.Order already exists.\");\n            return new Response\u003c\u003e(0, \"Order already exist\", null);\n        } else {\n            order.setId(UUID.randomUUID());\n            orderOtherRepository.save(order);\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Success.\");\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Service][Admin Add Order] Price: {}\", order.getPrice());\n            return new Response\u003c\u003e(1, success, order);\n        }\n    }","returnType":"Response","methodName":"addNewOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.addNewOrder","classId":"other.service.OrderOtherServiceImpl","line":383,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateOrder(Order order, HttpHeaders headers) {\n        LOGGER.info(\"UPDATE ORDER INFO :\" + order.toString());\n        Order oldOrder \u003d orderOtherRepository.findById(order.getId());\n        if (oldOrder \u003d\u003d null) {\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Service][Admin Update Order] Fail.Order not found.\");\n            return new Response\u003c\u003e(0, orderNotFound, null);\n        } else {\n            OrderOtherServiceImpl.LOGGER.info(\"{}\", oldOrder.toString());\n            oldOrder.setAccountId(order.getAccountId());\n            oldOrder.setBoughtDate(order.getBoughtDate());\n            oldOrder.setTravelDate(order.getTravelDate());\n            oldOrder.setTravelTime(order.getTravelTime());\n            oldOrder.setCoachNumber(order.getCoachNumber());\n            oldOrder.setSeatClass(order.getSeatClass());\n            oldOrder.setSeatNumber(order.getSeatNumber());\n            oldOrder.setFrom(order.getFrom());\n            oldOrder.setTo(order.getTo());\n            oldOrder.setStatus(order.getStatus());\n            oldOrder.setTrainNumber(order.getTrainNumber());\n            oldOrder.setPrice(order.getPrice());\n            oldOrder.setContactsName(order.getContactsName());\n            oldOrder.setContactsDocumentNumber(order.getContactsDocumentNumber());\n            oldOrder.setDocumentType(order.getDocumentType());\n            orderOtherRepository.save(oldOrder);\n            OrderOtherServiceImpl.LOGGER.info(\"[Order Service] [Admin Update Order] Success.\");\n            return new Response\u003c\u003e(1, success, oldOrder);\n        }\n    }","returnType":"Response","methodName":"updateOrder","className":"OrderOtherServiceImpl","packageName":"other.service","methodId":"other.service.OrderOtherServiceImpl.updateOrder","classId":"other.service.OrderOtherServiceImpl","line":399,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response findOrderById(UUID id, HttpHeaders headers);","returnType":"Response","methodName":"findOrderById","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.findOrderById","classId":"other.service.OrderOtherService","line":15,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response create(Order newOrder, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.create","classId":"other.service.OrderOtherService","line":17,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response updateOrder(Order order, HttpHeaders headers);","returnType":"Response","methodName":"updateOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.updateOrder","classId":"other.service.OrderOtherService","line":19,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response saveChanges(Order order, HttpHeaders headers);","returnType":"Response","methodName":"saveChanges","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.saveChanges","classId":"other.service.OrderOtherService","line":21,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response cancelOrder(UUID accountId, UUID orderId, HttpHeaders headers);","returnType":"Response","methodName":"cancelOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.cancelOrder","classId":"other.service.OrderOtherService","line":23,"msArgumentList":[{"returnType":"UUID"},{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response addNewOrder(Order order, HttpHeaders headers);","returnType":"Response","methodName":"addNewOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.addNewOrder","classId":"other.service.OrderOtherService","line":25,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response deleteOrder(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"deleteOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.deleteOrder","classId":"other.service.OrderOtherService","line":27,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response getOrderById(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"getOrderById","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.getOrderById","classId":"other.service.OrderOtherService","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response payOrder(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"payOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.payOrder","classId":"other.service.OrderOtherService","line":31,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response getOrderPrice(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"getOrderPrice","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.getOrderPrice","classId":"other.service.OrderOtherService","line":33,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response modifyOrder(String orderId, int status, HttpHeaders headers);","returnType":"Response","methodName":"modifyOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.modifyOrder","classId":"other.service.OrderOtherService","line":35,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response getAllOrders(HttpHeaders headers);","returnType":"Response","methodName":"getAllOrders","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.getAllOrders","classId":"other.service.OrderOtherService","line":37,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response getSoldTickets(Seat seatRequest, HttpHeaders headers);","returnType":"Response","methodName":"getSoldTickets","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.getSoldTickets","classId":"other.service.OrderOtherService","line":39,"msArgumentList":[{"returnType":"Seat"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response queryOrders(QueryInfo qi, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"queryOrders","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.queryOrders","classId":"other.service.OrderOtherService","line":41,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response queryOrdersForRefresh(QueryInfo qi, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"queryOrdersForRefresh","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.queryOrdersForRefresh","classId":"other.service.OrderOtherService","line":43,"msArgumentList":[{"returnType":"QueryInfo"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response alterOrder(OrderAlterInfo oai, HttpHeaders headers);","returnType":"Response","methodName":"alterOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.alterOrder","classId":"other.service.OrderOtherService","line":45,"msArgumentList":[{"returnType":"OrderAlterInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response queryAlreadySoldOrders(Date travelDate, String trainNumber, HttpHeaders headers);","returnType":"Response","methodName":"queryAlreadySoldOrders","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.queryAlreadySoldOrders","classId":"other.service.OrderOtherService","line":47,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"Response checkSecurityAboutOrder(Date checkDate, String accountId, HttpHeaders headers);","returnType":"Response","methodName":"checkSecurityAboutOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.checkSecurityAboutOrder","classId":"other.service.OrderOtherService","line":49,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-order-other-service/src/main/java/other/service/OrderOtherService.java","directoryName":""},"code":"void initOrder(Order order, HttpHeaders headers);","returnType":"void","methodName":"initOrder","className":"OrderOtherService","packageName":"other.service","methodId":"other.service.OrderOtherService.initOrder","classId":"other.service.OrderOtherService","line":51,"msArgumentList":[{"returnType":"Order"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/foodstores/welcome\")\n    public String home() {\n        return \"Welcome to [ Food store Service ] !\";\n    }","returnType":"String","methodName":"home","className":"FoodStoreController","packageName":"food.controller","methodId":"food.controller.FoodStoreController.home","classId":"food.controller.FoodStoreController","line":24,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/foodstores/welcome\""}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(\"/foodstores\")\n    public HttpEntity getAllFoodStores(@RequestHeader HttpHeaders headers) {\n        FoodStoreController.LOGGER.info(\"[Food Map Service][Get All FoodStores]\");\n        return ok(foodMapService.listFoodStores(headers));\n    }","returnType":"HttpEntity","methodName":"getAllFoodStores","className":"FoodStoreController","packageName":"food.controller","methodId":"food.controller.FoodStoreController.getAllFoodStores","classId":"food.controller.FoodStoreController","line":29,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(\"/foodstores/{stationId}\")\n    public HttpEntity getFoodStoresOfStation(@PathVariable String stationId, @RequestHeader HttpHeaders headers) {\n        FoodStoreController.LOGGER.info(\"[Food Map Service][Get FoodStores By StationId]\");\n        return ok(foodMapService.listFoodStoresByStationId(stationId, headers));\n    }","returnType":"HttpEntity","methodName":"getFoodStoresOfStation","className":"FoodStoreController","packageName":"food.controller","methodId":"food.controller.FoodStoreController.getFoodStoresOfStation","classId":"food.controller.FoodStoreController","line":36,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(\"/foodstores\")\n    public HttpEntity getFoodStoresByStationIds(@RequestBody List\u003cString\u003e stationIdList) {\n        return ok(foodMapService.getFoodStoresByStationIds(stationIdList));\n    }","returnType":"HttpEntity","methodName":"getFoodStoresByStationIds","className":"FoodStoreController","packageName":"food.controller","methodId":"food.controller.FoodStoreController.getFoodStoresByStationIds","classId":"food.controller.FoodStoreController","line":43,"msArgumentList":[{"returnType":"List\u003cString\u003e"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"PostMapping"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/trainfoods/welcome\")\n    public String home() {\n        return \"Welcome to [ Train Food Service ] !\";\n    }","returnType":"String","methodName":"home","className":"TrainFoodController","packageName":"food.controller","methodId":"food.controller.TrainFoodController.home","classId":"food.controller.TrainFoodController","line":22,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/trainfoods/welcome\""}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(\"/trainfoods\")\n    public HttpEntity getAllTrainFood(@RequestHeader HttpHeaders headers) {\n        TrainFoodController.LOGGER.info(\"[Food Map Service][Get All TrainFoods]\");\n        return ok(foodMapService.listTrainFood(headers));\n    }","returnType":"HttpEntity","methodName":"getAllTrainFood","className":"TrainFoodController","packageName":"food.controller","methodId":"food.controller.TrainFoodController.getAllTrainFood","classId":"food.controller.TrainFoodController","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(\"/trainfoods/{tripId}\")\n    public HttpEntity getTrainFoodOfTrip(@PathVariable String tripId, @RequestHeader HttpHeaders headers) {\n        TrainFoodController.LOGGER.info(\"[Food Map Service][Get TrainFoods By TripId]\");\n        return ok(foodMapService.listTrainFoodByTripId(tripId, headers));\n    }","returnType":"HttpEntity","methodName":"getTrainFoodOfTrip","className":"TrainFoodController","packageName":"food.controller","methodId":"food.controller.TrainFoodController.getTrainFoodOfTrip","classId":"food.controller.TrainFoodController","line":34,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java","directoryName":""},"code":"TrainFood findById(UUID id);","returnType":"TrainFood","methodName":"findById","className":"TrainFoodRepository","packageName":"food.repository","methodId":"food.repository.TrainFoodRepository.findById","classId":"food.repository.TrainFoodRepository","line":15,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java","directoryName":""},"code":"@Override\n    List\u003cTrainFood\u003e findAll();","returnType":"List\u003cTrainFood\u003e","methodName":"findAll","className":"TrainFoodRepository","packageName":"food.repository","methodId":"food.repository.TrainFoodRepository.findAll","classId":"food.repository.TrainFoodRepository","line":17,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java","directoryName":""},"code":"@Query(\"{ \u0027tripId\u0027 : ?0 }\")\n    List\u003cTrainFood\u003e findByTripId(String tripId);","returnType":"List\u003cTrainFood\u003e","methodName":"findByTripId","className":"TrainFoodRepository","packageName":"food.repository","methodId":"food.repository.TrainFoodRepository.findByTripId","classId":"food.repository.TrainFoodRepository","line":20,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"TrainFoodRepository","packageName":"food.repository","methodId":"food.repository.TrainFoodRepository.deleteById","classId":"food.repository.TrainFoodRepository","line":23,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java","directoryName":""},"code":"FoodStore findById(UUID id);","returnType":"FoodStore","methodName":"findById","className":"FoodStoreRepository","packageName":"food.repository","methodId":"food.repository.FoodStoreRepository.findById","classId":"food.repository.FoodStoreRepository","line":14,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java","directoryName":""},"code":"@Query(\"{ \u0027stationId\u0027 : ?0 }\")\n    List\u003cFoodStore\u003e findByStationId(String stationId);","returnType":"List\u003cFoodStore\u003e","methodName":"findByStationId","className":"FoodStoreRepository","packageName":"food.repository","methodId":"food.repository.FoodStoreRepository.findByStationId","classId":"food.repository.FoodStoreRepository","line":16,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Query"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java","directoryName":""},"code":"List\u003cFoodStore\u003e findByStationIdIn(List\u003cString\u003e stationIds);","returnType":"List\u003cFoodStore\u003e","methodName":"findByStationIdIn","className":"FoodStoreRepository","packageName":"food.repository","methodId":"food.repository.FoodStoreRepository.findByStationIdIn","classId":"food.repository.FoodStoreRepository","line":18,"msArgumentList":[{"returnType":"List\u003cString\u003e"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java","directoryName":""},"code":"@Override\n    List\u003cFoodStore\u003e findAll();","returnType":"List\u003cFoodStore\u003e","methodName":"findAll","className":"FoodStoreRepository","packageName":"food.repository","methodId":"food.repository.FoodStoreRepository.findAll","classId":"food.repository.FoodStoreRepository","line":21,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java","directoryName":""},"code":"void deleteById(UUID id);","returnType":"void","methodName":"deleteById","className":"FoodStoreRepository","packageName":"food.repository","methodId":"food.repository.FoodStoreRepository.deleteById","classId":"food.repository.FoodStoreRepository","line":24,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response createFoodStore(FoodStore fs, HttpHeaders headers);","returnType":"Response","methodName":"createFoodStore","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.createFoodStore","classId":"food.service.FoodMapService","line":12,"msArgumentList":[{"returnType":"FoodStore"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"TrainFood createTrainFood(TrainFood tf, HttpHeaders headers);","returnType":"TrainFood","methodName":"createTrainFood","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.createTrainFood","classId":"food.service.FoodMapService","line":14,"msArgumentList":[{"returnType":"TrainFood"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response listFoodStores(HttpHeaders headers);","returnType":"Response","methodName":"listFoodStores","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.listFoodStores","classId":"food.service.FoodMapService","line":17,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response listTrainFood(HttpHeaders headers);","returnType":"Response","methodName":"listTrainFood","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.listTrainFood","classId":"food.service.FoodMapService","line":19,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response listFoodStoresByStationId(String stationId, HttpHeaders headers);","returnType":"Response","methodName":"listFoodStoresByStationId","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.listFoodStoresByStationId","classId":"food.service.FoodMapService","line":22,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response listTrainFoodByTripId(String tripId, HttpHeaders headers);","returnType":"Response","methodName":"listTrainFoodByTripId","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.listTrainFoodByTripId","classId":"food.service.FoodMapService","line":24,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapService.java","directoryName":""},"code":"Response getFoodStoresByStationIds(List\u003cString\u003e stationIds);","returnType":"Response","methodName":"getFoodStoresByStationIds","className":"FoodMapService","packageName":"food.service","methodId":"food.service.FoodMapService.getFoodStoresByStationIds","classId":"food.service.FoodMapService","line":26,"msArgumentList":[{"returnType":"List\u003cString\u003e"}],"msAnnotations":[]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createFoodStore(FoodStore fs, HttpHeaders headers) {\n        FoodStore fsTemp \u003d foodStoreRepository.findById(fs.getId());\n        if (fsTemp !\u003d null) {\n            FoodMapServiceImpl.LOGGER.info(\"[Food Map Service][Init FoodStore] Already Exists Id: {}\", fs.getId());\n            return new Response\u003c\u003e(0, \"Already Exists Id\", null);\n        } else {\n            foodStoreRepository.save(fs);\n            return new Response\u003c\u003e(1, \"Save Success\", fs);\n        }\n    }","returnType":"Response","methodName":"createFoodStore","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.createFoodStore","classId":"food.service.FoodMapServiceImpl","line":31,"msArgumentList":[{"returnType":"FoodStore"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public TrainFood createTrainFood(TrainFood tf, HttpHeaders headers) {\n        TrainFood tfTemp \u003d trainFoodRepository.findById(tf.getId());\n        if (tfTemp !\u003d null) {\n            FoodMapServiceImpl.LOGGER.info(\"[Food Map Service][Init TrainFood] Already Exists Id: {}\", tf.getId());\n        } else {\n            trainFoodRepository.save(tf);\n        }\n        return tf;\n    }","returnType":"TrainFood","methodName":"createTrainFood","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.createTrainFood","classId":"food.service.FoodMapServiceImpl","line":43,"msArgumentList":[{"returnType":"TrainFood"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response listFoodStores(HttpHeaders headers) {\n        List\u003cFoodStore\u003e foodStores \u003d foodStoreRepository.findAll();\n        if (foodStores !\u003d null \u0026\u0026 !foodStores.isEmpty()) {\n            return new Response\u003c\u003e(1, success, foodStores);\n        } else {\n            return new Response\u003c\u003e(0, \"Foodstore is empty\", null);\n        }\n    }","returnType":"Response","methodName":"listFoodStores","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.listFoodStores","classId":"food.service.FoodMapServiceImpl","line":54,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response listTrainFood(HttpHeaders headers) {\n        List\u003cTrainFood\u003e trainFoodList \u003d trainFoodRepository.findAll();\n        if (trainFoodList !\u003d null \u0026\u0026 !trainFoodList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, trainFoodList);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"listTrainFood","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.listTrainFood","classId":"food.service.FoodMapServiceImpl","line":64,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response listFoodStoresByStationId(String stationId, HttpHeaders headers) {\n        List\u003cFoodStore\u003e foodStoreList \u003d foodStoreRepository.findByStationId(stationId);\n        if (foodStoreList !\u003d null \u0026\u0026 !foodStoreList.isEmpty()) {\n            return new Response\u003c\u003e(1, success, foodStoreList);\n        } else {\n            return new Response\u003c\u003e(0, \"FoodStore is empty\", null);\n        }\n    }","returnType":"Response","methodName":"listFoodStoresByStationId","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.listFoodStoresByStationId","classId":"food.service.FoodMapServiceImpl","line":74,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response listTrainFoodByTripId(String tripId, HttpHeaders headers) {\n        List\u003cTrainFood\u003e trainFoodList \u003d trainFoodRepository.findByTripId(tripId);\n        if (trainFoodList !\u003d null) {\n            return new Response\u003c\u003e(1, success, trainFoodList);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"listTrainFoodByTripId","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.listTrainFoodByTripId","classId":"food.service.FoodMapServiceImpl","line":84,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getFoodStoresByStationIds(List\u003cString\u003e stationIds) {\n        List\u003cFoodStore\u003e foodStoreList \u003d foodStoreRepository.findByStationIdIn(stationIds);\n        if (foodStoreList !\u003d null) {\n            return new Response\u003c\u003e(1, success, foodStoreList);\n        } else {\n            return new Response\u003c\u003e(0, noContent, null);\n        }\n    }","returnType":"Response","methodName":"getFoodStoresByStationIds","className":"FoodMapServiceImpl","packageName":"food.service","methodId":"food.service.FoodMapServiceImpl.getFoodStoresByStationIds","classId":"food.service.FoodMapServiceImpl","line":94,"msArgumentList":[{"returnType":"List\u003cString\u003e"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Consign Service ] !\";\n    }","returnType":"String","methodName":"home","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.home","classId":"consign.controller.ConsignController","line":24,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/consigns\")\n    public HttpEntity insertConsign(@RequestBody Consign request,\n                                    @RequestHeader HttpHeaders headers) {\n        return ok(service.insertConsignRecord(request, headers));\n    }","returnType":"HttpEntity","methodName":"insertConsign","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.insertConsign","classId":"consign.controller.ConsignController","line":29,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/consigns\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@PutMapping(value \u003d \"/consigns\")\n    public HttpEntity updateConsign(@RequestBody Consign request, @RequestHeader HttpHeaders headers) {\n        return ok(service.updateConsignRecord(request, headers));\n    }","returnType":"HttpEntity","methodName":"updateConsign","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.updateConsign","classId":"consign.controller.ConsignController","line":35,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/consigns\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consigns/account/{id}\")\n    public HttpEntity findByAccountId(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        UUID newid \u003d UUID.fromString(id);\n        return ok(service.queryByAccountId(newid, headers));\n    }","returnType":"HttpEntity","methodName":"findByAccountId","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.findByAccountId","classId":"consign.controller.ConsignController","line":40,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consigns/account/{id}\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consigns/order/{id}\")\n    public HttpEntity findByOrderId(@PathVariable String id, @RequestHeader HttpHeaders headers) {\n        UUID newid \u003d UUID.fromString(id);\n        return ok(service.queryByOrderId(newid, headers));\n    }","returnType":"HttpEntity","methodName":"findByOrderId","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.findByOrderId","classId":"consign.controller.ConsignController","line":46,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consigns/order/{id}\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/controller/ConsignController.java","directoryName":""},"code":"@GetMapping(value \u003d \"/consigns/{consignee}\")\n    public HttpEntity findByConsignee(@PathVariable String consignee, @RequestHeader HttpHeaders headers) {\n        return ok(service.queryByConsignee(consignee, headers));\n    }","returnType":"HttpEntity","methodName":"findByConsignee","className":"ConsignController","packageName":"consign.controller","methodId":"consign.controller.ConsignController.findByConsignee","classId":"consign.controller.ConsignController","line":52,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/consigns/{consignee}\""}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java","directoryName":""},"code":"ArrayList\u003cConsignRecord\u003e findByAccountId(UUID accountId);","returnType":"ArrayList\u003cConsignRecord\u003e","methodName":"findByAccountId","className":"ConsignRepository","packageName":"consign.repository","methodId":"consign.repository.ConsignRepository.findByAccountId","classId":"consign.repository.ConsignRepository","line":22,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java","directoryName":""},"code":"ConsignRecord findByOrderId(UUID accountId);","returnType":"ConsignRecord","methodName":"findByOrderId","className":"ConsignRepository","packageName":"consign.repository","methodId":"consign.repository.ConsignRepository.findByOrderId","classId":"consign.repository.ConsignRepository","line":30,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java","directoryName":""},"code":"ArrayList\u003cConsignRecord\u003e findByConsignee(String consignee);","returnType":"ArrayList\u003cConsignRecord\u003e","methodName":"findByConsignee","className":"ConsignRepository","packageName":"consign.repository","methodId":"consign.repository.ConsignRepository.findByConsignee","classId":"consign.repository.ConsignRepository","line":38,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java","directoryName":""},"code":"ConsignRecord findById(UUID id);","returnType":"ConsignRecord","methodName":"findById","className":"ConsignRepository","packageName":"consign.repository","methodId":"consign.repository.ConsignRepository.findById","classId":"consign.repository.ConsignRepository","line":46,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java","directoryName":""},"code":"@Override\n    public Response insertConsignRecord(Consign consignRequest, HttpHeaders headers) {\n        ConsignServiceImpl.LOGGER.info(\"[Consign servie] [ Insert new consign record] {}\", consignRequest.getOrderId());\n\n        ConsignRecord consignRecord \u003d new ConsignRecord();\n        //Set the record attribute\n        consignRecord.setId(UUID.randomUUID());\n        LOGGER.info(\"Order ID is :\" + consignRequest.getOrderId());\n        consignRecord.setOrderId(consignRequest.getOrderId());\n        consignRecord.setAccountId(consignRequest.getAccountId());\n        ConsignServiceImpl.LOGGER.info(\"The handle date is {}\", consignRequest.getHandleDate());\n        ConsignServiceImpl.LOGGER.info(\"The target date is {}\", consignRequest.getTargetDate());\n        consignRecord.setHandleDate(consignRequest.getHandleDate());\n        consignRecord.setTargetDate(consignRequest.getTargetDate());\n        consignRecord.setFrom(consignRequest.getFrom());\n        consignRecord.setTo(consignRequest.getTo());\n        consignRecord.setConsignee(consignRequest.getConsignee());\n        consignRecord.setPhone(consignRequest.getPhone());\n        consignRecord.setWeight(consignRequest.getWeight());\n\n        //get the price\n        HttpEntity requestEntity \u003d new HttpEntity(null, headers);\n        ResponseEntity\u003cResponse\u003cDouble\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(),\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cDouble\u003e\u003e() {\n                });\n        consignRecord.setPrice(re.getBody().getData());\n\n        LOGGER.info(\"SAVE consign info : \" + consignRecord.toString());\n        ConsignRecord result \u003d repository.save(consignRecord);\n        LOGGER.info(\"SAVE consign result : \" + result.toString());\n        return new Response\u003c\u003e(1, \"You have consigned successfully! The price is \" + result.getPrice(), result);\n    }","returnType":"Response","methodName":"insertConsignRecord","className":"ConsignServiceImpl","packageName":"consign.service","methodId":"consign.service.ConsignServiceImpl.insertConsignRecord","classId":"consign.service.ConsignServiceImpl","line":34,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateConsignRecord(Consign consignRequest, HttpHeaders headers) {\n        ConsignServiceImpl.LOGGER.info(\"[Consign servie] [ Update consign record]\");\n\n        ConsignRecord originalRecord \u003d repository.findById(consignRequest.getId());\n        if (originalRecord \u003d\u003d null) {\n            return this.insertConsignRecord(consignRequest, headers);\n        }\n        originalRecord.setAccountId(consignRequest.getAccountId());\n        originalRecord.setHandleDate(consignRequest.getHandleDate());\n        originalRecord.setTargetDate(consignRequest.getTargetDate());\n        originalRecord.setFrom(consignRequest.getFrom());\n        originalRecord.setTo(consignRequest.getTo());\n        originalRecord.setConsignee(consignRequest.getConsignee());\n        originalRecord.setPhone(consignRequest.getPhone());\n        //Recalculate price\n        if (originalRecord.getWeight() !\u003d consignRequest.getWeight()) {\n            HttpEntity requestEntity \u003d new HttpEntity\u003c\u003e(null, headers);\n            ResponseEntity\u003cResponse\u003cDouble\u003e\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(),\n                    HttpMethod.GET,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cDouble\u003e\u003e() {\n                    });\n\n            originalRecord.setPrice(re.getBody().getData());\n        } else {\n            originalRecord.setPrice(originalRecord.getPrice());\n        }\n        originalRecord.setConsignee(consignRequest.getConsignee());\n        originalRecord.setPhone(consignRequest.getPhone());\n        originalRecord.setWeight(consignRequest.getWeight());\n        repository.save(originalRecord);\n        return new Response\u003c\u003e(1, \"Update consign success\", originalRecord);\n    }","returnType":"Response","methodName":"updateConsignRecord","className":"ConsignServiceImpl","packageName":"consign.service","methodId":"consign.service.ConsignServiceImpl.updateConsignRecord","classId":"consign.service.ConsignServiceImpl","line":70,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryByAccountId(UUID accountId, HttpHeaders headers) {\n        List\u003cConsignRecord\u003e consignRecords \u003d repository.findByAccountId(accountId);\n        if (consignRecords !\u003d null \u0026\u0026 !consignRecords.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Find consign by account id success\", consignRecords);\n        }else {\n            return new Response\u003c\u003e(0, \"No Content according to accountId\", null);\n        }\n    }","returnType":"Response","methodName":"queryByAccountId","className":"ConsignServiceImpl","packageName":"consign.service","methodId":"consign.service.ConsignServiceImpl.queryByAccountId","classId":"consign.service.ConsignServiceImpl","line":106,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryByOrderId(UUID orderId, HttpHeaders headers) {\n        ConsignRecord consignRecords \u003d repository.findByOrderId(orderId);\n        if (consignRecords !\u003d null ) {\n            return new Response\u003c\u003e(1, \"Find consign by order id success\", consignRecords);\n        }else {\n            return new Response\u003c\u003e(0, \"No Content according to order id\", null);\n        }\n    }","returnType":"Response","methodName":"queryByOrderId","className":"ConsignServiceImpl","packageName":"consign.service","methodId":"consign.service.ConsignServiceImpl.queryByOrderId","classId":"consign.service.ConsignServiceImpl","line":116,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryByConsignee(String consignee, HttpHeaders headers) {\n        List\u003cConsignRecord\u003e consignRecords \u003d repository.findByConsignee(consignee);\n        if (consignRecords !\u003d null \u0026\u0026 !consignRecords.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Find consign by consignee success\", consignRecords);\n        }else {\n            return new Response\u003c\u003e(0, \"No Content according to consignee\", null);\n        }\n    }","returnType":"Response","methodName":"queryByConsignee","className":"ConsignServiceImpl","packageName":"consign.service","methodId":"consign.service.ConsignServiceImpl.queryByConsignee","classId":"consign.service.ConsignServiceImpl","line":126,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignService.java","directoryName":""},"code":"Response insertConsignRecord(Consign consignRequest, HttpHeaders headers);","returnType":"Response","methodName":"insertConsignRecord","className":"ConsignService","packageName":"consign.service","methodId":"consign.service.ConsignService.insertConsignRecord","classId":"consign.service.ConsignService","line":22,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignService.java","directoryName":""},"code":"Response updateConsignRecord(Consign consignRequest, HttpHeaders headers);","returnType":"Response","methodName":"updateConsignRecord","className":"ConsignService","packageName":"consign.service","methodId":"consign.service.ConsignService.updateConsignRecord","classId":"consign.service.ConsignService","line":31,"msArgumentList":[{"returnType":"Consign"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignService.java","directoryName":""},"code":"Response queryByAccountId(UUID accountId, HttpHeaders headers);","returnType":"Response","methodName":"queryByAccountId","className":"ConsignService","packageName":"consign.service","methodId":"consign.service.ConsignService.queryByAccountId","classId":"consign.service.ConsignService","line":40,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignService.java","directoryName":""},"code":"Response queryByOrderId(UUID orderId, HttpHeaders headers);","returnType":"Response","methodName":"queryByOrderId","className":"ConsignService","packageName":"consign.service","methodId":"consign.service.ConsignService.queryByOrderId","classId":"consign.service.ConsignService","line":49,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-consign-service/src/main/java/consign/service/ConsignService.java","directoryName":""},"code":"Response queryByConsignee(String consignee, HttpHeaders headers);","returnType":"Response","methodName":"queryByConsignee","className":"ConsignService","packageName":"consign.service","methodId":"consign.service.ConsignService.queryByConsignee","classId":"consign.service.ConsignService","line":58,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/AuthController.java","directoryName":""},"code":"@GetMapping(\"/hello\")\n    public String getHello() {\n        return \"hello\";\n    }","returnType":"String","methodName":"getHello","className":"AuthController","packageName":"auth.controller","methodId":"auth.controller.AuthController.getHello","classId":"auth.controller.AuthController","line":28,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/AuthController.java","directoryName":""},"code":"@PostMapping\n    public HttpEntity\u003cResponse\u003e createDefaultUser(@RequestBody AuthDto authDto) {\n        userService.createDefaultAuthUser(authDto);\n        Response response \u003d new Response(1, \"SUCCESS\", authDto);\n        return new ResponseEntity\u003c\u003e(response, HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003cResponse\u003e","methodName":"createDefaultUser","className":"AuthController","packageName":"auth.controller","methodId":"auth.controller.AuthController.createDefaultUser","classId":"auth.controller.AuthController","line":33,"msArgumentList":[{"returnType":"AuthDto"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PostMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/UserController.java","directoryName":""},"code":"@GetMapping(\"/hello\")\n    public Object getHello() {\n        return \"Hello\";\n    }","returnType":"Object","methodName":"getHello","className":"UserController","packageName":"auth.controller","methodId":"auth.controller.UserController.getHello","classId":"auth.controller.UserController","line":31,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/UserController.java","directoryName":""},"code":"@PostMapping(\"/login\")\n    public ResponseEntity\u003cResponse\u003e getToken(@RequestBody BasicAuthDto dao , @RequestHeader HttpHeaders headers) {\n        return ResponseEntity.ok(tokenService.getToken(dao, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"getToken","className":"UserController","packageName":"auth.controller","methodId":"auth.controller.UserController.getToken","classId":"auth.controller.UserController","line":36,"msArgumentList":[{"returnType":"BasicAuthDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PostMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/UserController.java","directoryName":""},"code":"@GetMapping\n    public ResponseEntity\u003cList\u003cUser\u003e\u003e getAllUser(@RequestHeader HttpHeaders headers) {\n        return ResponseEntity.ok().body(userService.getAllUser(headers));\n    }","returnType":"ResponseEntity\u003cList\u003cUser\u003e\u003e","methodName":"getAllUser","className":"UserController","packageName":"auth.controller","methodId":"auth.controller.UserController.getAllUser","classId":"auth.controller.UserController","line":41,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/controller/UserController.java","directoryName":""},"code":"@DeleteMapping(\"/{userId}\")\n    public ResponseEntity\u003cResponse\u003e deleteUserById(@PathVariable String userId, @RequestHeader HttpHeaders headers) {\n        return ResponseEntity.ok(userService.deleteByUserId(UUID.fromString(userId), headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"deleteUserById","className":"UserController","packageName":"auth.controller","methodId":"auth.controller.UserController.deleteUserById","classId":"auth.controller.UserController","line":46,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"DeleteMapping"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/security/UserDetailsServiceImpl.java","directoryName":""},"code":"@Override\n    public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException {\n        LOGGER.info(\"UsernamePasswordAuthenticationToken  username :\" + s);\n        return userRepository.findByUsername(s)\n                .orElseThrow(() -\u003e new UsernameNotFoundException(\n                        MessageFormat.format(InfoConstant.USER_NAME_NOT_FOUND_1, s)\n                ));\n    }","returnType":"UserDetails","methodName":"loadUserByUsername","className":"UserDetailsServiceImpl","packageName":"auth.security","methodId":"auth.security.UserDetailsServiceImpl.loadUserByUsername","classId":"auth.security.UserDetailsServiceImpl","line":26,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/repository/UserRepository.java","directoryName":""},"code":"Optional\u003cUser\u003e findByUsername(String username);","returnType":"Optional\u003cUser\u003e","methodName":"findByUsername","className":"UserRepository","packageName":"auth.repository","methodId":"auth.repository.UserRepository.findByUsername","classId":"auth.repository.UserRepository","line":20,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/repository/UserRepository.java","directoryName":""},"code":"void deleteByUserId(UUID userId);","returnType":"void","methodName":"deleteByUserId","className":"UserRepository","packageName":"auth.repository","methodId":"auth.repository.UserRepository.deleteByUserId","classId":"auth.repository.UserRepository","line":28,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public User saveUser(User user) {\n        return null;\n    }","returnType":"User","methodName":"saveUser","className":"UserServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.UserServiceImpl.saveUser","classId":"auth.service.impl.UserServiceImpl","line":34,"msArgumentList":[{"returnType":"User"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public List\u003cUser\u003e getAllUser(HttpHeaders headers) {\n        return userRepository.findAll();\n    }","returnType":"List\u003cUser\u003e","methodName":"getAllUser","className":"UserServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.UserServiceImpl.getAllUser","classId":"auth.service.impl.UserServiceImpl","line":39,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public User createDefaultAuthUser(AuthDto dto) {\n        LOGGER.info(\"Register User Info is:  \" + dto.getUserName());\n        User user \u003d User.builder()\n                .userId(UUID.fromString(dto.getUserId()))\n                .username(dto.getUserName())\n                .password(passwordEncoder.encode(dto.getPassword()))\n                .roles(new HashSet\u003c\u003e(Arrays.asList(AuthConstant.ROLE_USER)))\n                .build();\n\n        checkUserCreateInfo(user);\n        return userRepository.save(user);\n    }","returnType":"User","methodName":"createDefaultAuthUser","className":"UserServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.UserServiceImpl.createDefaultAuthUser","classId":"auth.service.impl.UserServiceImpl","line":50,"msArgumentList":[{"returnType":"AuthDto"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteByUserId(UUID userId, HttpHeaders headers) {\n        LOGGER.info(\"DELETE USER :\" + userId);\n        userRepository.deleteByUserId(userId);\n        return new Response(1, \"DELETE USER SUCCESS\", null);\n    }","returnType":"Response","methodName":"deleteByUserId","className":"UserServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.UserServiceImpl.deleteByUserId","classId":"auth.service.impl.UserServiceImpl","line":64,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java","directoryName":""},"code":"private void checkUserCreateInfo(User user) {\n        List\u003cString\u003e infos \u003d new ArrayList\u003c\u003e();\n\n        if (null \u003d\u003d user.getUsername() || \"\".equals(user.getUsername())) {\n            infos.add(MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.USERNAME));\n        }\n\n        int passwordMaxLength \u003d 6;\n        if (null \u003d\u003d user.getPassword()) {\n            infos.add(MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.PASSWORD));\n        } else if (user.getPassword().length() \u003c passwordMaxLength) {\n            infos.add(MessageFormat.format(InfoConstant.PASSWORD_LEAST_CHAR_1, 6));\n        }\n\n        if (null \u003d\u003d user.getRoles() || user.getRoles().isEmpty()) {\n            infos.add(MessageFormat.format(InfoConstant.PROPERTIES_CANNOT_BE_EMPTY_1, InfoConstant.ROLES));\n        }\n\n        if (!infos.isEmpty()) {\n            LOGGER.error(infos.toString());\n            throw new UserOperationException(infos.toString());\n        }\n    }","returnType":"void","methodName":"checkUserCreateInfo","className":"UserServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.UserServiceImpl.checkUserCreateInfo","classId":"auth.service.impl.UserServiceImpl","line":77,"msArgumentList":[{"returnType":"User"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getToken(BasicAuthDto dto, HttpHeaders headers) {\n        String username \u003d dto.getUsername();\n        String password \u003d dto.getPassword();\n        String verifyCode \u003d dto.getVerificationCode();\n        LOGGER.info(\"LOGIN USER :\" + username + \" __ \" + password + \" __ \" + verifyCode);\n\n        if (!StringUtils.isEmpty(verifyCode)) {\n            HttpEntity requestEntity \u003d new HttpEntity(headers);\n            ResponseEntity\u003cBoolean\u003e re \u003d restTemplate.exchange(\n                    \"http://ts-verification-code-service:15678/api/v1/verifycode/verify/\" + verifyCode,\n                    HttpMethod.GET,\n                    requestEntity,\n                    Boolean.class);\n            boolean id \u003d re.getBody();\n\n            // failed code\n            if (!id) {\n                return new Response\u003c\u003e(0, \"Verification failed.\", null);\n            }\n        }\n\n        // verify username and password\n        UsernamePasswordAuthenticationToken upat \u003d new UsernamePasswordAuthenticationToken(username, password);\n        try {\n            authenticationManager.authenticate(upat);\n        } catch (AuthenticationException e) {\n            return new Response\u003c\u003e(0, \"Incorrect username or password.\", null);\n        }\n\n        User user \u003d userRepository.findByUsername(username)\n                .orElseThrow(() -\u003e new UserOperationException(MessageFormat.format(\n                        InfoConstant.USER_NAME_NOT_FOUND_1, username\n                )));\n        String token \u003d jwtProvider.createToken(user);\n        LOGGER.info(token + \"USER TOKEN\");\n        LOGGER.info(user.getUserId() + \"   USER ID\");\n        return new Response\u003c\u003e(1, \"login success\", new TokenDto(user.getUserId(), username, token));\n    }","returnType":"Response","methodName":"getToken","className":"TokenServiceImpl","packageName":"auth.service.impl","methodId":"auth.service.impl.TokenServiceImpl.getToken","classId":"auth.service.impl.TokenServiceImpl","line":47,"msArgumentList":[{"returnType":"BasicAuthDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/TokenService.java","directoryName":""},"code":"Response getToken(BasicAuthDto dto, HttpHeaders headers);","returnType":"Response","methodName":"getToken","className":"TokenService","packageName":"auth.service","methodId":"auth.service.TokenService.getToken","classId":"auth.service.TokenService","line":19,"msArgumentList":[{"returnType":"BasicAuthDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/UserService.java","directoryName":""},"code":"User saveUser(User user);","returnType":"User","methodName":"saveUser","className":"UserService","packageName":"auth.service","methodId":"auth.service.UserService.saveUser","classId":"auth.service.UserService","line":22,"msArgumentList":[{"returnType":"User"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/UserService.java","directoryName":""},"code":"List\u003cUser\u003e getAllUser(HttpHeaders headers);","returnType":"List\u003cUser\u003e","methodName":"getAllUser","className":"UserService","packageName":"auth.service","methodId":"auth.service.UserService.getAllUser","classId":"auth.service.UserService","line":30,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/UserService.java","directoryName":""},"code":"User createDefaultAuthUser(AuthDto dto);","returnType":"User","methodName":"createDefaultAuthUser","className":"UserService","packageName":"auth.service","methodId":"auth.service.UserService.createDefaultAuthUser","classId":"auth.service.UserService","line":38,"msArgumentList":[{"returnType":"AuthDto"}],"msAnnotations":[]},{"msId":{"path":"/ts-auth-service/src/main/java/auth/service/UserService.java","directoryName":""},"code":"Response deleteByUserId(UUID userId, HttpHeaders headers);","returnType":"Response","methodName":"deleteByUserId","className":"UserService","packageName":"auth.service","methodId":"auth.service.UserService.deleteByUserId","classId":"auth.service.UserService","line":47,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@GetMapping(\"/hello\")\n    public String testHello() {\n        return \"Hello\";\n    }","returnType":"String","methodName":"testHello","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.testHello","classId":"user.controller.UserController","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@GetMapping\n    public ResponseEntity\u003cResponse\u003e getAllUser(@RequestHeader HttpHeaders headers) {\n        return ok(userService.getAllUsers(headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"getAllUser","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.getAllUser","classId":"user.controller.UserController","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@GetMapping(\"/{userName}\")\n    public ResponseEntity\u003cResponse\u003e getUserByUserName(@PathVariable String userName, @RequestHeader HttpHeaders headers) {\n        return ok(userService.findByUserName(userName, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"getUserByUserName","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.getUserByUserName","classId":"user.controller.UserController","line":36,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@GetMapping(\"/id/{userId}\")\n    public ResponseEntity\u003cResponse\u003e getUserByUserId(@PathVariable String userId, @RequestHeader HttpHeaders headers) {\n        return ok(userService.findByUserId(userId, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"getUserByUserId","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.getUserByUserId","classId":"user.controller.UserController","line":40,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"GetMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@PostMapping(\"/register\")\n    public ResponseEntity\u003cResponse\u003e registerUser(@RequestBody UserDto userDto, @RequestHeader HttpHeaders headers) {\n        return ResponseEntity.status(HttpStatus.CREATED).body(userService.saveUser(userDto, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"registerUser","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.registerUser","classId":"user.controller.UserController","line":45,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PostMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@DeleteMapping(\"/{userId}\")\n    public ResponseEntity\u003cResponse\u003e deleteUserById(@PathVariable String userId,\n                                                   @RequestHeader HttpHeaders headers) {\n        // only admin token can delete\n        return ok(userService.deleteUser(UUID.fromString(userId), headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"deleteUserById","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.deleteUserById","classId":"user.controller.UserController","line":51,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"DeleteMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/controller/UserController.java","directoryName":""},"code":"@PutMapping\n    public ResponseEntity\u003cResponse\u003e updateUser(@RequestBody UserDto user,\n                                               @RequestHeader HttpHeaders headers) {\n        return ok(userService.updateUser(user, headers));\n    }","returnType":"ResponseEntity\u003cResponse\u003e","methodName":"updateUser","className":"UserController","packageName":"user.controller","methodId":"user.controller.UserController.updateUser","classId":"user.controller.UserController","line":58,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"PutMapping"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/repository/UserRepository.java","directoryName":""},"code":"User findByUserName(String userName);","returnType":"User","methodName":"findByUserName","className":"UserRepository","packageName":"user.repository","methodId":"user.repository.UserRepository.findByUserName","classId":"user.repository.UserRepository","line":15,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/repository/UserRepository.java","directoryName":""},"code":"User findByUserId(UUID userId);","returnType":"User","methodName":"findByUserId","className":"UserRepository","packageName":"user.repository","methodId":"user.repository.UserRepository.findByUserId","classId":"user.repository.UserRepository","line":17,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/repository/UserRepository.java","directoryName":""},"code":"void deleteByUserId(UUID userId);","returnType":"void","methodName":"deleteByUserId","className":"UserRepository","packageName":"user.repository","methodId":"user.repository.UserRepository.deleteByUserId","classId":"user.repository.UserRepository","line":19,"msArgumentList":[{"returnType":"UUID"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response saveUser(UserDto userDto, HttpHeaders headers) {\n        LOGGER.info(\"Save User Name id：\" + userDto.getUserName());\n        UUID userId \u003d userDto.getUserId();\n        if (userDto.getUserId() \u003d\u003d null) {\n            userId \u003d UUID.randomUUID();\n        }\n\n        User user \u003d User.builder()\n                .userId(userId)\n                .userName(userDto.getUserName())\n                .password(userDto.getPassword())\n                .gender(userDto.getGender())\n                .documentType(userDto.getDocumentType())\n                .documentNum(userDto.getDocumentNum())\n                .email(userDto.getEmail()).build();\n\n        // avoid same user name\n        User user1 \u003d userRepository.findByUserName(userDto.getUserName());\n        if (user1 \u003d\u003d null) {\n\n            createDefaultAuthUser(AuthDto.builder().userId(userId + \"\")\n                    .userName(user.getUserName())\n                    .password(user.getPassword()).build());\n\n            User userSaveResult \u003d userRepository.save(user);\n            LOGGER.info(\"Send authorization message to ts-auth-service....\");\n\n            return new Response\u003c\u003e(1, \"REGISTER USER SUCCESS\", userSaveResult);\n        } else {\n            return new Response\u003c\u003e(0, \"USER HAS ALREADY EXISTS\", null);\n        }\n    }","returnType":"Response","methodName":"saveUser","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.saveUser","classId":"user.service.impl.UserServiceImpl","line":34,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"private Response createDefaultAuthUser(AuthDto dto) {\n        LOGGER.info(\"CALL TO AUTH\");\n        LOGGER.info(\"AuthDto : \" + dto.toString());\n        HttpHeaders headers \u003d new HttpHeaders();\n        HttpEntity\u003cAuthDto\u003e entity \u003d new HttpEntity\u003c\u003e(dto, headers);\n        ResponseEntity\u003cResponse\u003cAuthDto\u003e\u003e res  \u003d restTemplate.exchange(\"http://ts-auth-service:12340/api/v1/auth\",\n                HttpMethod.POST,\n                entity,\n                new ParameterizedTypeReference\u003cResponse\u003cAuthDto\u003e\u003e() {\n                });\n        return res.getBody();\n    }","returnType":"Response","methodName":"createDefaultAuthUser","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.createDefaultAuthUser","classId":"user.service.impl.UserServiceImpl","line":68,"msArgumentList":[{"returnType":"AuthDto"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllUsers(HttpHeaders headers) {\n        List\u003cUser\u003e users \u003d userRepository.findAll();\n        if (users !\u003d null \u0026\u0026 !users.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Success\", users);\n        }\n        return new Response\u003c\u003e(0, \"NO User\", null);\n    }","returnType":"Response","methodName":"getAllUsers","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.getAllUsers","classId":"user.service.impl.UserServiceImpl","line":81,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findByUserName(String userName, HttpHeaders headers) {\n        User user \u003d userRepository.findByUserName(userName);\n        if (user !\u003d null) {\n            return new Response\u003c\u003e(1, \"Find User Success\", user);\n        }\n        return new Response\u003c\u003e(0, \"No User\", null);\n    }","returnType":"Response","methodName":"findByUserName","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.findByUserName","classId":"user.service.impl.UserServiceImpl","line":90,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response findByUserId(String userId, HttpHeaders headers) {\n        User user \u003d userRepository.findByUserId(UUID.fromString(userId));\n        if (user !\u003d null) {\n            return new Response\u003c\u003e(1, \"Find User Success\", user);\n        }\n        return new Response\u003c\u003e(0, \"No User\", null);\n    }","returnType":"Response","methodName":"findByUserId","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.findByUserId","classId":"user.service.impl.UserServiceImpl","line":99,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteUser(UUID userId, HttpHeaders headers) {\n        LOGGER.info(\"DELETE USER BY ID :\" + userId);\n        User user \u003d userRepository.findByUserId(userId);\n        if (user !\u003d null) {\n            // first  only admin token can delete success\n            deleteUserAuth(userId, headers);\n            // second\n            userRepository.deleteByUserId(userId);\n            LOGGER.info(\"DELETE SUCCESS\");\n            return new Response\u003c\u003e(1, \"DELETE SUCCESS\", null);\n        } else {\n            return new Response\u003c\u003e(0, \"USER NOT EXISTS\", null);\n        }\n    }","returnType":"Response","methodName":"deleteUser","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.deleteUser","classId":"user.service.impl.UserServiceImpl","line":108,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"@Override\n    public Response updateUser(UserDto userDto, HttpHeaders headers) {\n        LOGGER.info(\"UPDATE USER :\" + userDto.toString());\n        User oldUser \u003d userRepository.findByUserName(userDto.getUserName());\n        if (oldUser !\u003d null) {\n            User newUser \u003d User.builder().email(userDto.getEmail())\n                    .password(userDto.getPassword())\n                    .userId(oldUser.getUserId())\n                    .userName(userDto.getUserName())\n                    .gender(userDto.getGender())\n                    .documentNum(userDto.getDocumentNum())\n                    .documentType(userDto.getDocumentType()).build();\n            userRepository.deleteByUserId(oldUser.getUserId());\n            userRepository.save(newUser);\n            return new Response\u003c\u003e(1, \"SAVE USER SUCCESS\", newUser);\n        } else {\n            return new Response(0, \"USER NOT EXISTS\", null);\n        }\n    }","returnType":"Response","methodName":"updateUser","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.updateUser","classId":"user.service.impl.UserServiceImpl","line":124,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java","directoryName":""},"code":"public void deleteUserAuth(UUID userId, HttpHeaders headers) {\n        LOGGER.info(\"DELETE USER BY ID :\" + userId);\n\n        HttpEntity\u003cResponse\u003e httpEntity \u003d new HttpEntity\u003c\u003e(headers);\n        restTemplate.exchange(AUTH_SERVICE_URI + \"/users/\" + userId,\n                HttpMethod.DELETE,\n                httpEntity,\n                Response.class);\n        LOGGER.info(\"DELETE USER AUTH SUCCESS\");\n    }","returnType":"void","methodName":"deleteUserAuth","className":"UserServiceImpl","packageName":"user.service.impl","methodId":"user.service.impl.UserServiceImpl.deleteUserAuth","classId":"user.service.impl.UserServiceImpl","line":144,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response saveUser(UserDto user, HttpHeaders headers);","returnType":"Response","methodName":"saveUser","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.saveUser","classId":"user.service.UserService","line":13,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response getAllUsers(HttpHeaders headers);","returnType":"Response","methodName":"getAllUsers","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.getAllUsers","classId":"user.service.UserService","line":15,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response findByUserName(String userName, HttpHeaders headers);","returnType":"Response","methodName":"findByUserName","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.findByUserName","classId":"user.service.UserService","line":17,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response findByUserId(String userId, HttpHeaders headers);","returnType":"Response","methodName":"findByUserId","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.findByUserId","classId":"user.service.UserService","line":18,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response deleteUser(UUID userId, HttpHeaders headers);","returnType":"Response","methodName":"deleteUser","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.deleteUser","classId":"user.service.UserService","line":21,"msArgumentList":[{"returnType":"UUID"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-user-service/src/main/java/user/service/UserService.java","directoryName":""},"code":"Response updateUser(UserDto user, HttpHeaders headers);","returnType":"Response","methodName":"updateUser","className":"UserService","packageName":"user.service","methodId":"user.service.UserService.updateUser","classId":"user.service.UserService","line":23,"msArgumentList":[{"returnType":"UserDto"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\" )\n    public String home() {\n        return \"Welcome to [ TravelPlan Service ] !\";\n    }","returnType":"String","methodName":"home","className":"TravelPlanController","packageName":"travelplan.controller","methodId":"travelplan.controller.TravelPlanController.home","classId":"travelplan.controller.TravelPlanController","line":27,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java","directoryName":""},"code":"@PostMapping(value\u003d\"/travelPlan/transferResult\" )\n    public HttpEntity getTransferResult(@RequestBody TransferTravelInfo info, @RequestHeader HttpHeaders headers) {\n        TravelPlanController.LOGGER.info(\"[Search Transit]\");\n        return ok(travelPlanService.getTransferSearch(info, headers));\n    }","returnType":"HttpEntity","methodName":"getTransferResult","className":"TravelPlanController","packageName":"travelplan.controller","methodId":"travelplan.controller.TravelPlanController.getTransferResult","classId":"travelplan.controller.TravelPlanController","line":32,"msArgumentList":[{"returnType":"TransferTravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/travelPlan/transferResult\""}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java","directoryName":""},"code":"@PostMapping(value\u003d\"/travelPlan/cheapest\")\n    public HttpEntity getByCheapest(@RequestBody TripInfo queryInfo, @RequestHeader HttpHeaders headers) {\n        TravelPlanController.LOGGER.info(\"[Search Cheapest]\");\n        return ok(travelPlanService.getCheapest(queryInfo, headers));\n    }","returnType":"HttpEntity","methodName":"getByCheapest","className":"TravelPlanController","packageName":"travelplan.controller","methodId":"travelplan.controller.TravelPlanController.getByCheapest","classId":"travelplan.controller.TravelPlanController","line":38,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/travelPlan/cheapest\""}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java","directoryName":""},"code":"@PostMapping(value\u003d\"/travelPlan/quickest\")\n    public HttpEntity getByQuickest(@RequestBody TripInfo queryInfo, @RequestHeader HttpHeaders headers) {\n        TravelPlanController.LOGGER.info(\"[Search Quickest]\");\n        return ok(travelPlanService.getQuickest(queryInfo, headers));\n    }","returnType":"HttpEntity","methodName":"getByQuickest","className":"TravelPlanController","packageName":"travelplan.controller","methodId":"travelplan.controller.TravelPlanController.getByQuickest","classId":"travelplan.controller.TravelPlanController","line":44,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/travelPlan/quickest\""}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java","directoryName":""},"code":"@PostMapping(value\u003d\"/travelPlan/minStation\")\n    public HttpEntity getByMinStation(@RequestBody TripInfo queryInfo, @RequestHeader HttpHeaders headers) {\n        TravelPlanController.LOGGER.info(\"[Search Min Station]\");\n        return ok(travelPlanService.getMinStation(queryInfo, headers));\n    }","returnType":"HttpEntity","methodName":"getByMinStation","className":"TravelPlanController","packageName":"travelplan.controller","methodId":"travelplan.controller.TravelPlanController.getByMinStation","classId":"travelplan.controller.TravelPlanController","line":50,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/travelPlan/minStation\""}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getTransferSearch(TransferTravelInfo info, HttpHeaders headers) {\n\n        TripInfo queryInfoFirstSection \u003d new TripInfo();\n        queryInfoFirstSection.setDepartureTime(info.getTravelDate());\n        queryInfoFirstSection.setStartingPlace(info.getFromStationName());\n        queryInfoFirstSection.setEndPlace(info.getViaStationName());\n\n        List\u003cTripResponse\u003e firstSectionFromHighSpeed;\n        List\u003cTripResponse\u003e firstSectionFromNormal;\n        firstSectionFromHighSpeed \u003d tripsFromHighSpeed(queryInfoFirstSection, headers);\n        firstSectionFromNormal \u003d tripsFromNormal(queryInfoFirstSection, headers);\n\n        TripInfo queryInfoSecondSectoin \u003d new TripInfo();\n        queryInfoSecondSectoin.setDepartureTime(info.getTravelDate());\n        queryInfoSecondSectoin.setStartingPlace(info.getViaStationName());\n        queryInfoSecondSectoin.setEndPlace(info.getToStationName());\n\n        List\u003cTripResponse\u003e secondSectionFromHighSpeed;\n        List\u003cTripResponse\u003e secondSectionFromNormal;\n        secondSectionFromHighSpeed \u003d tripsFromHighSpeed(queryInfoSecondSectoin, headers);\n        secondSectionFromNormal \u003d tripsFromNormal(queryInfoSecondSectoin, headers);\n\n        List\u003cTripResponse\u003e firstSection \u003d new ArrayList\u003c\u003e();\n        firstSection.addAll(firstSectionFromHighSpeed);\n        firstSection.addAll(firstSectionFromNormal);\n\n        List\u003cTripResponse\u003e secondSection \u003d new ArrayList\u003c\u003e();\n        secondSection.addAll(secondSectionFromHighSpeed);\n        secondSection.addAll(secondSectionFromNormal);\n\n        TransferTravelResult result \u003d new TransferTravelResult();\n        result.setFirstSectionResult(firstSection);\n        result.setSecondSectionResult(secondSection);\n\n        return new Response\u003c\u003e(1, \"Success.\", result);\n    }","returnType":"Response","methodName":"getTransferSearch","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getTransferSearch","classId":"travelplan.service.TravelPlanServiceImpl","line":34,"msArgumentList":[{"returnType":"TransferTravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getCheapest(TripInfo info, HttpHeaders headers) {\n        RoutePlanInfo routePlanInfo \u003d new RoutePlanInfo();\n        routePlanInfo.setNum(5);\n        routePlanInfo.setFormStationName(info.getStartingPlace());\n        routePlanInfo.setToStationName(info.getEndPlace());\n        routePlanInfo.setTravelDate(info.getDepartureTime());\n        ArrayList\u003cRoutePlanResultUnit\u003e routePlanResultUnits \u003d getRoutePlanResultCheapest(routePlanInfo, headers);\n\n        if (!routePlanResultUnits.isEmpty()) {\n            ArrayList\u003cTravelAdvanceResultUnit\u003e lists \u003d new ArrayList\u003c\u003e();\n            for (int i \u003d 0; i \u003c routePlanResultUnits.size(); i++) {\n                RoutePlanResultUnit tempUnit \u003d routePlanResultUnits.get(i);\n                TravelAdvanceResultUnit newUnit \u003d new TravelAdvanceResultUnit();\n                newUnit.setTripId(tempUnit.getTripId());\n                newUnit.setToStationName(tempUnit.getToStationName());\n                newUnit.setTrainTypeId(tempUnit.getTrainTypeId());\n                newUnit.setFromStationName(tempUnit.getFromStationName());\n\n                List\u003cString\u003e stops \u003d transferStationIdToStationName(tempUnit.getStopStations(), headers);\n                newUnit.setStopStations(stops);\n                newUnit.setPriceForFirstClassSeat(tempUnit.getPriceForFirstClassSeat());\n                newUnit.setPriceForSecondClassSeat(tempUnit.getPriceForSecondClassSeat());\n                newUnit.setStartingTime(tempUnit.getStartingTime());\n                newUnit.setEndTime(tempUnit.getEndTime());\n                int first \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.FIRSTCLASS.getCode(), headers);\n\n                int second \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.SECONDCLASS.getCode(), headers);\n                newUnit.setNumberOfRestTicketFirstClass(first);\n                newUnit.setNumberOfRestTicketSecondClass(second);\n                lists.add(newUnit);\n            }\n\n            return new Response\u003c\u003e(1, success, lists);\n        } else {\n            return new Response\u003c\u003e(0, cannotFind, null);\n        }\n    }","returnType":"Response","methodName":"getCheapest","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getCheapest","classId":"travelplan.service.TravelPlanServiceImpl","line":72,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getQuickest(TripInfo info, HttpHeaders headers) {\n        RoutePlanInfo routePlanInfo \u003d new RoutePlanInfo();\n        routePlanInfo.setNum(5);\n        routePlanInfo.setFormStationName(info.getStartingPlace());\n        routePlanInfo.setToStationName(info.getEndPlace());\n        routePlanInfo.setTravelDate(info.getDepartureTime());\n        ArrayList\u003cRoutePlanResultUnit\u003e routePlanResultUnits \u003d getRoutePlanResultQuickest(routePlanInfo, headers);\n\n\n        if (!routePlanResultUnits.isEmpty()) {\n\n            ArrayList\u003cTravelAdvanceResultUnit\u003e lists \u003d new ArrayList\u003c\u003e();\n            for (int i \u003d 0; i \u003c routePlanResultUnits.size(); i++) {\n                RoutePlanResultUnit tempUnit \u003d routePlanResultUnits.get(i);\n                TravelAdvanceResultUnit newUnit \u003d new TravelAdvanceResultUnit();\n                newUnit.setTripId(tempUnit.getTripId());\n                newUnit.setTrainTypeId(tempUnit.getTrainTypeId());\n                newUnit.setToStationName(tempUnit.getToStationName());\n                newUnit.setFromStationName(tempUnit.getFromStationName());\n\n                List\u003cString\u003e stops \u003d transferStationIdToStationName(tempUnit.getStopStations(), headers);\n                newUnit.setStopStations(stops);\n\n                newUnit.setPriceForFirstClassSeat(tempUnit.getPriceForFirstClassSeat());\n                newUnit.setPriceForSecondClassSeat(tempUnit.getPriceForSecondClassSeat());\n                newUnit.setStartingTime(tempUnit.getStartingTime());\n                newUnit.setEndTime(tempUnit.getEndTime());\n                int first \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.FIRSTCLASS.getCode(), headers);\n\n                int second \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.SECONDCLASS.getCode(), headers);\n                newUnit.setNumberOfRestTicketFirstClass(first);\n                newUnit.setNumberOfRestTicketSecondClass(second);\n                lists.add(newUnit);\n            }\n            return new Response\u003c\u003e(1, success, lists);\n        } else {\n            return new Response\u003c\u003e(0, cannotFind, null);\n        }\n    }","returnType":"Response","methodName":"getQuickest","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getQuickest","classId":"travelplan.service.TravelPlanServiceImpl","line":113,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getMinStation(TripInfo info, HttpHeaders headers) {\n        RoutePlanInfo routePlanInfo \u003d new RoutePlanInfo();\n        routePlanInfo.setNum(5);\n        routePlanInfo.setFormStationName(info.getStartingPlace());\n        routePlanInfo.setToStationName(info.getEndPlace());\n        routePlanInfo.setTravelDate(info.getDepartureTime());\n        ArrayList\u003cRoutePlanResultUnit\u003e routePlanResultUnits \u003d getRoutePlanResultMinStation(routePlanInfo, headers);\n\n        if (!routePlanResultUnits.isEmpty()) {\n\n            ArrayList\u003cTravelAdvanceResultUnit\u003e lists \u003d new ArrayList\u003c\u003e();\n            for (int i \u003d 0; i \u003c routePlanResultUnits.size(); i++) {\n                RoutePlanResultUnit tempUnit \u003d routePlanResultUnits.get(i);\n                TravelAdvanceResultUnit newUnit \u003d new TravelAdvanceResultUnit();\n                newUnit.setTripId(tempUnit.getTripId());\n                newUnit.setTrainTypeId(tempUnit.getTrainTypeId());\n                newUnit.setFromStationName(tempUnit.getFromStationName());\n                newUnit.setToStationName(tempUnit.getToStationName());\n\n                List\u003cString\u003e stops \u003d transferStationIdToStationName(tempUnit.getStopStations(), headers);\n                newUnit.setStopStations(stops);\n\n                newUnit.setPriceForFirstClassSeat(tempUnit.getPriceForFirstClassSeat());\n                newUnit.setPriceForSecondClassSeat(tempUnit.getPriceForSecondClassSeat());\n                newUnit.setEndTime(tempUnit.getEndTime());\n                newUnit.setStartingTime(tempUnit.getStartingTime());\n\n                int first \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.FIRSTCLASS.getCode(), headers);\n\n                int second \u003d getRestTicketNumber(info.getDepartureTime(), tempUnit.getTripId(),\n                        tempUnit.getFromStationName(), tempUnit.getToStationName(), SeatClass.SECONDCLASS.getCode(), headers);\n                newUnit.setNumberOfRestTicketFirstClass(first);\n                newUnit.setNumberOfRestTicketSecondClass(second);\n                lists.add(newUnit);\n            }\n            return new Response\u003c\u003e(1, success, lists);\n        } else {\n            return new Response\u003c\u003e(0, cannotFind, null);\n        }\n    }","returnType":"Response","methodName":"getMinStation","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getMinStation","classId":"travelplan.service.TravelPlanServiceImpl","line":156,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private int getRestTicketNumber(Date travelDate, String trainNumber, String startStationName, String endStationName, int seatType, HttpHeaders headers) {\n        Seat seatRequest \u003d new Seat();\n\n        String fromId \u003d queryForStationId(startStationName, headers);\n        String toId \u003d queryForStationId(endStationName, headers);\n\n        seatRequest.setDestStation(toId);\n        seatRequest.setStartStation(fromId);\n        seatRequest.setTrainNumber(trainNumber);\n        seatRequest.setTravelDate(travelDate);\n        seatRequest.setSeatType(seatType);\n\n        TravelPlanServiceImpl.LOGGER.info(\"Seat Request is: {}\", seatRequest.toString());\n        HttpEntity requestEntity \u003d new HttpEntity(seatRequest, headers);\n        ResponseEntity\u003cResponse\u003cInteger\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-seat-service:18898/api/v1/seatservice/seats/left_tickets\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cInteger\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"int","methodName":"getRestTicketNumber","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getRestTicketNumber","classId":"travelplan.service.TravelPlanServiceImpl","line":199,"msArgumentList":[{"returnType":"Date"},{"returnType":"String"},{"returnType":"String"},{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cRoutePlanResultUnit\u003e getRoutePlanResultCheapest(RoutePlanInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-plan-service:14578/api/v1/routeplanservice/routePlan/cheapestRoute\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e() {\n                });\n        return re.getBody().getData();\n    }","returnType":"ArrayList\u003cRoutePlanResultUnit\u003e","methodName":"getRoutePlanResultCheapest","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest","classId":"travelplan.service.TravelPlanServiceImpl","line":223,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cRoutePlanResultUnit\u003e getRoutePlanResultQuickest(RoutePlanInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-plan-service:14578/api/v1/routeplanservice/routePlan/quickestRoute\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"ArrayList\u003cRoutePlanResultUnit\u003e","methodName":"getRoutePlanResultQuickest","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest","classId":"travelplan.service.TravelPlanServiceImpl","line":234,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cRoutePlanResultUnit\u003e getRoutePlanResultMinStation(RoutePlanInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-plan-service:14578/api/v1/routeplanservice/routePlan/minStopStations\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cRoutePlanResultUnit\u003e\u003e\u003e() {\n                });\n        return re.getBody().getData();\n    }","returnType":"ArrayList\u003cRoutePlanResultUnit\u003e","methodName":"getRoutePlanResultMinStation","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation","classId":"travelplan.service.TravelPlanServiceImpl","line":246,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private List\u003cTripResponse\u003e tripsFromHighSpeed(TripInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003cList\u003cTripResponse\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/trips/left\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cTripResponse\u003e\u003e\u003e() {\n                });\n        return re.getBody().getData();\n    }","returnType":"List\u003cTripResponse\u003e","methodName":"tripsFromHighSpeed","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed","classId":"travelplan.service.TravelPlanServiceImpl","line":257,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cTripResponse\u003e tripsFromNormal(TripInfo info, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-travel2-service:16346/api/v1/travel2service/trips/left\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"ArrayList\u003cTripResponse\u003e","methodName":"tripsFromNormal","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.tripsFromNormal","classId":"travelplan.service.TravelPlanServiceImpl","line":268,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.queryForStationId","classId":"travelplan.service.TravelPlanServiceImpl","line":281,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java","directoryName":""},"code":"private List\u003cString\u003e transferStationIdToStationName(ArrayList\u003cString\u003e stations, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(stations, headers);\n        ResponseEntity\u003cResponse\u003cList\u003cString\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/namelist\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cList\u003cString\u003e\u003e\u003e() {\n                });\n\n        return re.getBody().getData();\n    }","returnType":"List\u003cString\u003e","methodName":"transferStationIdToStationName","className":"TravelPlanServiceImpl","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanServiceImpl.transferStationIdToStationName","classId":"travelplan.service.TravelPlanServiceImpl","line":294,"msArgumentList":[{"returnType":"ArrayList\u003cString\u003e"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanService.java","directoryName":""},"code":"Response getTransferSearch(TransferTravelInfo info, HttpHeaders headers);","returnType":"Response","methodName":"getTransferSearch","className":"TravelPlanService","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanService.getTransferSearch","classId":"travelplan.service.TravelPlanService","line":12,"msArgumentList":[{"returnType":"TransferTravelInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanService.java","directoryName":""},"code":"Response getCheapest(TripInfo info, HttpHeaders headers);","returnType":"Response","methodName":"getCheapest","className":"TravelPlanService","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanService.getCheapest","classId":"travelplan.service.TravelPlanService","line":14,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanService.java","directoryName":""},"code":"Response getQuickest(TripInfo info, HttpHeaders headers);","returnType":"Response","methodName":"getQuickest","className":"TravelPlanService","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanService.getQuickest","classId":"travelplan.service.TravelPlanService","line":16,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanService.java","directoryName":""},"code":"Response getMinStation(TripInfo info, HttpHeaders headers);","returnType":"Response","methodName":"getMinStation","className":"TravelPlanService","packageName":"travelplan.service","methodId":"travelplan.service.TravelPlanService.getMinStation","classId":"travelplan.service.TravelPlanService","line":18,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home() {\n        return \"Welcome to [ RoutePlan Service ] !\";\n    }","returnType":"String","methodName":"home","className":"RoutePlanController","packageName":"plan.controller","methodId":"plan.controller.RoutePlanController.home","classId":"plan.controller.RoutePlanController","line":25,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/routePlan/cheapestRoute\")\n    public HttpEntity getCheapestRoutes(@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers) {\n        RoutePlanController.LOGGER.info(\"[Route Plan Service][Get Cheapest Routes] From: {} To: {} Num: {} Date: {}\", info.getFormStationName(), info.getToStationName(), + info.getNum(), info.getTravelDate());\n        return ok(routePlanService.searchCheapestResult(info, headers));\n    }","returnType":"HttpEntity","methodName":"getCheapestRoutes","className":"RoutePlanController","packageName":"plan.controller","methodId":"plan.controller.RoutePlanController.getCheapestRoutes","classId":"plan.controller.RoutePlanController","line":30,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/routePlan/cheapestRoute\""}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/routePlan/quickestRoute\")\n    public HttpEntity getQuickestRoutes(@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers) {\n        RoutePlanController.LOGGER.info(\"[Route Plan Service][Get Quickest Routes] From: {} To: {} Num: {} Date: {}\", info.getFormStationName(), info.getToStationName(), info.getNum(), info.getTravelDate());\n        return ok(routePlanService.searchQuickestResult(info, headers));\n    }","returnType":"HttpEntity","methodName":"getQuickestRoutes","className":"RoutePlanController","packageName":"plan.controller","methodId":"plan.controller.RoutePlanController.getQuickestRoutes","classId":"plan.controller.RoutePlanController","line":36,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/routePlan/quickestRoute\""}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/routePlan/minStopStations\")\n    public HttpEntity getMinStopStations(@RequestBody RoutePlanInfo info, @RequestHeader HttpHeaders headers) {\n        RoutePlanController.LOGGER.info(\"[Route Plan Service][Get Min Stop Stations] From: {} To: {} Num: {} Date: {}\", info.getFormStationName(), info.getToStationName(), info.getNum(), info.getTravelDate());\n        return ok(routePlanService.searchMinStopStations(info, headers));\n    }","returnType":"HttpEntity","methodName":"getMinStopStations","className":"RoutePlanController","packageName":"plan.controller","methodId":"plan.controller.RoutePlanController.getMinStopStations","classId":"plan.controller.RoutePlanController","line":42,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/routePlan/minStopStations\""}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanService.java","directoryName":""},"code":"Response searchCheapestResult(RoutePlanInfo info, HttpHeaders headers);","returnType":"Response","methodName":"searchCheapestResult","className":"RoutePlanService","packageName":"plan.service","methodId":"plan.service.RoutePlanService.searchCheapestResult","classId":"plan.service.RoutePlanService","line":19,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanService.java","directoryName":""},"code":"Response searchQuickestResult(RoutePlanInfo info, HttpHeaders headers);","returnType":"Response","methodName":"searchQuickestResult","className":"RoutePlanService","packageName":"plan.service","methodId":"plan.service.RoutePlanService.searchQuickestResult","classId":"plan.service.RoutePlanService","line":28,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanService.java","directoryName":""},"code":"Response searchMinStopStations(RoutePlanInfo info, HttpHeaders headers);","returnType":"Response","methodName":"searchMinStopStations","className":"RoutePlanService","packageName":"plan.service","methodId":"plan.service.RoutePlanService.searchMinStopStations","classId":"plan.service.RoutePlanService","line":37,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response searchCheapestResult(RoutePlanInfo info, HttpHeaders headers) {\n\n        //1.Violence pulls out all the results of travel-service and travle2-service\n        TripInfo queryInfo \u003d new TripInfo();\n        queryInfo.setStartingPlace(info.getFormStationName());\n        queryInfo.setEndPlace(info.getToStationName());\n        queryInfo.setDepartureTime(info.getTravelDate());\n\n        ArrayList\u003cTripResponse\u003e highSpeed \u003d getTripFromHighSpeedTravelServive(queryInfo, headers);\n        ArrayList\u003cTripResponse\u003e normalTrain \u003d getTripFromNormalTrainTravelService(queryInfo, headers);\n\n        //2.Sort by second-class seats\n        ArrayList\u003cTripResponse\u003e finalResult \u003d new ArrayList\u003c\u003e();\n        finalResult.addAll(highSpeed);\n        finalResult.addAll(normalTrain);\n\n        float minPrice;\n        int minIndex \u003d -1;\n        int size \u003d Math.min(5, finalResult.size());\n        ArrayList\u003cTripResponse\u003e returnResult \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c size; i++) {\n\n            minPrice \u003d Float.MAX_VALUE;\n            for (int j \u003d 0; j \u003c finalResult.size(); j++) {\n                TripResponse thisRes \u003d finalResult.get(j);\n                if (Float.parseFloat(thisRes.getPriceForEconomyClass()) \u003c minPrice) {\n                    minPrice \u003d Float.parseFloat(finalResult.get(j).getPriceForEconomyClass());\n                    minIndex \u003d j;\n                }\n            }\n            returnResult.add(finalResult.get(minIndex));\n            finalResult.remove(minIndex);\n        }\n\n\n        ArrayList\u003cRoutePlanResultUnit\u003e units \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c returnResult.size(); i++) {\n            TripResponse tempResponse \u003d returnResult.get(i);\n\n            RoutePlanResultUnit tempUnit \u003d new RoutePlanResultUnit();\n            tempUnit.setTripId(tempResponse.getTripId().toString());\n            tempUnit.setTrainTypeId(tempResponse.getTrainTypeId());\n            tempUnit.setFromStationName(tempResponse.getStartingStation());\n            tempUnit.setToStationName(tempResponse.getTerminalStation());\n            tempUnit.setStopStations(getStationList(tempResponse.getTripId().toString(), headers));\n            tempUnit.setPriceForSecondClassSeat(tempResponse.getPriceForEconomyClass());\n            tempUnit.setPriceForFirstClassSeat(tempResponse.getPriceForConfortClass());\n            tempUnit.setEndTime(tempResponse.getEndTime());\n            tempUnit.setStartingTime(tempResponse.getStartingTime());\n\n            units.add(tempUnit);\n        }\n\n        return new Response\u003c\u003e(1, \"Success\", units);\n    }","returnType":"Response","methodName":"searchCheapestResult","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.searchCheapestResult","classId":"plan.service.RoutePlanServiceImpl","line":29,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response searchQuickestResult(RoutePlanInfo info, HttpHeaders headers) {\n\n        //1.Violence pulls out all the results of travel-service and travle2-service\n        TripInfo queryInfo \u003d new TripInfo();\n        queryInfo.setStartingPlace(info.getFormStationName());\n        queryInfo.setEndPlace(info.getToStationName());\n        queryInfo.setDepartureTime(info.getTravelDate());\n\n        ArrayList\u003cTripResponse\u003e highSpeed \u003d getTripFromHighSpeedTravelServive(queryInfo, headers);\n        ArrayList\u003cTripResponse\u003e normalTrain \u003d getTripFromNormalTrainTravelService(queryInfo, headers);\n\n        //2.Sort by time\n        ArrayList\u003cTripResponse\u003e finalResult \u003d new ArrayList\u003c\u003e();\n\n        for (TripResponse tr : highSpeed) {\n            finalResult.add(tr);\n        }\n        for (TripResponse tr : normalTrain) {\n            finalResult.add(tr);\n        }\n\n        long minTime;\n        int minIndex \u003d -1;\n        int size \u003d Math.min(finalResult.size(), 5);\n        ArrayList\u003cTripResponse\u003e returnResult \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c size; i++) {\n\n            minTime \u003d Long.MAX_VALUE;\n            for (int j \u003d 0; j \u003c finalResult.size(); j++) {\n                TripResponse thisRes \u003d finalResult.get(j);\n                if (thisRes.getEndTime().getTime() - thisRes.getStartingTime().getTime() \u003c minTime) {\n                    minTime \u003d thisRes.getEndTime().getTime() - thisRes.getStartingTime().getTime();\n                    minIndex \u003d j;\n                }\n            }\n            returnResult.add(finalResult.get(minIndex));\n            finalResult.remove(minIndex);\n\n        }\n\n\n        ArrayList\u003cRoutePlanResultUnit\u003e units \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c returnResult.size(); i++) {\n            TripResponse tempResponse \u003d returnResult.get(i);\n\n            RoutePlanResultUnit tempUnit \u003d new RoutePlanResultUnit();\n            tempUnit.setTripId(tempResponse.getTripId().toString());\n            tempUnit.setTrainTypeId(tempResponse.getTrainTypeId());\n            tempUnit.setFromStationName(tempResponse.getStartingStation());\n            tempUnit.setToStationName(tempResponse.getTerminalStation());\n\n            tempUnit.setStopStations(getStationList(tempResponse.getTripId().toString(), headers));\n\n            tempUnit.setPriceForSecondClassSeat(tempResponse.getPriceForEconomyClass());\n            tempUnit.setPriceForFirstClassSeat(tempResponse.getPriceForConfortClass());\n            tempUnit.setStartingTime(tempResponse.getStartingTime());\n            tempUnit.setEndTime(tempResponse.getEndTime());\n            units.add(tempUnit);\n        }\n        return new Response\u003c\u003e(1, \"Success\", units);\n    }","returnType":"Response","methodName":"searchQuickestResult","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.searchQuickestResult","classId":"plan.service.RoutePlanServiceImpl","line":86,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"@Override\n    public Response searchMinStopStations(RoutePlanInfo info, HttpHeaders headers) {\n        String fromStationId \u003d queryForStationId(info.getFormStationName(), headers);\n        String toStationId \u003d queryForStationId(info.getToStationName(), headers);\n        RoutePlanServiceImpl.LOGGER.info(\"From Id: {} To: {}\", fromStationId , toStationId);\n        //1.Get the route through the two stations\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cRoute\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + fromStationId + \"/\" + toStationId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cRoute\u003e\u003e\u003e() {\n                });\n\n\n        ArrayList\u003cRoute\u003e routeList \u003d re.getBody().getData();\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Service] Candidate Route Number: {}\", routeList.size());\n        //2.Calculate how many stops there are between the two stations\n        ArrayList\u003cInteger\u003e gapList \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c routeList.size(); i++) {\n            int indexStart \u003d routeList.get(i).getStations().indexOf(fromStationId);\n            int indexEnd \u003d routeList.get(i).getStations().indexOf(toStationId);\n            gapList.add(indexEnd - indexStart);\n        }\n        //3.Pick the routes with the fewest stops\n        ArrayList\u003cString\u003e resultRoutes \u003d new ArrayList\u003c\u003e();\n        int size \u003d Math.min(5, routeList.size());\n        for (int i \u003d 0; i \u003c size; i++) {\n            int minIndex \u003d 0;\n            int tempMinGap \u003d Integer.MAX_VALUE;\n            for (int j \u003d 0; j \u003c gapList.size(); j++) {\n                if (gapList.get(j) \u003c tempMinGap) {\n                    tempMinGap \u003d gapList.get(j);\n                    minIndex \u003d j;\n                }\n            }\n            resultRoutes.add(routeList.get(minIndex).getId());\n            routeList.remove(minIndex);\n            gapList.remove(minIndex);\n        }\n        //4.Depending on the route, go to travel-service or travel2service to get the train information\n        requestEntity \u003d new HttpEntity(resultRoutes, headers);\n        ResponseEntity\u003cResponse\u003cArrayList\u003cArrayList\u003cTrip\u003e\u003e\u003e\u003e re2 \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/trips/routes\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cArrayList\u003cTrip\u003e\u003e\u003e\u003e() {\n                });\n\n        ArrayList\u003cArrayList\u003cTrip\u003e\u003e travelTrips \u003d re2.getBody().getData();\n\n\n        re2 \u003d restTemplate.exchange(\n                \"http://ts-travel2-service:16346/api/v1/travel2service/trips/routes\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cArrayList\u003cTrip\u003e\u003e\u003e\u003e() {\n                });\n        ArrayList\u003cArrayList\u003cTrip\u003e\u003e travel2Trips \u003d re2.getBody().getData();\n\n        //Merge query results\n        ArrayList\u003cArrayList\u003cTrip\u003e\u003e finalTripResult \u003d new ArrayList\u003c\u003e();\n        for (int i \u003d 0; i \u003c travel2Trips.size(); i++) {\n            ArrayList\u003cTrip\u003e tempList \u003d travel2Trips.get(i);\n            tempList.addAll(travelTrips.get(i));\n            finalTripResult.add(tempList);\n        }\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Service] Trips Num: {}\", finalTripResult.size());\n        //5.Then, get the price and the station information according to the train information\n        ArrayList\u003cTrip\u003e trips \u003d new ArrayList\u003c\u003e();\n        for (ArrayList\u003cTrip\u003e tempTrips : finalTripResult) {\n            trips.addAll(tempTrips);\n        }\n        ArrayList\u003cRoutePlanResultUnit\u003e tripResponses \u003d new ArrayList\u003c\u003e();\n\n        ResponseEntity\u003cResponse\u003cTripAllDetail\u003e\u003e re3;\n        for (Trip trip : trips) {\n            TripResponse tripResponse;\n            TripAllDetailInfo allDetailInfo \u003d new TripAllDetailInfo();\n            allDetailInfo.setTripId(trip.getTripId().toString());\n            allDetailInfo.setTravelDate(info.getTravelDate());\n            allDetailInfo.setFrom(info.getFormStationName());\n            allDetailInfo.setTo(info.getToStationName());\n            requestEntity \u003d new HttpEntity(allDetailInfo, headers);\n            String requestUrl \u003d \"\";\n            if (trip.getTripId().toString().charAt(0) \u003d\u003d \u0027D\u0027 || trip.getTripId().toString().charAt(0) \u003d\u003d \u0027G\u0027) {\n                requestUrl \u003d \"http://ts-travel-service:12346/api/v1/travelservice/trip_detail\";\n            } else {\n                requestUrl \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/trip_detail\";\n            }\n            re3 \u003d restTemplate.exchange(\n                    requestUrl,\n                    HttpMethod.POST,\n                    requestEntity,\n                    new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n                    });\n\n            TripAllDetail tripAllDetail \u003d re3.getBody().getData();\n            tripResponse \u003d tripAllDetail.getTripResponse();\n\n\n            RoutePlanResultUnit unit \u003d new RoutePlanResultUnit();\n            unit.setTripId(trip.getTripId().toString());\n            unit.setTrainTypeId(tripResponse.getTrainTypeId());\n            unit.setFromStationName(tripResponse.getStartingStation());\n            unit.setToStationName(tripResponse.getTerminalStation());\n            unit.setStartingTime(tripResponse.getStartingTime());\n            unit.setEndTime(tripResponse.getEndTime());\n            unit.setPriceForFirstClassSeat(tripResponse.getPriceForConfortClass());\n            unit.setPriceForSecondClassSeat(tripResponse.getPriceForEconomyClass());\n            //Go get the roadmap according to routeid\n            String routeId \u003d trip.getRouteId();\n            Route tripRoute \u003d getRouteByRouteId(routeId, headers);\n            if (tripRoute !\u003d null) {\n                unit.setStopStations(tripRoute.getStations());\n            }\n\n            tripResponses.add(unit);\n        }\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Service] Trips Response Unit Num: {}\", tripResponses.size());\n        return new Response\u003c\u003e(1, \"Success.\", tripResponses);\n    }","returnType":"Response","methodName":"searchMinStopStations","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.searchMinStopStations","classId":"plan.service.RoutePlanServiceImpl","line":149,"msArgumentList":[{"returnType":"RoutePlanInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"private String queryForStationId(String stationName, HttpHeaders headers) {\n        RoutePlanServiceImpl.LOGGER.info(\"[Preserve Service][Get Station Name]\");\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cString\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n                });\n        return re.getBody().getData();\n    }","returnType":"String","methodName":"queryForStationId","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.queryForStationId","classId":"plan.service.RoutePlanServiceImpl","line":273,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"private Route getRouteByRouteId(String routeId, HttpHeaders headers) {\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Service][Get Route By Id] Route ID：{}\", routeId);\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                });\n        Response\u003cRoute\u003e result \u003d re.getBody();\n\n        if (result.getStatus() \u003d\u003d 0) {\n            RoutePlanServiceImpl.LOGGER.info(\"[Travel Service][Get Route By Id] Fail. {}\", result.getMsg());\n            return null;\n        } else {\n            RoutePlanServiceImpl.LOGGER.info(\"[Travel Service][Get Route By Id] Success.\");\n            return result.getData();\n        }\n    }","returnType":"Route","methodName":"getRouteByRouteId","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.getRouteByRouteId","classId":"plan.service.RoutePlanServiceImpl","line":286,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cTripResponse\u003e getTripFromHighSpeedTravelServive(TripInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n\n        ResponseEntity\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-travel-service:12346/api/v1/travelservice/trips/left\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e() {\n                });\n\n        ArrayList\u003cTripResponse\u003e tripResponses \u003d re.getBody().getData();\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Get Trip][Size] {}\", tripResponses.size());\n        return tripResponses;\n    }","returnType":"ArrayList\u003cTripResponse\u003e","methodName":"getTripFromHighSpeedTravelServive","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive","classId":"plan.service.RoutePlanServiceImpl","line":306,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"private ArrayList\u003cTripResponse\u003e getTripFromNormalTrainTravelService(TripInfo info, HttpHeaders headers) {\n        HttpEntity requestEntity \u003d new HttpEntity(info, headers);\n\n        ResponseEntity\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-travel2-service:16346/api/v1/travel2service/trips/left\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cTripResponse\u003e\u003e\u003e() {\n                });\n        ArrayList\u003cTripResponse\u003e list \u003d re.getBody().getData();\n        RoutePlanServiceImpl.LOGGER.info(\"[Route Plan Get TripOther][Size] {}\", list.size());\n        return list;\n    }","returnType":"ArrayList\u003cTripResponse\u003e","methodName":"getTripFromNormalTrainTravelService","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService","classId":"plan.service.RoutePlanServiceImpl","line":321,"msArgumentList":[{"returnType":"TripInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java","directoryName":""},"code":"private List\u003cString\u003e getStationList(String tripId, HttpHeaders headers) {\n\n        String path;\n        if (tripId.charAt(0) \u003d\u003d \u0027G\u0027 || tripId.charAt(0) \u003d\u003d \u0027D\u0027) {\n            path \u003d \"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + tripId;\n        } else {\n            path \u003d \"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + tripId;\n        }\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e re \u003d restTemplate.exchange(\n                path,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                });\n        Route route \u003d re.getBody().getData();\n        return route.getStations();\n    }","returnType":"List\u003cString\u003e","methodName":"getStationList","className":"RoutePlanServiceImpl","packageName":"plan.service","methodId":"plan.service.RoutePlanServiceImpl.getStationList","classId":"plan.service.RoutePlanServiceImpl","line":335,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ AdminRoute Service ] !\";\n    }","returnType":"String","methodName":"home","className":"AdminRouteController","packageName":"adminroute.controller","methodId":"adminroute.controller.AdminRouteController.home","classId":"adminroute.controller.AdminRouteController","line":22,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(path \u003d \"/adminroute\")\n    public HttpEntity getAllRoutes(@RequestHeader HttpHeaders headers) {\n        return ok(adminRouteService.getAllRoutes(headers));\n    }","returnType":"HttpEntity","methodName":"getAllRoutes","className":"AdminRouteController","packageName":"adminroute.controller","methodId":"adminroute.controller.AdminRouteController.getAllRoutes","classId":"adminroute.controller.AdminRouteController","line":27,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/adminroute\""}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java","directoryName":""},"code":"@PostMapping(value \u003d \"/adminroute\")\n    public HttpEntity addRoute(@RequestBody RouteInfo request, @RequestHeader HttpHeaders headers) {\n        return ok(adminRouteService.createAndModifyRoute(request, headers));\n    }","returnType":"HttpEntity","methodName":"addRoute","className":"AdminRouteController","packageName":"adminroute.controller","methodId":"adminroute.controller.AdminRouteController.addRoute","classId":"adminroute.controller.AdminRouteController","line":33,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/adminroute\""}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java","directoryName":""},"code":"@DeleteMapping(value \u003d \"/adminroute/{routeId}\")\n    public HttpEntity deleteRoute(@PathVariable String routeId, @RequestHeader HttpHeaders headers) {\n        return ok(adminRouteService.deleteRoute(routeId, headers));\n    }","returnType":"HttpEntity","methodName":"deleteRoute","className":"AdminRouteController","packageName":"adminroute.controller","methodId":"adminroute.controller.AdminRouteController.deleteRoute","classId":"adminroute.controller.AdminRouteController","line":38,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/adminroute/{routeId}\""}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response getAllRoutes(HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes\",\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n\n    }","returnType":"Response","methodName":"getAllRoutes","className":"AdminRouteServiceImpl","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteServiceImpl.getAllRoutes","classId":"adminroute.service.AdminRouteServiceImpl","line":23,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response createAndModifyRoute(RouteInfo request, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(request, headers);\n        ResponseEntity\u003cResponse\u003cRoute\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response","methodName":"createAndModifyRoute","className":"AdminRouteServiceImpl","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteServiceImpl.createAndModifyRoute","classId":"adminroute.service.AdminRouteServiceImpl","line":36,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response deleteRoute(String routeId, HttpHeaders headers) {\n\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId,\n                HttpMethod.DELETE,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n\n    }","returnType":"Response","methodName":"deleteRoute","className":"AdminRouteServiceImpl","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteServiceImpl.deleteRoute","classId":"adminroute.service.AdminRouteServiceImpl","line":49,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteService.java","directoryName":""},"code":"Response getAllRoutes(HttpHeaders headers);","returnType":"Response","methodName":"getAllRoutes","className":"AdminRouteService","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteService.getAllRoutes","classId":"adminroute.service.AdminRouteService","line":18,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteService.java","directoryName":""},"code":"Response createAndModifyRoute(RouteInfo request, HttpHeaders headers);","returnType":"Response","methodName":"createAndModifyRoute","className":"AdminRouteService","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteService.createAndModifyRoute","classId":"adminroute.service.AdminRouteService","line":27,"msArgumentList":[{"returnType":"RouteInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteService.java","directoryName":""},"code":"Response deleteRoute(String routeId, HttpHeaders headers);","returnType":"Response","methodName":"deleteRoute","className":"AdminRouteService","packageName":"adminroute.service","methodId":"adminroute.service.AdminRouteService.deleteRoute","classId":"adminroute.service.AdminRouteService","line":36,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@GetMapping(path \u003d \"/welcome\")\n    public String home(@RequestHeader HttpHeaders headers) {\n        return \"Welcome to [ Config Service ] !\";\n    }","returnType":"String","methodName":"home","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.home","classId":"config.controller.ConfigController","line":26,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"path","value":"\"/welcome\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/configs\")\n    public HttpEntity queryAll(@RequestHeader HttpHeaders headers) {\n        return ok(configService.queryAll(headers));\n    }","returnType":"HttpEntity","methodName":"queryAll","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.queryAll","classId":"config.controller.ConfigController","line":31,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/configs\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/configs\")\n    public HttpEntity\u003c?\u003e createConfig(@RequestBody Config info, @RequestHeader HttpHeaders headers) {\n        return new ResponseEntity\u003c\u003e(configService.create(info, headers), HttpStatus.CREATED);\n    }","returnType":"HttpEntity\u003c?\u003e","methodName":"createConfig","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.createConfig","classId":"config.controller.ConfigController","line":37,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/configs\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PutMapping(value \u003d \"/configs\")\n    public HttpEntity updateConfig(@RequestBody Config info, @RequestHeader HttpHeaders headers) {\n        return ok(configService.update(info, headers));\n    }","returnType":"HttpEntity","methodName":"updateConfig","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.updateConfig","classId":"config.controller.ConfigController","line":43,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PutMapping","key":"value","value":"\"/configs\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @DeleteMapping(value \u003d \"/configs/{configName}\")\n    public HttpEntity deleteConfig(@PathVariable String configName, @RequestHeader HttpHeaders headers) {\n        return ok(configService.delete(configName, headers));\n    }","returnType":"HttpEntity","methodName":"deleteConfig","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.deleteConfig","classId":"config.controller.ConfigController","line":50,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"DeleteMapping","key":"value","value":"\"/configs/{configName}\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/controller/ConfigController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @GetMapping(value \u003d \"/configs/{configName}\")\n    public HttpEntity retrieve(@PathVariable String configName, @RequestHeader HttpHeaders headers) {\n        return ok(configService.query(configName, headers));\n    }","returnType":"HttpEntity","methodName":"retrieve","className":"ConfigController","packageName":"config.controller","methodId":"config.controller.ConfigController.retrieve","classId":"config.controller.ConfigController","line":56,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"GetMapping","key":"value","value":"\"/configs/{configName}\""}]},{"msId":{"path":"/ts-config-service/src/main/java/config/repository/ConfigRepository.java","directoryName":""},"code":"Config findByName(String name);","returnType":"Config","methodName":"findByName","className":"ConfigRepository","packageName":"config.repository","methodId":"config.repository.ConfigRepository.findByName","classId":"config.repository.ConfigRepository","line":19,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/repository/ConfigRepository.java","directoryName":""},"code":"@Override\n    List\u003cConfig\u003e findAll();","returnType":"List\u003cConfig\u003e","methodName":"findAll","className":"ConfigRepository","packageName":"config.repository","methodId":"config.repository.ConfigRepository.findAll","classId":"config.repository.ConfigRepository","line":26,"msArgumentList":[],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-config-service/src/main/java/config/repository/ConfigRepository.java","directoryName":""},"code":"void deleteByName(String name);","returnType":"void","methodName":"deleteByName","className":"ConfigRepository","packageName":"config.repository","methodId":"config.repository.ConfigRepository.deleteByName","classId":"config.repository.ConfigRepository","line":35,"msArgumentList":[{"returnType":"String"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigService.java","directoryName":""},"code":"Response create(Config info, HttpHeaders headers);","returnType":"Response","methodName":"create","className":"ConfigService","packageName":"config.service","methodId":"config.service.ConfigService.create","classId":"config.service.ConfigService","line":20,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigService.java","directoryName":""},"code":"Response update(Config info, HttpHeaders headers);","returnType":"Response","methodName":"update","className":"ConfigService","packageName":"config.service","methodId":"config.service.ConfigService.update","classId":"config.service.ConfigService","line":29,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigService.java","directoryName":""},"code":"Response query(String name, HttpHeaders headers);","returnType":"Response","methodName":"query","className":"ConfigService","packageName":"config.service","methodId":"config.service.ConfigService.query","classId":"config.service.ConfigService","line":38,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigService.java","directoryName":""},"code":"Response delete(String name, HttpHeaders headers);","returnType":"Response","methodName":"delete","className":"ConfigService","packageName":"config.service","methodId":"config.service.ConfigService.delete","classId":"config.service.ConfigService","line":47,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigService.java","directoryName":""},"code":"Response queryAll(HttpHeaders headers);","returnType":"Response","methodName":"queryAll","className":"ConfigService","packageName":"config.service","methodId":"config.service.ConfigService.queryAll","classId":"config.service.ConfigService","line":55,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java","directoryName":""},"code":"@Override\n    public Response create(Config info, HttpHeaders headers) {\n        if (repository.findByName(info.getName()) !\u003d null) {\n            String result \u003d config0 + info.getName() + \" already exists.\";\n            return new Response\u003c\u003e(0, result, null);\n        } else {\n            Config config \u003d new Config(info.getName(), info.getValue(), info.getDescription());\n            repository.save(config);\n            return new Response\u003c\u003e(1, \"Create success\", config);\n        }\n    }","returnType":"Response","methodName":"create","className":"ConfigServiceImpl","packageName":"config.service","methodId":"config.service.ConfigServiceImpl.create","classId":"config.service.ConfigServiceImpl","line":24,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java","directoryName":""},"code":"@Override\n    public Response update(Config info, HttpHeaders headers) {\n        if (repository.findByName(info.getName()) \u003d\u003d null) {\n            String result \u003d config0 + info.getName() + \" doesn\u0027t exist.\";\n            return new Response\u003c\u003e(0, result, null);\n        } else {\n            Config config \u003d new Config(info.getName(), info.getValue(), info.getDescription());\n            repository.save(config);\n            return new Response\u003c\u003e(1, \"Update success\", config);\n        }\n    }","returnType":"Response","methodName":"update","className":"ConfigServiceImpl","packageName":"config.service","methodId":"config.service.ConfigServiceImpl.update","classId":"config.service.ConfigServiceImpl","line":36,"msArgumentList":[{"returnType":"Config"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java","directoryName":""},"code":"@Override\n    public Response query(String name, HttpHeaders headers) {\n        Config config \u003d repository.findByName(name);\n        if (config \u003d\u003d null) {\n            return new Response\u003c\u003e(0, \"No content\", null);\n        } else {\n            return new Response\u003c\u003e(1, \"Success\", config);\n        }\n    }","returnType":"Response","methodName":"query","className":"ConfigServiceImpl","packageName":"config.service","methodId":"config.service.ConfigServiceImpl.query","classId":"config.service.ConfigServiceImpl","line":49,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java","directoryName":""},"code":"@Override\n    public Response delete(String name, HttpHeaders headers) {\n        Config config \u003d repository.findByName(name);\n        if (config \u003d\u003d null) {\n            String result \u003d config0 + name + \" doesn\u0027t exist.\";\n            return new Response\u003c\u003e(0, result, null);\n        } else {\n            repository.deleteByName(name);\n            return new Response\u003c\u003e(1, \"Delete success\", config);\n        }\n    }","returnType":"Response","methodName":"delete","className":"ConfigServiceImpl","packageName":"config.service","methodId":"config.service.ConfigServiceImpl.delete","classId":"config.service.ConfigServiceImpl","line":59,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java","directoryName":""},"code":"@Override\n    public Response queryAll(HttpHeaders headers) {\n        List\u003cConfig\u003e configList \u003d repository.findAll();\n\n        if (configList !\u003d null \u0026\u0026 !configList.isEmpty()) {\n            return new Response\u003c\u003e(1, \"Find all  config success\", configList);\n        } else {\n            return new Response\u003c\u003e(0, \"No content\", null);\n        }\n    }","returnType":"Response","methodName":"queryAll","className":"ConfigServiceImpl","packageName":"config.service","methodId":"config.service.ConfigServiceImpl.queryAll","classId":"config.service.ConfigServiceImpl","line":71,"msArgumentList":[{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteService.java","directoryName":""},"code":"Response ticketExecute(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"ticketExecute","className":"ExecuteService","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteService.ticketExecute","classId":"execute.serivce.ExecuteService","line":18,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteService.java","directoryName":""},"code":"Response ticketCollect(String orderId, HttpHeaders headers);","returnType":"Response","methodName":"ticketCollect","className":"ExecuteService","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteService.ticketCollect","classId":"execute.serivce.ExecuteService","line":27,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response ticketExecute(String orderId, HttpHeaders headers) {\n        //1.Get order information\n\n        Response\u003cOrder\u003e resultFromOrder \u003d getOrderByIdFromOrder(orderId, headers);\n        Order order;\n        if (resultFromOrder.getStatus() \u003d\u003d 1) {\n            order \u003d   resultFromOrder.getData();\n            //2.Check if the order can come in\n            if (order.getStatus() !\u003d OrderStatus.COLLECTED.getCode()) {\n                return new Response\u003c\u003e(0, orderStatusWrong, null);\n            }\n            //3.Confirm inbound, request change order information\n\n            Response resultExecute \u003d executeOrder(orderId, OrderStatus.USED.getCode(), headers);\n            if (resultExecute.getStatus() \u003d\u003d 1) {\n                return new Response\u003c\u003e(1, \"Success.\", null);\n            } else {\n                return new Response\u003c\u003e(0, resultExecute.getMsg(), null);\n            }\n        } else {\n            resultFromOrder \u003d getOrderByIdFromOrderOther(orderId, headers);\n            if (resultFromOrder.getStatus() \u003d\u003d 1) {\n                order \u003d   resultFromOrder.getData();\n                //2.Check if the order can come in\n                if (order.getStatus() !\u003d OrderStatus.COLLECTED.getCode()) {\n                    return new Response\u003c\u003e(0, orderStatusWrong, null);\n                }\n                //3.Confirm inbound, request change order information\n\n                Response resultExecute \u003d executeOrderOther(orderId, OrderStatus.USED.getCode(), headers);\n                if (resultExecute.getStatus() \u003d\u003d 1) {\n                    return new Response\u003c\u003e(1, \"Success\", null);\n                } else {\n                    return new Response\u003c\u003e(0, resultExecute.getMsg(), null);\n                }\n            } else {\n                return new Response\u003c\u003e(0, \"Order Not Found\", null);\n            }\n        }\n    }","returnType":"Response","methodName":"ticketExecute","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.ticketExecute","classId":"execute.serivce.ExecuteServiceImpl","line":29,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"@Override\n    public Response ticketCollect(String orderId, HttpHeaders headers) {\n        //1.Get order information\n\n        Response\u003cOrder\u003e resultFromOrder \u003d getOrderByIdFromOrder(orderId, headers);\n        Order order;\n        if (resultFromOrder.getStatus() \u003d\u003d 1) {\n            order \u003d  resultFromOrder.getData();\n            //2.Check if the order can come in\n            if (order.getStatus() !\u003d OrderStatus.PAID.getCode() \u0026\u0026 order.getStatus() !\u003d OrderStatus.CHANGE.getCode()) {\n                return new Response\u003c\u003e(0, orderStatusWrong, null);\n            }\n            //3.Confirm inbound, request change order information\n\n            Response resultExecute \u003d executeOrder(orderId, OrderStatus.COLLECTED.getCode(), headers);\n            if (resultExecute.getStatus() \u003d\u003d 1) {\n                return new Response\u003c\u003e(1, \"Success\", null);\n            } else {\n                return new Response\u003c\u003e(0, resultExecute.getMsg(), null);\n            }\n        } else {\n            resultFromOrder \u003d getOrderByIdFromOrderOther(orderId, headers);\n            if (resultFromOrder.getStatus() \u003d\u003d 1) {\n                order \u003d (Order) resultFromOrder.getData();\n                //2.Check if the order can come in\n                if (order.getStatus() !\u003d OrderStatus.PAID.getCode() \u0026\u0026 order.getStatus() !\u003d OrderStatus.CHANGE.getCode()) {\n                    return new Response\u003c\u003e(0, orderStatusWrong, null);\n                }\n                //3.Confirm inbound, request change order information\n                Response resultExecute \u003d executeOrderOther(orderId, OrderStatus.COLLECTED.getCode(), headers);\n                if (resultExecute.getStatus() \u003d\u003d 1) {\n                    return new Response\u003c\u003e(1, \"Success.\", null);\n                } else {\n                    return new Response\u003c\u003e(0, resultExecute.getMsg(), null);\n                }\n            } else {\n                return new Response\u003c\u003e(0, \"Order Not Found\", null);\n            }\n        }\n    }","returnType":"Response","methodName":"ticketCollect","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.ticketCollect","classId":"execute.serivce.ExecuteServiceImpl","line":71,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"private Response executeOrder(String orderId, int status, HttpHeaders headers) {\n        ExecuteServiceImpl.LOGGER.info(\"[Execute Service][Execute Order] Executing....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order/status/\" + orderId + \"/\" + status,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"executeOrder","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.executeOrder","classId":"execute.serivce.ExecuteServiceImpl","line":113,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"private Response executeOrderOther(String orderId, int status, HttpHeaders headers) {\n        ExecuteServiceImpl.LOGGER.info(\"[Execute Service][Execute Order] Executing....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/status/\" + orderId + \"/\" + status,\n                HttpMethod.GET,\n                requestEntity,\n                Response.class);\n        return re.getBody();\n    }","returnType":"Response","methodName":"executeOrderOther","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.executeOrderOther","classId":"execute.serivce.ExecuteServiceImpl","line":125,"msArgumentList":[{"returnType":"String"},{"returnType":"int"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e getOrderByIdFromOrder(String orderId, HttpHeaders headers) {\n        ExecuteServiceImpl.LOGGER.info(\"[Execute Service][Get Order] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response\u003cOrder\u003e","methodName":"getOrderByIdFromOrder","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder","classId":"execute.serivce.ExecuteServiceImpl","line":136,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]},{"msId":{"path":"/ts-execute-service/src/main/java/execute/serivce/ExecuteServiceImpl.java","directoryName":""},"code":"private Response\u003cOrder\u003e getOrderByIdFromOrderOther(String orderId, HttpHeaders headers) {\n        ExecuteServiceImpl.LOGGER.info(\"[Execute Service][Get Order] Getting....\");\n        HttpEntity requestEntity \u003d new HttpEntity(headers);\n        ResponseEntity\u003cResponse\u003cOrder\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId,\n                HttpMethod.GET,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n                });\n        return re.getBody();\n    }","returnType":"Response\u003cOrder\u003e","methodName":"getOrderByIdFromOrderOther","className":"ExecuteServiceImpl","packageName":"execute.serivce","methodId":"execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther","classId":"execute.serivce.ExecuteServiceImpl","line":148,"msArgumentList":[{"returnType":"String"},{"returnType":"HttpHeaders"}],"msAnnotations":[]}]