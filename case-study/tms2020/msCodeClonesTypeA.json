[{"id":0,"a":{"msController":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"classId":"preserveOther.controller.PreserveOtherController","packageName":"preserveOther.controller","className":"PreserveOtherController","role":"CONTROLLER","code":""},"msControllerMethod":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/preserveOther\")\n    public HttpEntity preserve(@RequestBody OrderTicketsInfo oti,\n                               @RequestHeader HttpHeaders headers) {\n        PreserveOtherController.LOGGER.info(\"[Preserve Other Service][Preserve] Account  order from {} -----\u003e {} at {}\", oti.getFrom(), oti.getTo(), oti.getDate());\n        return ok(preserveService.preserve(oti, headers));\n    }","returnType":"HttpEntity","methodName":"preserve","className":"PreserveOtherController","packageName":"preserveOther.controller","methodId":"preserveOther.controller.PreserveOtherController.preserve","classId":"preserveOther.controller.PreserveOtherController","line":31,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/preserveOther\""}]},"msServiceMethodCall":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"code":"preserveService.preserve(oti, headers)","parentPackageName":"preserveOther.controller","parentClassName":"PreserveOtherController","parentMethodName":"preserve","parentClassId":"preserveOther.controller.PreserveOtherController","lineNumber":36,"calledMethodName":"preserve","calledServiceId":"preserveService","statementDeclaration":"preserveService.preserve(oti, headers)"},"msControllerServiceField":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java","directoryName":""},"code":"@Autowired\n    private PreserveOtherService preserveService;","fieldClass":"PreserveOtherService","fieldVariable":"preserveService","parentMethod":{"parentClassName":"PreserveOtherController","parentPackageName":"preserveOther.controller"},"line":21},"msService":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"classId":"preserveOther.service.PreserveOtherServiceImpl","packageName":"preserveOther.service","className":"PreserveOtherServiceImpl","role":"SERVICE","code":""},"msServiceMethod":{"msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"@Override\n    public Response preserve(OrderTicketsInfo oti, HttpHeaders httpHeaders) {\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Verify Login] Success\");\n        //1.detect ticket scalper\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security\");\n\n        Response result \u003d checkSecurity(oti.getAccountId(), httpHeaders);\n\n        if (result.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Fail. Return soon.\");\n            return new Response\u003c\u003e(0, result.getMsg(), null);\n        }\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Complete. \");\n        //2.Querying contact information -- modification, mediated by the underlying information micro service\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 2] Find contacts\");\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 2] Contacts Id: {}\", oti.getContactsId());\n\n        Response\u003cContacts\u003e gcr \u003d getContactsById(oti.getContactsId(), httpHeaders);\n        if (gcr.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Get Contacts] Fail. {}\", gcr.getMsg());\n            return new Response\u003c\u003e(0, gcr.getMsg(), null);\n        }\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Step 2] Complete\");\n        //3.Check the info of train and the number of remaining tickets\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] Check tickets num\");\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n\n        gtdi.setFrom(oti.getFrom());\n        gtdi.setTo(oti.getTo());\n\n        gtdi.setTravelDate(oti.getDate());\n        gtdi.setTripId(oti.getTripId());\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] TripId: {}\", oti.getTripId());\n        Response\u003cTripAllDetail\u003e response \u003d getTripAllDetailInformation(gtdi, httpHeaders);\n        TripAllDetail gtdr \u003d response.getData();\n        LOGGER.info(\"TripAllDetail : \" + gtdr.toString());\n        if (response.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Search For Trip Detail Information] {}\", response.getMsg());\n            return new Response\u003c\u003e(0, response.getMsg(), null);\n        } else {\n            TripResponse tripResponse \u003d gtdr.getTripResponse();\n            LOGGER.info(\"TripResponse : \" + tripResponse.toString());\n            if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                if (tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            } else {\n                if (tripResponse.getEconomyClass() \u003d\u003d SeatClass.SECONDCLASS.getCode() \u0026\u0026 tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is Not enough] \");\n                    return new Response\u003c\u003e(0, \"Check Seat Not Enough\", null);\n                }\n            }\n        }\n        Trip trip \u003d gtdr.getTrip();\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 3] Tickets Enough\");\n        //4.send the order request and set the order information\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 4] Do Order\");\n        Contacts contacts \u003d gcr.getData();\n        Order order \u003d new Order();\n        UUID orderId \u003d UUID.randomUUID();\n        order.setId(orderId);\n        order.setTrainNumber(oti.getTripId());\n        order.setAccountId(UUID.fromString(oti.getAccountId()));\n\n        String fromStationId \u003d queryForStationId(oti.getFrom(), httpHeaders);\n        String toStationId \u003d queryForStationId(oti.getTo(), httpHeaders);\n\n        order.setFrom(fromStationId);\n        order.setTo(toStationId);\n        order.setBoughtDate(new Date());\n        order.setStatus(OrderStatus.NOTPAID.getCode());\n        order.setContactsDocumentNumber(contacts.getDocumentNumber());\n        order.setContactsName(contacts.getName());\n        order.setDocumentType(contacts.getDocumentType());\n\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(oti.getFrom());\n        query.setEndPlace(oti.getTo());\n        query.setDepartureTime(new Date());\n\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, httpHeaders);\n        ResponseEntity\u003cResponse\u003cTravelResult\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                });\n        TravelResult resultForTravel \u003d re.getBody().getData();\n\n        order.setSeatClass(oti.getSeatType());\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Order] Order Travel Date: {}\", oti.getDate().toString());\n        order.setTravelDate(oti.getDate());\n        order.setTravelTime(gtdr.getTripResponse().getStartingTime());\n\n        //Dispatch the seat\n        if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.FIRSTCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.FIRSTCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setPrice(resultForTravel.getPrices().get(\"confortClass\"));\n        } else {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.SECONDCLASS.getCode(), httpHeaders);\n            order.setSeatClass(SeatClass.SECONDCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n\n            order.setPrice(resultForTravel.getPrices().get(\"economyClass\"));\n        }\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Order Price] Price is: {}\", order.getPrice());\n\n        Response\u003cOrder\u003e cor \u003d createOrder(order, httpHeaders);\n        if (cor.getStatus() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service][Create Order Fail] Create Order Fail.  Reason: {}\", cor.getMsg());\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Other Service] [Step 4] Do Order Complete\");\n        Response returnResponse \u003d new Response\u003c\u003e(1, \"Success.\", cor.getMsg());\n        //5.Check insurance options\n        if (oti.getAssurance() \u003d\u003d 0) {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Do not need to buy assurance\");\n        } else {\n            Response\u003cAssurance\u003e addAssuranceResult \u003d addAssuranceForOrder(\n                    oti.getAssurance(), cor.getData().getId().toString(), httpHeaders);\n            if (addAssuranceResult.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Preserve Buy Assurance Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Assurance Fail.\");\n            }\n        }\n\n        //6.Increase the food order\n        if (oti.getFoodType() !\u003d 0) {\n            FoodOrder foodOrder \u003d new FoodOrder();\n            foodOrder.setOrderId(cor.getData().getId());\n            foodOrder.setFoodType(oti.getFoodType());\n            foodOrder.setFoodName(oti.getFoodName());\n            foodOrder.setPrice(oti.getFoodPrice());\n            if (oti.getFoodType() \u003d\u003d 2) {\n                foodOrder.setStationName(oti.getStationName());\n                foodOrder.setStoreName(oti.getStoreName());\n            }\n            Response afor \u003d createFoodOrder(foodOrder, httpHeaders);\n            if (afor.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Food Fail.\");\n            }\n        } else {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Do not need to buy food\");\n        }\n\n        //7.add consign\n        if (null !\u003d oti.getConsigneeName() \u0026\u0026 !\"\".equals(oti.getConsigneeName())) {\n            Consign consignRequest \u003d new Consign();\n            consignRequest.setOrderId(cor.getData().getId());\n            consignRequest.setAccountId(cor.getData().getAccountId());\n            consignRequest.setHandleDate(oti.getHandleDate());\n            consignRequest.setTargetDate(cor.getData().getTravelDate().toString());\n            consignRequest.setFrom(cor.getData().getFrom());\n            consignRequest.setTo(cor.getData().getTo());\n            consignRequest.setConsignee(oti.getConsigneeName());\n            consignRequest.setPhone(oti.getConsigneePhone());\n            consignRequest.setWeight(oti.getConsigneeWeight());\n            consignRequest.setWithin(oti.isWithin());\n            LOGGER.info(\"CONSIGN INFO : \" + consignRequest.toString());\n            Response icresult \u003d createConsign(consignRequest, httpHeaders);\n            if (icresult.getStatus() \u003d\u003d 1) {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Success\");\n            } else {\n                PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Preserve Consign Fail.\");\n                returnResponse.setMsg(\"Consign Fail.\");\n            }\n        } else {\n            PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Do not need to consign\");\n        }\n\n        //8.send notification\n        PreserveOtherServiceImpl.LOGGER.info(\"[Preserve Service]\");\n\n        User getUser \u003d getAccount(order.getAccountId().toString(), httpHeaders);\n\n        NotifyInfo notifyInfo \u003d new NotifyInfo();\n        notifyInfo.setDate(new Date().toString());\n\n        notifyInfo.setEmail(getUser.getEmail());\n        notifyInfo.setStartingPlace(order.getFrom());\n        notifyInfo.setEndPlace(order.getTo());\n        notifyInfo.setUsername(getUser.getUserName());\n        notifyInfo.setSeatNumber(order.getSeatNumber());\n        notifyInfo.setOrderNumber(order.getId().toString());\n        notifyInfo.setPrice(order.getPrice());\n        notifyInfo.setSeatClass(SeatClass.getNameByCode(order.getSeatClass()));\n        notifyInfo.setStartingTime(order.getTravelTime().toString());\n\n        sendEmail(notifyInfo, httpHeaders);\n\n        return returnResponse;\n    }","returnType":"Response","methodName":"preserve","className":"PreserveOtherServiceImpl","packageName":"preserveOther.service","methodId":"preserveOther.service.PreserveOtherServiceImpl.preserve","classId":"preserveOther.service.PreserveOtherServiceImpl","line":30,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},"msRestCalls":[{"api":"\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\"","httpMethod":"POST","returnType":"TravelResult","msId":{"path":"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java","directoryName":""},"code":"restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                })","parentPackageName":"preserveOther.service","parentClassName":"PreserveOtherServiceImpl","parentMethodName":"preserve","parentClassId":"preserveOther.service.PreserveOtherServiceImpl","lineNumber":118,"statementDeclaration":"restTemplate.exchange(\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n})"}]},"b":{"msController":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"classId":"preserve.controller.PreserveController","packageName":"preserve.controller","className":"PreserveController","role":"CONTROLLER","code":""},"msControllerMethod":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"code":"@CrossOrigin(origins \u003d \"*\")\n    @PostMapping(value \u003d \"/preserve\")\n    public HttpEntity preserve(@RequestBody OrderTicketsInfo oti,\n                               @RequestHeader HttpHeaders headers) {\n        PreserveController.LOGGER.info(\"[Preserve Service][Preserve] Account  order from {} -----\u003e {} at {}\", oti.getFrom(), oti.getTo(), oti.getDate());\n        return ok(preserveService.preserve(oti, headers));\n    }","returnType":"HttpEntity","methodName":"preserve","className":"PreserveController","packageName":"preserve.controller","methodId":"preserve.controller.PreserveController.preserve","classId":"preserve.controller.PreserveController","line":31,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":true,"annotationName":"CrossOrigin","key":"origins","value":"\"*\""},{"isHttpAnnotation":true,"annotationName":"PostMapping","key":"value","value":"\"/preserve\""}]},"msServiceMethodCall":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"code":"preserveService.preserve(oti, headers)","parentPackageName":"preserve.controller","parentClassName":"PreserveController","parentMethodName":"preserve","parentClassId":"preserve.controller.PreserveController","lineNumber":36,"calledMethodName":"preserve","calledServiceId":"preserveService","statementDeclaration":"preserveService.preserve(oti, headers)"},"msControllerServiceField":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java","directoryName":""},"code":"@Autowired\n    private PreserveService preserveService;","fieldClass":"PreserveService","fieldVariable":"preserveService","parentMethod":{"parentClassName":"PreserveController","parentPackageName":"preserve.controller"},"line":21},"msService":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"classId":"preserve.service.PreserveServiceImpl","packageName":"preserve.service","className":"PreserveServiceImpl","role":"SERVICE","code":""},"msServiceMethod":{"msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"@Override\n    public Response preserve(OrderTicketsInfo oti, HttpHeaders headers) {\n        //1.detect ticket scalper\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security\");\n\n        Response result \u003d checkSecurity(oti.getAccountId(), headers);\n        if (result.getStatus() \u003d\u003d 0) {\n            return new Response\u003c\u003e(0, result.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 1] Check Security Complete\");\n        //2.Querying contact information -- modification, mediated by the underlying information micro service\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 2] Find contacts\");\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 2] Contacts Id: {}\", oti.getContactsId());\n\n        Response\u003cContacts\u003e gcr \u003d getContactsById(oti.getContactsId(), headers);\n        if (gcr.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Get Contacts] Fail. {}\", gcr.getMsg());\n            return new Response\u003c\u003e(0, gcr.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 2] Complete\");\n        //3.Check the info of train and the number of remaining tickets\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] Check tickets num\");\n        TripAllDetailInfo gtdi \u003d new TripAllDetailInfo();\n\n        gtdi.setFrom(oti.getFrom());\n        gtdi.setTo(oti.getTo());\n\n        gtdi.setTravelDate(oti.getDate());\n        gtdi.setTripId(oti.getTripId());\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] TripId: {}\", oti.getTripId());\n        Response\u003cTripAllDetail\u003e response \u003d getTripAllDetailInformation(gtdi, headers);\n        TripAllDetail gtdr \u003d response.getData();\n        LOGGER.info(\"TripAllDetail:\" + gtdr.toString());\n        if (response.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Search For Trip Detail Information] {}\", response.getMsg());\n            return new Response\u003c\u003e(0, response.getMsg(), null);\n        } else {\n            TripResponse tripResponse \u003d gtdr.getTripResponse();\n            LOGGER.info(\"TripResponse:\" + tripResponse.toString());\n            if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n                if (tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            } else {\n                if (tripResponse.getEconomyClass() \u003d\u003d SeatClass.SECONDCLASS.getCode() \u0026\u0026 tripResponse.getConfortClass() \u003d\u003d 0) {\n                    PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Check seat is enough] \");\n                    return new Response\u003c\u003e(0, \"Seat Not Enough\", null);\n                }\n            }\n        }\n        Trip trip \u003d gtdr.getTrip();\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 3] Tickets Enough\");\n        //4.send the order request and set the order information\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 4] Do Order\");\n        Contacts contacts \u003d gcr.getData();\n        Order order \u003d new Order();\n        UUID orderId \u003d UUID.randomUUID();\n        order.setId(orderId);\n        order.setTrainNumber(oti.getTripId());\n        order.setAccountId(UUID.fromString(oti.getAccountId()));\n\n        String fromStationId \u003d queryForStationId(oti.getFrom(), headers);\n        String toStationId \u003d queryForStationId(oti.getTo(), headers);\n\n        order.setFrom(fromStationId);\n        order.setTo(toStationId);\n        order.setBoughtDate(new Date());\n        order.setStatus(OrderStatus.NOTPAID.getCode());\n        order.setContactsDocumentNumber(contacts.getDocumentNumber());\n        order.setContactsName(contacts.getName());\n        order.setDocumentType(contacts.getDocumentType());\n\n        Travel query \u003d new Travel();\n        query.setTrip(trip);\n        query.setStartingPlace(oti.getFrom());\n        query.setEndPlace(oti.getTo());\n        query.setDepartureTime(new Date());\n\n        HttpEntity requestEntity \u003d new HttpEntity(query, headers);\n        ResponseEntity\u003cResponse\u003cTravelResult\u003e\u003e re \u003d restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                });\n        TravelResult resultForTravel \u003d re.getBody().getData();\n\n        order.setSeatClass(oti.getSeatType());\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Order] Order Travel Date: {}\", oti.getDate().toString());\n        order.setTravelDate(oti.getDate());\n        order.setTravelTime(gtdr.getTripResponse().getStartingTime());\n\n        //Dispatch the seat\n        if (oti.getSeatType() \u003d\u003d SeatClass.FIRSTCLASS.getCode()) {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.FIRSTCLASS.getCode(), headers);\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setSeatClass(SeatClass.FIRSTCLASS.getCode());\n            order.setPrice(resultForTravel.getPrices().get(\"confortClass\"));\n        } else {\n            Ticket ticket \u003d\n                    dipatchSeat(oti.getDate(),\n                            order.getTrainNumber(), fromStationId, toStationId,\n                            SeatClass.SECONDCLASS.getCode(), headers);\n            order.setSeatClass(SeatClass.SECONDCLASS.getCode());\n            order.setSeatNumber(\"\" + ticket.getSeatNo());\n            order.setPrice(resultForTravel.getPrices().get(\"economyClass\"));\n        }\n\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Order Price] Price is: {}\", order.getPrice());\n\n        Response\u003cOrder\u003e cor \u003d createOrder(order, headers);\n        if (cor.getStatus() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Create Order Fail] Create Order Fail.  Reason: {}\", cor.getMsg());\n            return new Response\u003c\u003e(0, cor.getMsg(), null);\n        }\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service] [Step 4] Do Order Complete\");\n\n        Response returnResponse \u003d new Response\u003c\u003e(1, \"Success.\", cor.getMsg());\n        //5.Check insurance options\n        if (oti.getAssurance() \u003d\u003d 0) {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Do not need to buy assurance\");\n        } else {\n            Response addAssuranceResult \u003d addAssuranceForOrder(\n                    oti.getAssurance(), cor.getData().getId().toString(), headers);\n            if (addAssuranceResult.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 5] Buy Assurance Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Assurance Fail.\");\n            }\n        }\n\n        //6.Increase the food order\n        if (oti.getFoodType() !\u003d 0) {\n\n            FoodOrder foodOrder \u003d new FoodOrder();\n            foodOrder.setOrderId(cor.getData().getId());\n            foodOrder.setFoodType(oti.getFoodType());\n            foodOrder.setFoodName(oti.getFoodName());\n            foodOrder.setPrice(oti.getFoodPrice());\n\n            if (oti.getFoodType() \u003d\u003d 2) {\n                foodOrder.setStationName(oti.getStationName());\n                foodOrder.setStoreName(oti.getStoreName());\n                PreserveServiceImpl.LOGGER.info(\"[Food Service]!!!!!!!!!!!!!!!foodstore\u003d {}   {}   {}\", foodOrder.getFoodType(), foodOrder.getStationName(), foodOrder.getStoreName());\n            }\n            Response afor \u003d createFoodOrder(foodOrder, headers);\n            if (afor.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Buy Food Fail.\");\n                returnResponse.setMsg(\"Success.But Buy Food Fail.\");\n            }\n        } else {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 6] Do not need to buy food\");\n        }\n\n        //7.add consign\n        if (null !\u003d oti.getConsigneeName() \u0026\u0026 !\"\".equals(oti.getConsigneeName())) {\n\n            Consign consignRequest \u003d new Consign();\n            consignRequest.setOrderId(cor.getData().getId());\n            consignRequest.setAccountId(cor.getData().getAccountId());\n            consignRequest.setHandleDate(oti.getHandleDate());\n            consignRequest.setTargetDate(cor.getData().getTravelDate().toString());\n            consignRequest.setFrom(cor.getData().getFrom());\n            consignRequest.setTo(cor.getData().getTo());\n            consignRequest.setConsignee(oti.getConsigneeName());\n            consignRequest.setPhone(oti.getConsigneePhone());\n            consignRequest.setWeight(oti.getConsigneeWeight());\n            consignRequest.setWithin(oti.isWithin());\n            LOGGER.info(\"CONSIGN INFO : \" +consignRequest.toString());\n            Response icresult \u003d createConsign(consignRequest, headers);\n            if (icresult.getStatus() \u003d\u003d 1) {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Success\");\n            } else {\n                PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Consign Fail.\");\n                returnResponse.setMsg(\"Consign Fail.\");\n            }\n        } else {\n            PreserveServiceImpl.LOGGER.info(\"[Preserve Service][Step 7] Do not need to consign\");\n        }\n\n        //8.send notification\n        PreserveServiceImpl.LOGGER.info(\"[Preserve Service]\");\n\n        User getUser \u003d getAccount(order.getAccountId().toString(), headers);\n\n        NotifyInfo notifyInfo \u003d new NotifyInfo();\n        notifyInfo.setDate(new Date().toString());\n\n        notifyInfo.setEmail(getUser.getEmail());\n        notifyInfo.setStartingPlace(order.getFrom());\n        notifyInfo.setEndPlace(order.getTo());\n        notifyInfo.setUsername(getUser.getUserName());\n        notifyInfo.setSeatNumber(order.getSeatNumber());\n        notifyInfo.setOrderNumber(order.getId().toString());\n        notifyInfo.setPrice(order.getPrice());\n        notifyInfo.setSeatClass(SeatClass.getNameByCode(order.getSeatClass()));\n        notifyInfo.setStartingTime(order.getTravelTime().toString());\n\n        sendEmail(notifyInfo, headers);\n\n        return returnResponse;\n    }","returnType":"Response","methodName":"preserve","className":"PreserveServiceImpl","packageName":"preserve.service","methodId":"preserve.service.PreserveServiceImpl.preserve","classId":"preserve.service.PreserveServiceImpl","line":30,"msArgumentList":[{"returnType":"OrderTicketsInfo"},{"returnType":"HttpHeaders"}],"msAnnotations":[{"isHttpAnnotation":false,"annotationName":"Override"}]},"msRestCalls":[{"api":"\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\"","httpMethod":"POST","returnType":"TravelResult","msId":{"path":"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java","directoryName":""},"code":"restTemplate.exchange(\n                \"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\",\n                HttpMethod.POST,\n                requestEntity,\n                new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n                })","parentPackageName":"preserve.service","parentClassName":"PreserveServiceImpl","parentMethodName":"preserve","parentClassId":"preserve.service.PreserveServiceImpl","lineNumber":110,"statementDeclaration":"restTemplate.exchange(\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n})"}]},"similarityController":1.0,"similarityService":0.5,"similarityRepository":0.0,"similarityRestCalls":1.0,"globalSimilarity":0.925,"typeA":true,"typeB":false}]