(this["webpackJsonpprophet-web"]=this["webpackJsonpprophet-web"]||[]).push([[0],{324:function(e,n,t){e.exports=t(627)},329:function(e,n,t){},354:function(e,n){},356:function(e,n){},389:function(e,n){},390:function(e,n){},620:function(e,n,t){var r={"./locale":290,"./locale.js":290};function a(e){var n=i(e);return t(n)}function i(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id=620},627:function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),i=t(12),o=t.n(i),s=(t(329),t(306)),l=t(16),c=t(665),d=t(307),u=t(664),g=Object(d.a)({palette:{primary:{light:"#e5e5e5",main:"#727272",dark:"#363839",contrastText:"#fff"},secondary:{light:"#ff5e50",main:"#e41e26",dark:"#a90000",contrastText:"#fff"}}});var p=t(26),m=Object(d.a)({palette:{primary:{main:"#0f4395"},secondary:{light:"#0066ff",main:"#0044ff",contrastText:"#ffcc00"}}}),S=t(668),T=m,f=Object(S.a)({root:{display:"flex",flexDirection:"column",minHeight:"100vh"},menuButton:{marginRight:T.spacing(2)},main:{marginTop:T.spacing(8),marginBottom:T.spacing(2)},footer:{marginTop:"auto",backgroundColor:"light"===T.palette.type?T.palette.grey[200]:T.palette.grey[800]},content:{flexGrow:1,padding:T.spacing(8,0,6),backgroundColor:T.palette.background.default},box:{border:0,borderRadius:3,boxShadow:"0 3px 5px 2px",padding:"12px 30px"},appBar:{backgroundColor:T.palette.primary.main,zIndex:1},overlay:{position:"fixed",width:"100%",height:"100%",background:"rgba(0,0,0,0.3)",display:"flexbox",flexAlign:"center",flexPack:"center",zIndex:2},boxes_root:{flexGrow:1,margin:T.spacing(2)},boxes_paper:{padding:T.spacing(2),marginTop:T.spacing(2),marginBottom:T.spacing(2)},inconsistency_box:{margin:T.spacing(2)},entity_item:{padding:T.spacing(2)}}),I=t(669),v=t(670),y=t(629),C=function(){var e=f();return a.a.createElement(a.a.Fragment,null,a.a.createElement(c.a,null),a.a.createElement(I.a,{className:e.appBar},a.a.createElement(v.a,null,a.a.createElement(y.a,{variant:"h6",noWrap:!0},"Prophet"))))},D=t(7),h=t(311),b=t(673),O=t(675),R=t(676),N=t(674),U=t(672),k=t(671),P=function(e){var n=e.link,t=e.heading;return a.a.createElement("div",null,a.a.createElement(k.a,{href:"#",onClick:function(e){e.preventDefault();var t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({ide:"./code",idePath:"/home/jan/Development/VSCode-linux-x64/bin",filePath:"/home/jan/Development/tms2020"+n})};fetch("http://localhost:8080/open",t).then((function(e){return e.json()})).then((function(e){return console.log(e)}))}},a.a.createElement(y.a,{variant:t,gutterBottom:!0},n.split("/")[1]," - ",n.split("/")[n.split("/").length-1])))},E=t(687),A=t(177),x=Object(S.a)((function(e){return Object(E.a)({root:{width:"100%"}})})),F=function(e){var n=e.code,t=e.language,r=e.showLineNumbers,i=x();return a.a.createElement("div",{className:i.root},a.a.createElement(A.a,{text:n,language:t,showLineNumbers:r,theme:A.b}))},B=Object(S.a)((function(e){return Object(E.a)({paper:{margin:e.spacing(5,0)}})})),j=function(e){var n=e.clone,t=B();return a.a.createElement("div",null,a.a.createElement(U.a,{component:h.a,className:t.paper},a.a.createElement(b.a,{"aria-label":"simple table"},a.a.createElement(N.a,null,a.a.createElement(O.a,{key:1},a.a.createElement(R.a,{component:"th",scope:"row"},"Controller"),a.a.createElement(R.a,{align:"left"},a.a.createElement(P,{link:n.msController.msId.path,heading:"p"})," ",a.a.createElement("span",null,"(",n.msControllerMethod.line,")"))),n.msService&&a.a.createElement(O.a,{key:2},a.a.createElement(R.a,{component:"th",scope:"row"},"Service"),a.a.createElement(R.a,{align:"left"},n.msService&&a.a.createElement(P,{link:n.msService.msId.path,heading:"p"})))))),n.msControllerMethod&&n.msControllerMethod.code&&a.a.createElement("div",null,a.a.createElement(F,{code:n.msControllerMethod.code,language:"java",showLineNumbers:!1})),a.a.createElement(U.a,{component:h.a,className:t.paper},a.a.createElement(b.a,{"aria-label":"properties table"},a.a.createElement(N.a,null,a.a.createElement(O.a,{key:99},a.a.createElement(R.a,{component:"th",scope:"row"},a.a.createElement("b",null,"Controller")),a.a.createElement(R.a,{align:"left"})),a.a.createElement(O.a,{key:100},a.a.createElement(R.a,{component:"th",scope:"row"},"Return Type"),a.a.createElement(R.a,{align:"left"},n.msControllerMethod.returnType)),a.a.createElement(O.a,{key:101},a.a.createElement(R.a,{component:"th",scope:"row"},"Class Name"),a.a.createElement(R.a,{align:"left"},n.msController.className)),a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Method Name"),a.a.createElement(R.a,{align:"left"},n.msControllerMethod.methodName)),n.msControllerMethod.msArgumentList.map((function(e){return a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Argument"),a.a.createElement(R.a,{align:"left"},e.returnType))})),n.msControllerMethod.msAnnotations.map((function(e){return a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Annotation"),a.a.createElement(R.a,{align:"left"},"@",e.annotationName,"(",e.key,"=",e.value,")"))}))))),n.msServiceMethod&&a.a.createElement(U.a,{component:h.a},a.a.createElement(b.a,{"aria-label":"properties table"},a.a.createElement(N.a,null,a.a.createElement(O.a,{key:99},a.a.createElement(R.a,{component:"th",scope:"row"},a.a.createElement("b",null,"Service")),a.a.createElement(R.a,{align:"left"})),a.a.createElement(O.a,{key:100},a.a.createElement(R.a,{component:"th",scope:"row"},"Return Type"),a.a.createElement(R.a,{align:"left"},n.msServiceMethod&&n.msServiceMethod.returnType)),a.a.createElement(O.a,{key:101},a.a.createElement(R.a,{component:"th",scope:"row"},"Class Name"),a.a.createElement(R.a,{align:"left"},n.msServiceMethod&&n.msService.className)),a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Method Name"),a.a.createElement(R.a,{align:"left"},n.msServiceMethod&&n.msServiceMethod.methodName)),n.msServiceMethod&&n.msServiceMethod.msArgumentList.map((function(e){return a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Argument"),a.a.createElement(R.a,{align:"left"},e.returnType))})),n.msServiceMethod&&n.msServiceMethod.msAnnotations.map((function(e){var n=!!e.key;return a.a.createElement(O.a,{key:102},a.a.createElement(R.a,{component:"th",scope:"row"},"Annotation"),n&&a.a.createElement(R.a,{align:"left"},"@",e.annotationName,"(",e.key,"=",e.value,")"),!n&&a.a.createElement(R.a,{align:"left"},"@",e.annotationName))}))))))},M=function(e){return a.a.createElement("div",null,a.a.createElement(j,{clone:e.clone}))},w=t(685),L=t(677),G=function(e){return a.a.createElement("div",null,a.a.createElement(y.a,{variant:"subtitle1",gutterBottom:!0}),e.typeA,e.typeB,a.a.createElement(U.a,{component:h.a},a.a.createElement(b.a,{"aria-label":"simple table"},a.a.createElement(L.a,null,a.a.createElement(O.a,null,a.a.createElement(R.a,null,a.a.createElement(w.a,{fontWeight:"fontWeightBold",m:0},"Similarity")),a.a.createElement(R.a,{align:"left"},a.a.createElement(w.a,{fontWeight:"fontWeightBold",m:0},"Percentage")))),a.a.createElement(N.a,null,a.a.createElement(O.a,{key:1},a.a.createElement(R.a,{component:"th",scope:"row"},"Controller"),a.a.createElement(R.a,{align:"left"},100*e.similarityController," %")),a.a.createElement(O.a,{key:2},a.a.createElement(R.a,{component:"th",scope:"row"},"Service"),a.a.createElement(R.a,{align:"left"},100*e.similarityService," %")),a.a.createElement(O.a,{key:3},a.a.createElement(R.a,{component:"th",scope:"row"},"Rest Calls"),a.a.createElement(R.a,{align:"left"},100*e.similarityRestCalls," %")),a.a.createElement(O.a,{key:4},a.a.createElement(R.a,{component:"th",scope:"row"},"Rest Calls"),a.a.createElement(R.a,{align:"left"},100*e.similarityRestCalls," %")),a.a.createElement(O.a,{key:5},a.a.createElement(R.a,{component:"th",scope:"row"},a.a.createElement(w.a,{fontWeight:"fontWeightBold",m:0},"Global Similarity")),a.a.createElement(R.a,{align:"left"},a.a.createElement(w.a,{fontWeight:"fontWeightBold",m:0},100*e.globalSimilarity," %")))))))},J=t(678),Q=t(681),H=t(680),V=t(299),W=t.n(V),q=t(686),z=t(688),_=t(679),$=Object(S.a)((function(e){return Object(E.a)({root:{flexGrow:1},paper:{padding:e.spacing(2)}})})),K=function(e){var n=$(),t=a.a.useState(!0),r=Object(D.a)(t,2),i=r[0],o=r[1];return a.a.createElement("div",null,i?a.a.createElement(J.a,null,a.a.createElement("div",{className:n.root},a.a.createElement(h.a,{className:n.paper},a.a.createElement(q.a,{expanded:!0},a.a.createElement(z.a,{expandIcon:a.a.createElement(W.a,null),"aria-controls":"panel1a-content",id:"panel1a-header"},a.a.createElement(y.a,null,a.a.createElement("b",null,e.clonePair.typeA&&"A")," ",a.a.createElement("b",null,e.clonePair.typeB&&"B")," ",a.a.createElement("b",null,e.clonePair.id)," ",e.clonePair.a.msController.packageName,".",e.clonePair.a.msController.className," -> ",e.clonePair.b.msController.packageName,".",e.clonePair.b.msController.className)),a.a.createElement(_.a,null,a.a.createElement(H.a,{container:!0,spacing:3},a.a.createElement(H.a,{item:!0,xs:4},a.a.createElement(G,{similarityController:e.clonePair.similarityController,similarityService:e.clonePair.similarityService,similarityRepository:e.clonePair.similarityRepository,similarityRestCalls:e.clonePair.similarityRestCalls,globalSimilarity:e.clonePair.globalSimilarity,typeA:e.clonePair.typeA,typeB:e.clonePair.typeB})),a.a.createElement(H.a,{item:!0,xs:8},a.a.createElement(H.a,{container:!0,justify:"flex-end"},a.a.createElement(Q.a,{onClick:function(e){return function(e){e.preventDefault(),o(!1)}(e)}},"Solve"))),a.a.createElement(H.a,{item:!0,xs:6},a.a.createElement(h.a,{className:n.paper},a.a.createElement(M,{clone:e.clonePair.a,index:1}))),a.a.createElement(H.a,{item:!0,xs:6},a.a.createElement(h.a,{className:n.paper},a.a.createElement(M,{clone:e.clonePair.b,index:2}))))))))):null)},X=function(e){return a.a.createElement("div",null,void 0!==e.cloneList&&e.cloneList.map((function(e){return a.a.createElement("div",null,a.a.createElement(K,{clonePair:e}))})))},Y=t(11),Z=t.n(Y),ee=t(682),ne=t(684),te=t(300),re=t(301),ae=function(e){try{return JSON.parse(e||"")}catch(n){return null}}(localStorage.getItem("prophetkey2020"))||{sutPath:"/home/jan/Development/train-ticket",sutError:!1,idePath:"./home/jan/Development/VSCode-linux-x64/bin/code",ideError:!1,gitError:!1,githubUrl:"FudanSELab/train-ticket",loading:!1,request:{repositories:[{path:"cloudhubs/train-ticket",isMonolith:!0,index:0,repoDetail:"cloudhubs/train-ticket"}],systemName:"tms"},global:{projectName:"tms",noCommunication:!0,communication:"graph TD\nN/A\n",noContextMap:!1,contextMap:'classDiagram\nLeftTicketInfo "*" --\x3e "*" Ticket\nTransferTravelResult "*" --\x3e "*" TripResponse\nTravelResult "*" --\x3e "1" TrainType\nGetAccountByIdResult "*" --\x3e "1" Account\nOrderAlterInfo "*" --\x3e "1" Order\nAllTripFood "*" --\x3e "*" TrainFood\nTrainFood "*" --\x3e "*" Food\nFoodStore "*" --\x3e "*" Food\nTravel "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTripResponse "*" --\x3e "1" TripId\nOrderTicketsResult "*" --\x3e "1" Order\nTrip "*" --\x3e "1" TripId\nAdminTrip "*" --\x3e "1" Trip\nAdminTrip "*" --\x3e "1" Route\nAdminTrip "*" --\x3e "1" TrainType\n\t class LeftTicketInfo\n\t class GetOrderByIdInfo\n      GetOrderByIdInfo : +String orderId\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class NotifyInfo\n      NotifyInfo : +String date\n      NotifyInfo : +String startingTime\n      NotifyInfo : +String seatNumber\n      NotifyInfo : +String seatClass\n      NotifyInfo : +String endPlace\n      NotifyInfo : +String username\n      NotifyInfo : +String price\n      NotifyInfo : +String orderNumber\n      NotifyInfo : +String startingPlace\n      NotifyInfo : +String email\n\t class QueryInfo\n      QueryInfo : +Date boughtDateEnd\n      QueryInfo : +String loginId\n      QueryInfo : +Date travelDateStart\n      QueryInfo : +boolean enableBoughtDateQuery\n      QueryInfo : +Date boughtDateStart\n      QueryInfo : +int state\n      QueryInfo : +Date travelDateEnd\n      QueryInfo : +boolean enableTravelDateQuery\n      QueryInfo : +boolean enableStateQuery\n\t class RoutePlanResultUnit\n      RoutePlanResultUnit : +String toStationName\n      RoutePlanResultUnit : +String trainTypeId\n      RoutePlanResultUnit : +String priceForSecondClassSeat\n      RoutePlanResultUnit : +Date startingTime\n      RoutePlanResultUnit : +String tripId\n      RoutePlanResultUnit : +String stopStations\n      RoutePlanResultUnit : +String priceForFirstClassSeat\n      RoutePlanResultUnit : +Date endTime\n      RoutePlanResultUnit : +String fromStationName\n\t class Assurance\n      Assurance : +UUID orderId\n      Assurance : +AssuranceType type\n      Assurance : +UUID id\n\t class TokenDto\n      TokenDto : +UUID userId\n      TokenDto : +String username\n      TokenDto : +String token\n      TokenDto : +long serialVersionUID\n\t class TransferTravelResult\n\t class ConsignPrice\n      ConsignPrice : +double beyondPrice\n      ConsignPrice : +UUID id\n      ConsignPrice : +double initialWeight\n      ConsignPrice : +double withinPrice\n      ConsignPrice : +double initialPrice\n      ConsignPrice : +int index\n\t class TravelResult\n      TravelResult : +String message\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +double percent\n\t class GetPriceDomain\n      GetPriceDomain : +double weight\n      GetPriceDomain : +boolean isWithinRegion\n\t class User\n      User : +int gender\n      User : +String userName\n      User : +UUID userId\n      User : +String documentType\n      User : +String password\n      User : +String email\n      User : +String documentNum\n\t class UserDto\n      UserDto : +int documentType\n      UserDto : +String userName\n      UserDto : +int gender\n      UserDto : +UUID userId\n      UserDto : +String password\n      UserDto : +String documentNum\n      UserDto : +String email\n\t class GetAccountByIdResult\n      GetAccountByIdResult : +boolean status\n      GetAccountByIdResult : +String message\n\t class PriceInfo\n      PriceInfo : +String id\n      PriceInfo : +double basicPriceRate\n      PriceInfo : +String trainType\n      PriceInfo : +double firstClassPriceRate\n      PriceInfo : +String routeId\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class Consign\n      Consign : +String from\n      Consign : +String to\n      Consign : +String phone\n      Consign : +String handleDate\n      Consign : +String targetDate\n      Consign : +boolean isWithin\n      Consign : +double weight\n      Consign : +UUID id\n      Consign : +UUID orderId\n      Consign : +String consignee\n      Consign : +UUID accountId\n\t class RouteInfo\n      RouteInfo : +String endStation\n      RouteInfo : +String id\n      RouteInfo : +String stationList\n      RouteInfo : +String startStation\n      RouteInfo : +String distanceList\n      RouteInfo : +String loginId\n\t class OrderAlterInfo\n      OrderAlterInfo : +UUID previousOrderId\n      OrderAlterInfo : +String loginToken\n      OrderAlterInfo : +UUID accountId\n\t class ConsignRecord\n      ConsignRecord : +String from\n      ConsignRecord : +String to\n      ConsignRecord : +String phone\n      ConsignRecord : +String handleDate\n      ConsignRecord : +String targetDate\n      ConsignRecord : +UUID id\n      ConsignRecord : +double weight\n      ConsignRecord : +UUID orderId\n      ConsignRecord : +String consignee\n      ConsignRecord : +UUID accountId\n      ConsignRecord : +double price\n\t class OutsidePaymentInfo\n      OutsidePaymentInfo : +String orderId\n      OutsidePaymentInfo : +String userId\n      OutsidePaymentInfo : +String price\n\t class OrderTicketsInfo\n      OrderTicketsInfo : +String to\n      OrderTicketsInfo : +String handleDate\n      OrderTicketsInfo : +boolean isWithin\n      OrderTicketsInfo : +double foodPrice\n      OrderTicketsInfo : +String tripId\n      OrderTicketsInfo : +int seatType\n      OrderTicketsInfo : +String consigneeName\n      OrderTicketsInfo : +String loginToken\n      OrderTicketsInfo : +Date date\n      OrderTicketsInfo : +int foodType\n      OrderTicketsInfo : +int assurance\n      OrderTicketsInfo : +String from\n      OrderTicketsInfo : +String foodName\n      OrderTicketsInfo : +String contactsId\n      OrderTicketsInfo : +String accountId\n      OrderTicketsInfo : +double consigneeWeight\n      OrderTicketsInfo : +String storeName\n      OrderTicketsInfo : +String stationName\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class PlainAssurance\n      PlainAssurance : +double typePrice\n      PlainAssurance : +UUID id\n      PlainAssurance : +UUID orderId\n      PlainAssurance : +int typeIndex\n      PlainAssurance : +String typeName\n\t class BasicAuthDto\n      BasicAuthDto : +String username\n      BasicAuthDto : +String password\n      BasicAuthDto : +String verificationCode\n      BasicAuthDto : +long serialVersionUID\n\t class PaymentInfo\n      PaymentInfo : +String orderId\n      PaymentInfo : +String price\n      PaymentInfo : +String userId\n      PaymentInfo : +String tripId\n\t class AllTripFood\n      AllTripFood : +String,List<FoodStore foodStoreListMap\n\t class Food\n      Food : +String foodName\n      Food : +double price\n\t class GetAccountByIdInfo\n      GetAccountByIdInfo : +String accountId\n\t class SoldTicket\n      SoldTicket : +int noSeat\n      SoldTicket : +Date travelDate\n      SoldTicket : +int secondClassSeat\n      SoldTicket : +int businessSeat\n      SoldTicket : +int hardSeat\n      SoldTicket : +int firstClassSeat\n      SoldTicket : +int hardBed\n      SoldTicket : +int softBed\n      SoldTicket : +int highSoftBed\n      SoldTicket : +String trainNumber\n      SoldTicket : +int softSeat\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class AuthDto\n      AuthDto : +String userId\n      AuthDto : +String password\n      AuthDto : +String userName\n\t class Payment\n      Payment : +String price\n      Payment : +PaymentType type\n      Payment : +String orderId\n      Payment : +String userId\n      Payment : +String id\n\t class Station\n      Station : +String name\n      Station : +String id\n      Station : +int stayTime\n\t class TrainFood\n      TrainFood : +String tripId\n      TrainFood : +UUID id\n\t class Config\n      Config : +String value\n      Config : +String name\n      Config : +String description\n\t class RoutePlanInfo\n      RoutePlanInfo : +String toStationName\n      RoutePlanInfo : +int num\n      RoutePlanInfo : +Date travelDate\n      RoutePlanInfo : +String formStationName\n\t class FoodStore\n      FoodStore : +String telephone\n      FoodStore : +UUID id\n      FoodStore : +String storeName\n      FoodStore : +String businessTime\n      FoodStore : +String stationId\n      FoodStore : +double deliveryFee\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class TravelInfo\n      TravelInfo : +String trainTypeId\n      TravelInfo : +String loginId\n      TravelInfo : +Date startingTime\n      TravelInfo : +String tripId\n      TravelInfo : +String routeId\n      TravelInfo : +String terminalStationId\n      TravelInfo : +String stationsId\n      TravelInfo : +Date endTime\n      TravelInfo : +String startingStationId\n\t class Balance\n      Balance : +String userId\n      Balance : +String balance\n\t class TripAllDetail\n      TripAllDetail : +String message\n      TripAllDetail : +boolean status\n\t class Mail\n      Mail : +Map<String,Object> model\n      Mail : +Object attachments\n      Mail : +String mailFrom\n      Mail : +String mailTo\n      Mail : +String mailBcc\n      Mail : +String mailContent\n      Mail : +String mailCc\n      Mail : +String mailSubject\n      Mail : +String contentType\n\t class FoodOrder\n      FoodOrder : +String foodName\n      FoodOrder : +UUID id\n      FoodOrder : +String storeName\n      FoodOrder : +int foodType\n      FoodOrder : +String stationName\n      FoodOrder : +UUID orderId\n      FoodOrder : +double price\n\t class Account\n      Account : +int documentType\n      Account : +String loginId\n      Account : +String accountId\n      Account : +int gender\n      Account : +UUID id\n      Account : +String password\n      Account : +String name\n      Account : +String documentNum\n      Account : +String email\n\t class VerifyResult\n      VerifyResult : +boolean status\n      VerifyResult : +String message\n\t class TripResponse\n      TripResponse : +String trainTypeId\n      TripResponse : +int economyClass\n      TripResponse : +String startingStation\n      TripResponse : +String priceForEconomyClass\n      TripResponse : +Date startingTime\n      TripResponse : +int confortClass\n      TripResponse : +String terminalStation\n      TripResponse : +String priceForConfortClass\n      TripResponse : +Date endTime\n\t class Response\n      Response : +String msg\n      Response : +T data\n      Response : +Integer status\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class RebookInfo\n      RebookInfo : +Date date\n      RebookInfo : +int seatType\n      RebookInfo : +String orderId\n      RebookInfo : +String oldTripId\n      RebookInfo : +String tripId\n      RebookInfo : +String loginId\n\t class AssuranceTypeBean\n      AssuranceTypeBean : +int index\n      AssuranceTypeBean : +String name\n      AssuranceTypeBean : +double price\n\t class AccountInfo\n      AccountInfo : +String userId\n      AccountInfo : +String money\n\t class OrderInfo\n      OrderInfo : +Date boughtDateEnd\n      OrderInfo : +String loginId\n      OrderInfo : +Date travelDateStart\n      OrderInfo : +boolean enableBoughtDateQuery\n      OrderInfo : +Date boughtDateStart\n      OrderInfo : +int state\n      OrderInfo : +Date travelDateEnd\n      OrderInfo : +boolean enableTravelDateQuery\n      OrderInfo : +boolean enableStateQuery\n\t class OrderTicketsResult\n      OrderTicketsResult : +boolean status\n      OrderTicketsResult : +String message\n\t class InsertConsignRecordResult\n      InsertConsignRecordResult : +boolean status\n      InsertConsignRecordResult : +String message\n\t class Money\n      Money : +String userId\n      Money : +String id\n      Money : +MoneyType type\n      Money : +String money\n\t class PriceConfig\n      PriceConfig : +double basicPriceRate\n      PriceConfig : +UUID id\n      PriceConfig : +String trainType\n      PriceConfig : +double firstClassPriceRate\n      PriceConfig : +String routeId\n\t class PaymentDifferenceInfo\n      PaymentDifferenceInfo : +String orderId\n      PaymentDifferenceInfo : +String price\n      PaymentDifferenceInfo : +String userId\n      PaymentDifferenceInfo : +String tripId\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n\t class SecurityConfig\n      SecurityConfig : +String value\n      SecurityConfig : +UUID id\n      SecurityConfig : +String name\n      SecurityConfig : +String description\n\t class TripInfo\n      TripInfo : +Date departureTime\n      TripInfo : +String startingPlace\n      TripInfo : +String endPlace\n\t class TravelAdvanceResultUnit\n      TravelAdvanceResultUnit : +String toStationName\n      TravelAdvanceResultUnit : +int numberOfRestTicketSecondClass\n      TravelAdvanceResultUnit : +String trainTypeId\n      TravelAdvanceResultUnit : +String priceForSecondClassSeat\n      TravelAdvanceResultUnit : +Date startingTime\n      TravelAdvanceResultUnit : +String tripId\n      TravelAdvanceResultUnit : +int numberOfRestTicketFirstClass\n      TravelAdvanceResultUnit : +String stopStations\n      TravelAdvanceResultUnit : +String priceForFirstClassSeat\n      TravelAdvanceResultUnit : +Date endTime\n      TravelAdvanceResultUnit : +String fromStationName\n\t class TransferTravelInfo\n      TransferTravelInfo : +String toStationName\n      TransferTravelInfo : +Date travelDate\n      TransferTravelInfo : +String trainType\n      TransferTravelInfo : +String fromStationName\n      TransferTravelInfo : +String viaStationName\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +UUID id\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +String differenceMoney\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class OrderSecurity\n      OrderSecurity : +int orderNumInLastOneHour\n      OrderSecurity : +int orderNumOfValidOrder\n\t class AdminTrip\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int averageSpeed\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n',cannotClone:!1},ms:[{name:"ts-contacts-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n"},{name:"ts-admin-user-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class User\n      User : +int documentType\n      User : +String userName\n      User : +int gender\n      User : +UUID userId\n      User : +String password\n      User : +String documentNum\n      User : +String email\n\t class Account\n      Account : +int documentType\n      Account : +String loginId\n      Account : +String accountId\n      Account : +int gender\n      Account : +UUID id\n      Account : +String password\n      Account : +String name\n      Account : +String documentNum\n      Account : +String email\n\t class UserDto\n      UserDto : +int documentType\n      UserDto : +String password\n      UserDto : +String userName\n      UserDto : +int gender\n      UserDto : +String documentNum\n      UserDto : +String email\n"},{name:"ts-food-map-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTrainFood "*" --\x3e "*" Food\nFoodStore "*" --\x3e "*" Food\n\t class TrainFood\n      TrainFood : +String tripId\n      TrainFood : +UUID id\n\t class FoodStore\n      FoodStore : +String telephone\n      FoodStore : +UUID id\n      FoodStore : +String storeName\n      FoodStore : +String businessTime\n      FoodStore : +String stationId\n      FoodStore : +double deliveryFee\n\t class Food\n      Food : +String foodName\n      Food : +double price\n'},{name:"ts-notification-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class NotifyInfo\n      NotifyInfo : +String date\n      NotifyInfo : +String startingTime\n      NotifyInfo : +String seatNumber\n      NotifyInfo : +String seatClass\n      NotifyInfo : +String endPlace\n      NotifyInfo : +String username\n      NotifyInfo : +String price\n      NotifyInfo : +String orderNumber\n      NotifyInfo : +String startingPlace\n      NotifyInfo : +String email\n\t class Mail\n      Mail : +Map<String,Object> model\n      Mail : +Object attachments\n      Mail : +String mailFrom\n      Mail : +String mailTo\n      Mail : +String mailBcc\n      Mail : +String mailContent\n      Mail : +String mailCc\n      Mail : +String mailSubject\n      Mail : +String contentType\n"},{name:"ts-cancel-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nGetAccountByIdResult "*" --\x3e "1" Account\n\t class GetOrderByIdInfo\n      GetOrderByIdInfo : +String orderId\n\t class GetAccountByIdResult\n      GetAccountByIdResult : +boolean status\n      GetAccountByIdResult : +String message\n\t class GetAccountByIdInfo\n      GetAccountByIdInfo : +String accountId\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class NotifyInfo\n      NotifyInfo : +String date\n      NotifyInfo : +String startingTime\n      NotifyInfo : +String seatNumber\n      NotifyInfo : +String seatClass\n      NotifyInfo : +String endPlace\n      NotifyInfo : +String username\n      NotifyInfo : +String price\n      NotifyInfo : +String orderNumber\n      NotifyInfo : +String startingPlace\n      NotifyInfo : +String email\n\t class Account\n      Account : +int documentType\n      Account : +int gender\n      Account : +UUID id\n      Account : +String password\n      Account : +String name\n      Account : +String documentNum\n      Account : +String email\n\t class User\n      User : +int documentType\n      User : +String userName\n      User : +int gender\n      User : +UUID userId\n      User : +String password\n      User : +String documentNum\n      User : +String email\n\t class VerifyResult\n      VerifyResult : +boolean status\n      VerifyResult : +String message\n'},{name:"ts-config-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Config\n      Config : +String value\n      Config : +String name\n      Config : +String description\n"},{name:"ts-assurance-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class AssuranceTypeBean\n      AssuranceTypeBean : +int index\n      AssuranceTypeBean : +String name\n      AssuranceTypeBean : +double price\n\t class PlainAssurance\n      PlainAssurance : +double typePrice\n      PlainAssurance : +UUID id\n      PlainAssurance : +UUID orderId\n      PlainAssurance : +int typeIndex\n      PlainAssurance : +String typeName\n\t class Assurance\n      Assurance : +UUID orderId\n      Assurance : +AssuranceType type\n      Assurance : +UUID id\n"},{name:"ts-order-other-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nOrderAlterInfo "*" --\x3e "1" Order\nLeftTicketInfo "*" --\x3e "*" Ticket\n\t class OrderAlterInfo\n      OrderAlterInfo : +UUID previousOrderId\n      OrderAlterInfo : +String loginToken\n      OrderAlterInfo : +UUID accountId\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +UUID id\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class LeftTicketInfo\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class OrderSecurity\n      OrderSecurity : +int orderNumInLastOneHour\n      OrderSecurity : +int orderNumOfValidOrder\n\t class QueryInfo\n      QueryInfo : +Date boughtDateEnd\n      QueryInfo : +String loginId\n      QueryInfo : +Date travelDateStart\n      QueryInfo : +boolean enableBoughtDateQuery\n      QueryInfo : +Date boughtDateStart\n      QueryInfo : +int state\n      QueryInfo : +Date travelDateEnd\n      QueryInfo : +boolean enableTravelDateQuery\n      QueryInfo : +boolean enableStateQuery\n\t class SoldTicket\n      SoldTicket : +int noSeat\n      SoldTicket : +Date travelDate\n      SoldTicket : +int secondClassSeat\n      SoldTicket : +int businessSeat\n      SoldTicket : +int hardSeat\n      SoldTicket : +int firstClassSeat\n      SoldTicket : +int hardBed\n      SoldTicket : +int softBed\n      SoldTicket : +int highSoftBed\n      SoldTicket : +String trainNumber\n      SoldTicket : +int softSeat\n'},{name:"ts-route-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class RouteInfo\n      RouteInfo : +String endStation\n      RouteInfo : +String id\n      RouteInfo : +String stationList\n      RouteInfo : +String startStation\n      RouteInfo : +String distanceList\n"},{name:"ts-price-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int averageSpeed\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n\t class PriceConfig\n      PriceConfig : +UUID id\n      PriceConfig : +double basicPriceRate\n      PriceConfig : +String trainType\n      PriceConfig : +double firstClassPriceRate\n      PriceConfig : +String routeId\n"},{name:"ts-preserve-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTravelResult "*" --\x3e "1" TrainType\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTravel "*" --\x3e "1" Trip\nTripResponse "*" --\x3e "1" TripId\nOrderTicketsResult "*" --\x3e "1" Order\nTrip "*" --\x3e "1" TripId\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +double percent\n\t class OrderTicketsInfo\n      OrderTicketsInfo : +String to\n      OrderTicketsInfo : +String handleDate\n      OrderTicketsInfo : +double foodPrice\n      OrderTicketsInfo : +boolean isWithin\n      OrderTicketsInfo : +String tripId\n      OrderTicketsInfo : +int seatType\n      OrderTicketsInfo : +String consigneeName\n      OrderTicketsInfo : +Date date\n      OrderTicketsInfo : +int foodType\n      OrderTicketsInfo : +int assurance\n      OrderTicketsInfo : +String from\n      OrderTicketsInfo : +String foodName\n      OrderTicketsInfo : +String accountId\n      OrderTicketsInfo : +String contactsId\n      OrderTicketsInfo : +String storeName\n      OrderTicketsInfo : +double consigneeWeight\n      OrderTicketsInfo : +String stationName\n      OrderTicketsInfo : +String consigneePhone\n\t class TripAllDetail\n      TripAllDetail : +boolean status\n      TripAllDetail : +String message\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class User\n      User : +int documentType\n      User : +String userName\n      User : +int gender\n      User : +UUID userId\n      User : +String password\n      User : +String documentNum\n      User : +String email\n\t class TripResponse\n      TripResponse : +int economyClass\n      TripResponse : +String startingStation\n      TripResponse : +Date startingTime\n      TripResponse : +int confortClass\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class OrderTicketsResult\n      OrderTicketsResult : +boolean status\n      OrderTicketsResult : +String message\n\t class NotifyInfo\n      NotifyInfo : +String date\n      NotifyInfo : +String startingTime\n      NotifyInfo : +String seatNumber\n      NotifyInfo : +String seatClass\n      NotifyInfo : +String endPlace\n      NotifyInfo : +String username\n      NotifyInfo : +String price\n      NotifyInfo : +String orderNumber\n      NotifyInfo : +String startingPlace\n      NotifyInfo : +String email\n\t class Account\n      Account : +int documentType\n      Account : +int gender\n      Account : +UUID id\n      Account : +String password\n      Account : +String name\n      Account : +String documentNum\n      Account : +String email\n\t class FoodOrder\n      FoodOrder : +String foodName\n      FoodOrder : +UUID id\n      FoodOrder : +String storeName\n      FoodOrder : +int foodType\n      FoodOrder : +String stationName\n      FoodOrder : +UUID orderId\n      FoodOrder : +double price\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +String startStation\n      Seat : +String trainNumber\n      Seat : +String destStation\n      Seat : +int seatType\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n\t class Consign\n      Consign : +String from\n      Consign : +String to\n      Consign : +String phone\n      Consign : +String handleDate\n      Consign : +String targetDate\n      Consign : +boolean isWithin\n      Consign : +double weight\n      Consign : +UUID id\n      Consign : +UUID orderId\n      Consign : +String consignee\n      Consign : +UUID accountId\n\t class Assurance\n      Assurance : +UUID orderId\n      Assurance : +AssuranceType type\n      Assurance : +UUID id\n'},{name:"ts-security-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class OrderSecurity\n      OrderSecurity : +int orderNumInLastOneHour\n      OrderSecurity : +int orderNumOfValidOrder\n\t class SecurityConfig\n      SecurityConfig : +String value\n      SecurityConfig : +UUID id\n      SecurityConfig : +String name\n      SecurityConfig : +String description\n"},{name:"ts-consign-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Consign\n      Consign : +String from\n      Consign : +String to\n      Consign : +String phone\n      Consign : +String handleDate\n      Consign : +String targetDate\n      Consign : +boolean isWithin\n      Consign : +UUID id\n      Consign : +double weight\n      Consign : +UUID orderId\n      Consign : +String consignee\n      Consign : +UUID accountId\n\t class GetPriceDomain\n      GetPriceDomain : +double weight\n      GetPriceDomain : +boolean isWithinRegion\n\t class InsertConsignRecordResult\n      InsertConsignRecordResult : +boolean status\n      InsertConsignRecordResult : +String message\n\t class ConsignRecord\n      ConsignRecord : +String from\n      ConsignRecord : +String to\n      ConsignRecord : +String phone\n      ConsignRecord : +String handleDate\n      ConsignRecord : +String targetDate\n      ConsignRecord : +UUID id\n      ConsignRecord : +double weight\n      ConsignRecord : +UUID orderId\n      ConsignRecord : +String consignee\n      ConsignRecord : +UUID accountId\n      ConsignRecord : +double price\n"},{name:"ts-train-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int averageSpeed\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n"},{name:"ts-order-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nOrderAlterInfo "*" --\x3e "1" Order\nLeftTicketInfo "*" --\x3e "*" Ticket\n\t class OrderAlterInfo\n      OrderAlterInfo : +UUID previousOrderId\n      OrderAlterInfo : +String loginToken\n      OrderAlterInfo : +UUID accountId\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class OrderInfo\n      OrderInfo : +Date boughtDateEnd\n      OrderInfo : +String loginId\n      OrderInfo : +Date travelDateStart\n      OrderInfo : +boolean enableBoughtDateQuery\n      OrderInfo : +Date boughtDateStart\n      OrderInfo : +int state\n      OrderInfo : +Date travelDateEnd\n      OrderInfo : +boolean enableTravelDateQuery\n      OrderInfo : +boolean enableStateQuery\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +UUID id\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class LeftTicketInfo\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class OrderSecurity\n      OrderSecurity : +int orderNumInLastOneHour\n      OrderSecurity : +int orderNumOfValidOrder\n\t class SoldTicket\n      SoldTicket : +int noSeat\n      SoldTicket : +Date travelDate\n      SoldTicket : +int secondClassSeat\n      SoldTicket : +int businessSeat\n      SoldTicket : +int hardSeat\n      SoldTicket : +int firstClassSeat\n      SoldTicket : +int hardBed\n      SoldTicket : +int softBed\n      SoldTicket : +int highSoftBed\n      SoldTicket : +String trainNumber\n      SoldTicket : +int softSeat\n'},{name:"ts-food-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTrainFood "*" --\x3e "*" Food\nAllTripFood "*" --\x3e "*" TrainFood\nFoodStore "*" --\x3e "*" Food\n\t class TrainFood\n      TrainFood : +String tripId\n      TrainFood : +UUID id\n\t class FoodOrder\n      FoodOrder : +String foodName\n      FoodOrder : +UUID id\n      FoodOrder : +String storeName\n      FoodOrder : +int foodType\n      FoodOrder : +String stationName\n      FoodOrder : +UUID orderId\n      FoodOrder : +double price\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class AllTripFood\n      AllTripFood : +String,List<FoodStore foodStoreListMap\n\t class FoodStore\n      FoodStore : +String stationId\n      FoodStore : +String telephone\n      FoodStore : +UUID id\n      FoodStore : +String storeName\n      FoodStore : +String businessTime\n      FoodStore : +double deliveryFee\n\t class Food\n      Food : +String foodName\n      Food : +double price\n'},{name:"ts-rebook-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTripResponse "*" --\x3e "1" TripId\nTrip "*" --\x3e "1" TripId\n\t class PaymentDifferenceInfo\n      PaymentDifferenceInfo : +String orderId\n      PaymentDifferenceInfo : +String price\n      PaymentDifferenceInfo : +String userId\n      PaymentDifferenceInfo : +String tripId\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class TripAllDetail\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class TripResponse\n      TripResponse : +int economyClass\n      TripResponse : +String startingStation\n      TripResponse : +String trainTypeId\n      TripResponse : +Date startingTime\n      TripResponse : +String priceForConfortClass\n      TripResponse : +int confortClass\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n      TripResponse : +String priceForEconomyClass\n\t class Trip\n      Trip : +String trainTypeId\n      Trip : +Date startingTime\n      Trip : +String routeId\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +Date endTime\n      Trip : +String startingStationId\n\t class OrderTicketsInfo\n      OrderTicketsInfo : +String from\n      OrderTicketsInfo : +String to\n      OrderTicketsInfo : +String contactsId\n      OrderTicketsInfo : +String tripId\n      OrderTicketsInfo : +String accountId\n      OrderTicketsInfo : +int seatType\n      OrderTicketsInfo : +String loginToken\n      OrderTicketsInfo : +Date date\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String differenceMoney\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class RebookInfo\n      RebookInfo : +Date date\n      RebookInfo : +int seatType\n      RebookInfo : +String orderId\n      RebookInfo : +String oldTripId\n      RebookInfo : +String tripId\n      RebookInfo : +String loginId\n\t class VerifyResult\n      VerifyResult : +boolean status\n      VerifyResult : +String message\n'},{name:"ts-admin-basic-info-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class TrainType\n      TrainType : +int economyClass\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int averageSpeed\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class Config\n      Config : +String name\n      Config : +String description\n      Config : +String value\n\t class PriceInfo\n      PriceInfo : +String id\n      PriceInfo : +double basicPriceRate\n      PriceInfo : +String trainType\n      PriceInfo : +double firstClassPriceRate\n      PriceInfo : +String routeId\n\t class Station\n      Station : +String name\n      Station : +String id\n      Station : +int stayTime\n"},{name:"ts-consign-price-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class ConsignPrice\n      ConsignPrice : +double beyondPrice\n      ConsignPrice : +UUID id\n      ConsignPrice : +double initialWeight\n      ConsignPrice : +double withinPrice\n      ConsignPrice : +double initialPrice\n      ConsignPrice : +int index\n"},{name:"ts-basic-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTravelResult "*" --\x3e "1" TrainType\nTravel "*" --\x3e "1" Trip\nTrip "*" --\x3e "1" TripId\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +double percent\n\t class TrainType\n      TrainType : +int economyClass\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int averageSpeed\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class PriceConfig\n      PriceConfig : +double basicPriceRate\n      PriceConfig : +UUID id\n      PriceConfig : +String trainType\n      PriceConfig : +double firstClassPriceRate\n      PriceConfig : +String routeId\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n'},{name:"ts-preserve-other-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTravelResult "*" --\x3e "1" TrainType\nTravel "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTripResponse "*" --\x3e "1" TripId\nTrip "*" --\x3e "1" TripId\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +double percent\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class Contacts\n      Contacts : +int documentType\n      Contacts : +String documentNumber\n      Contacts : +UUID id\n      Contacts : +String phoneNumber\n      Contacts : +String name\n      Contacts : +UUID accountId\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class OrderTicketsInfo\n      OrderTicketsInfo : +String to\n      OrderTicketsInfo : +String handleDate\n      OrderTicketsInfo : +double foodPrice\n      OrderTicketsInfo : +boolean isWithin\n      OrderTicketsInfo : +String tripId\n      OrderTicketsInfo : +int seatType\n      OrderTicketsInfo : +String consigneeName\n      OrderTicketsInfo : +Date date\n      OrderTicketsInfo : +int foodType\n      OrderTicketsInfo : +int assurance\n      OrderTicketsInfo : +String from\n      OrderTicketsInfo : +String foodName\n      OrderTicketsInfo : +String accountId\n      OrderTicketsInfo : +String contactsId\n      OrderTicketsInfo : +String storeName\n      OrderTicketsInfo : +double consigneeWeight\n      OrderTicketsInfo : +String stationName\n      OrderTicketsInfo : +String consigneePhone\n\t class TripAllDetail\n      TripAllDetail : +boolean status\n      TripAllDetail : +String message\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class User\n      User : +int documentType\n      User : +String userName\n      User : +int gender\n      User : +UUID userId\n      User : +String password\n      User : +String documentNum\n      User : +String email\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class TripResponse\n      TripResponse : +int economyClass\n      TripResponse : +String startingStation\n      TripResponse : +Date startingTime\n      TripResponse : +int confortClass\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class NotifyInfo\n      NotifyInfo : +String date\n      NotifyInfo : +String startingTime\n      NotifyInfo : +String seatNumber\n      NotifyInfo : +String seatClass\n      NotifyInfo : +String endPlace\n      NotifyInfo : +String username\n      NotifyInfo : +String price\n      NotifyInfo : +String orderNumber\n      NotifyInfo : +String startingPlace\n      NotifyInfo : +String email\n\t class Account\n      Account : +int documentType\n      Account : +int gender\n      Account : +UUID id\n      Account : +String password\n      Account : +String name\n      Account : +String documentNum\n      Account : +String email\n\t class FoodOrder\n      FoodOrder : +String foodName\n      FoodOrder : +UUID id\n      FoodOrder : +String storeName\n      FoodOrder : +int foodType\n      FoodOrder : +String stationName\n      FoodOrder : +UUID orderId\n      FoodOrder : +double price\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +String startStation\n      Seat : +String trainNumber\n      Seat : +String destStation\n      Seat : +int seatType\n\t class Assurance\n      Assurance : +UUID orderId\n      Assurance : +AssuranceType type\n      Assurance : +UUID id\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n\t class Consign\n      Consign : +String from\n      Consign : +String to\n      Consign : +String phone\n      Consign : +String handleDate\n      Consign : +String targetDate\n      Consign : +boolean isWithin\n      Consign : +double weight\n      Consign : +UUID id\n      Consign : +UUID orderId\n      Consign : +String consignee\n      Consign : +UUID accountId\n'},{name:"ts-common",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Response\n      Response : +String msg\n      Response : +T data\n      Response : +Integer status\n"},{name:"ts-station-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Station\n      Station : +String name\n      Station : +String id\n      Station : +int stayTime\n"},{name:"ts-auth-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class AuthDto\n      AuthDto : +String userId\n      AuthDto : +String password\n      AuthDto : +String userName\n\t class BasicAuthDto\n      BasicAuthDto : +String username\n      BasicAuthDto : +String password\n      BasicAuthDto : +String verificationCode\n      BasicAuthDto : +long serialVersionUID\n\t class TokenDto\n      TokenDto : +UUID userId\n      TokenDto : +String username\n      TokenDto : +String token\n      TokenDto : +long serialVersionUID\n\t class User\n      User : +UUID userId\n      User : +String username\n      User : +String password\n      User : +String roles\n"},{name:"ts-user-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class AuthDto\n      AuthDto : +String userId\n      AuthDto : +String password\n      AuthDto : +String userName\n\t class UserDto\n      UserDto : +int documentType\n      UserDto : +String userName\n      UserDto : +int gender\n      UserDto : +UUID userId\n      UserDto : +String password\n      UserDto : +String documentNum\n      UserDto : +String email\n\t class User\n      User : +int documentType\n      User : +String userName\n      User : +int gender\n      User : +UUID userId\n      User : +String password\n      User : +String documentNum\n      User : +String email\n"},{name:"ts-route-plan-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTrip "*" --\x3e "1" TripId\nTripResponse "*" --\x3e "1" TripId\n\t class TripInfo\n      TripInfo : +String endPlace\n      TripInfo : +String startingPlace\n      TripInfo : +Date departureTime\n\t class RoutePlanResultUnit\n      RoutePlanResultUnit : +String toStationName\n      RoutePlanResultUnit : +String trainTypeId\n      RoutePlanResultUnit : +String priceForSecondClassSeat\n      RoutePlanResultUnit : +Date startingTime\n      RoutePlanResultUnit : +String tripId\n      RoutePlanResultUnit : +String stopStations\n      RoutePlanResultUnit : +String priceForFirstClassSeat\n      RoutePlanResultUnit : +Date endTime\n      RoutePlanResultUnit : +String fromStationName\n\t class TripAllDetail\n      TripAllDetail : +boolean status\n      TripAllDetail : +String message\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class Trip\n      Trip : +String trainTypeId\n      Trip : +Date startingTime\n      Trip : +String routeId\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +Date endTime\n      Trip : +String startingStationId\n\t class RoutePlanInfo\n      RoutePlanInfo : +String toStationName\n      RoutePlanInfo : +int num\n      RoutePlanInfo : +Date travelDate\n      RoutePlanInfo : +String formStationName\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class TripResponse\n      TripResponse : +String priceForConfortClass\n      TripResponse : +int economyClass\n      TripResponse : +String trainTypeId\n      TripResponse : +Date startingTime\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n      TripResponse : +int confortClass\n      TripResponse : +String priceForEconomyClass\n      TripResponse : +String startingStation\n'},{name:"ts-ticketinfo-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTravel "*" --\x3e "1" Trip\nTravelResult "*" --\x3e "1" TrainType\nTrip "*" --\x3e "1" TripId\n\t class TrainType\n      TrainType : +int economyClass\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int averageSpeed\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +String message\n      TravelResult : +double percent\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n'},{name:"ts-payment-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Money\n      Money : +String userId\n      Money : +String money\n\t class Payment\n      Payment : +String price\n      Payment : +String orderId\n      Payment : +String userId\n      Payment : +String id\n"},{name:"ts-inside-payment-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Payment\n      Payment : +String price\n      Payment : +PaymentType type\n      Payment : +String orderId\n      Payment : +String userId\n      Payment : +String id\n\t class Money\n      Money : +MoneyType type\n      Money : +String userId\n      Money : +String id\n      Money : +String money\n\t class OutsidePaymentInfo\n      OutsidePaymentInfo : +String orderId\n      OutsidePaymentInfo : +String userId\n      OutsidePaymentInfo : +String price\n\t class Balance\n      Balance : +String userId\n      Balance : +String balance\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n\t class PaymentInfo\n      PaymentInfo : +String orderId\n      PaymentInfo : +String price\n      PaymentInfo : +String userId\n      PaymentInfo : +String tripId\n\t class AccountInfo\n      AccountInfo : +String userId\n      AccountInfo : +String money\n"},{name:"ts-seat-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nLeftTicketInfo "*" --\x3e "*" Ticket\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class LeftTicketInfo\n\t class Config\n      Config : +String name\n      Config : +String description\n      Config : +String value\n\t class Ticket\n      Ticket : +int seatNo\n      Ticket : +String startStation\n      Ticket : +String destStation\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class TrainType\n      TrainType : +int averageSpeed\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n'},{name:"ts-execute-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n"},{name:"ts-travel-plan-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTrip "*" --\x3e "1" TripId\nTransferTravelResult "*" --\x3e "*" TripResponse\nTripResponse "*" --\x3e "1" TripId\n\t class TransferTravelInfo\n      TransferTravelInfo : +String toStationName\n      TransferTravelInfo : +Date travelDate\n      TransferTravelInfo : +String trainType\n      TransferTravelInfo : +String fromStationName\n      TransferTravelInfo : +String viaStationName\n\t class TripInfo\n      TripInfo : +String endPlace\n      TripInfo : +String startingPlace\n      TripInfo : +Date departureTime\n\t class RoutePlanResultUnit\n      RoutePlanResultUnit : +String toStationName\n      RoutePlanResultUnit : +String trainTypeId\n      RoutePlanResultUnit : +String priceForSecondClassSeat\n      RoutePlanResultUnit : +Date startingTime\n      RoutePlanResultUnit : +String tripId\n      RoutePlanResultUnit : +String stopStations\n      RoutePlanResultUnit : +String priceForFirstClassSeat\n      RoutePlanResultUnit : +Date endTime\n      RoutePlanResultUnit : +String fromStationName\n\t class TravelAdvanceResultUnit\n      TravelAdvanceResultUnit : +String toStationName\n      TravelAdvanceResultUnit : +int numberOfRestTicketSecondClass\n      TravelAdvanceResultUnit : +String trainTypeId\n      TravelAdvanceResultUnit : +String priceForSecondClassSeat\n      TravelAdvanceResultUnit : +Date startingTime\n      TravelAdvanceResultUnit : +String tripId\n      TravelAdvanceResultUnit : +int numberOfRestTicketFirstClass\n      TravelAdvanceResultUnit : +String stopStations\n      TravelAdvanceResultUnit : +String priceForFirstClassSeat\n      TravelAdvanceResultUnit : +Date endTime\n      TravelAdvanceResultUnit : +String fromStationName\n\t class Trip\n      Trip : +String trainTypeId\n      Trip : +Date startingTime\n      Trip : +String routeId\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +Date endTime\n      Trip : +String startingStationId\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +String startStation\n      Seat : +String trainNumber\n      Seat : +String destStation\n      Seat : +int seatType\n\t class RoutePlanInfo\n      RoutePlanInfo : +String toStationName\n      RoutePlanInfo : +int num\n      RoutePlanInfo : +Date travelDate\n      RoutePlanInfo : +String formStationName\n\t class TransferTravelResult\n\t class TripResponse\n      TripResponse : +String priceForConfortClass\n      TripResponse : +int economyClass\n      TripResponse : +String trainTypeId\n      TripResponse : +Date startingTime\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n      TripResponse : +int confortClass\n      TripResponse : +String priceForEconomyClass\n      TripResponse : +String startingStation\n\t class TripId\n      TripId : +TrainTypeEnum type\n      TripId : +String number\n'},{name:"ts-travel2-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTravelResult "*" --\x3e "1" TrainType\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTravel "*" --\x3e "1" Trip\nTrip "*" --\x3e "1" TripId\nTripResponse "*" --\x3e "1" TripId\nAdminTrip "*" --\x3e "1" Trip\nAdminTrip "*" --\x3e "1" Route\nAdminTrip "*" --\x3e "1" TrainType\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +double percent\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class TripAllDetail\n      TripAllDetail : +boolean status\n      TripAllDetail : +String message\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class TripInfo\n      TripInfo : +Date departureTime\n      TripInfo : +String startingPlace\n      TripInfo : +String endPlace\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date startingTime\n      Trip : +Date endTime\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int averageSpeed\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n\t class TravelInfo\n      TravelInfo : +String trainTypeId\n      TravelInfo : +Date startingTime\n      TravelInfo : +String tripId\n      TravelInfo : +String routeId\n      TravelInfo : +String terminalStationId\n      TravelInfo : +String stationsId\n      TravelInfo : +Date endTime\n      TravelInfo : +String startingStationId\n\t class TripResponse\n      TripResponse : +int economyClass\n      TripResponse : +String startingStation\n      TripResponse : +String trainTypeId\n      TripResponse : +Date startingTime\n      TripResponse : +String priceForConfortClass\n      TripResponse : +int confortClass\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n      TripResponse : +String priceForEconomyClass\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class AdminTrip\n\t class SoldTicket\n      SoldTicket : +int noSeat\n      SoldTicket : +Date travelDate\n      SoldTicket : +int secondClassSeat\n      SoldTicket : +int businessSeat\n      SoldTicket : +int hardSeat\n      SoldTicket : +int firstClassSeat\n      SoldTicket : +int hardBed\n      SoldTicket : +int softBed\n      SoldTicket : +int highSoftBed\n      SoldTicket : +String trainNumber\n      SoldTicket : +int softSeat\n'},{name:"ts-travel-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTripAllDetail "*" --\x3e "1" Trip\nTripAllDetail "*" --\x3e "1" TripResponse\nTravel "*" --\x3e "1" Trip\nTrip "*" --\x3e "1" TripId\nTravelResult "*" --\x3e "1" TrainType\nAdminTrip "*" --\x3e "1" Trip\nAdminTrip "*" --\x3e "1" Route\nAdminTrip "*" --\x3e "1" TrainType\nTripResponse "*" --\x3e "1" TripId\n\t class Seat\n      Seat : +Date travelDate\n      Seat : +int seatType\n      Seat : +String startStation\n      Seat : +String destStation\n      Seat : +String trainNumber\n\t class TripAllDetail\n\t class Travel\n      Travel : +String endPlace\n      Travel : +String startingPlace\n      Travel : +Date departureTime\n\t class Trip\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +Date startingTime\n      Trip : +String startingStationId\n      Trip : +String trainTypeId\n      Trip : +String routeId\n      Trip : +Date endTime\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class TravelResult\n      TravelResult : +Map<String,String> prices\n      TravelResult : +boolean status\n      TravelResult : +String message\n      TravelResult : +double percent\n\t class TripInfo\n      TripInfo : +Date departureTime\n      TripInfo : +String startingPlace\n      TripInfo : +String endPlace\n\t class TripAllDetailInfo\n      TripAllDetailInfo : +String from\n      TripAllDetailInfo : +String to\n      TripAllDetailInfo : +Date travelDate\n      TripAllDetailInfo : +String tripId\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n\t class TrainType\n      TrainType : +String id\n      TrainType : +int averageSpeed\n      TrainType : +int confortClass\n      TrainType : +int economyClass\n\t class TravelInfo\n      TravelInfo : +String trainTypeId\n      TravelInfo : +Date startingTime\n      TravelInfo : +String tripId\n      TravelInfo : +String routeId\n      TravelInfo : +String terminalStationId\n      TravelInfo : +String stationsId\n      TravelInfo : +Date endTime\n      TravelInfo : +String startingStationId\n\t class AdminTrip\n\t class SoldTicket\n      SoldTicket : +int noSeat\n      SoldTicket : +Date travelDate\n      SoldTicket : +int secondClassSeat\n      SoldTicket : +int businessSeat\n      SoldTicket : +int hardSeat\n      SoldTicket : +int firstClassSeat\n      SoldTicket : +int hardBed\n      SoldTicket : +int softBed\n      SoldTicket : +int highSoftBed\n      SoldTicket : +String trainNumber\n      SoldTicket : +int softSeat\n\t class TripResponse\n      TripResponse : +String priceForConfortClass\n      TripResponse : +int economyClass\n      TripResponse : +String trainTypeId\n      TripResponse : +Date startingTime\n      TripResponse : +String terminalStation\n      TripResponse : +Date endTime\n      TripResponse : +int confortClass\n      TripResponse : +String priceForEconomyClass\n      TripResponse : +String startingStation\n'},{name:"ts-admin-order-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class Order\n      Order : +String to\n      Order : +String seatNumber\n      Order : +String price\n      Order : +Date boughtDate\n      Order : +String trainNumber\n      Order : +String from\n      Order : +int documentType\n      Order : +int seatClass\n      Order : +Date travelDate\n      Order : +String contactsDocumentNumber\n      Order : +Date travelTime\n      Order : +UUID id\n      Order : +int coachNumber\n      Order : +int status\n      Order : +UUID accountId\n      Order : +String contactsName\n"},{name:"ts-admin-travel-service",noBoundedContext:!1,notJava:!1,boundedContext:'classDiagram\nTrip "*" --\x3e "1" TripId\nAdminTrip "*" --\x3e "1" Trip\nAdminTrip "*" --\x3e "1" Route\nAdminTrip "*" --\x3e "1" TrainType\n\t class TravelInfo\n      TravelInfo : +String loginId\n      TravelInfo : +String trainTypeId\n      TravelInfo : +Date startingTime\n      TravelInfo : +String tripId\n      TravelInfo : +String routeId\n      TravelInfo : +String terminalStationId\n      TravelInfo : +String stationsId\n      TravelInfo : +Date endTime\n      TravelInfo : +String startingStationId\n\t class TrainType\n      TrainType : +int economyClass\n      TrainType : +String id\n      TrainType : +int confortClass\n      TrainType : +int averageSpeed\n\t class TripId\n      TripId : +Type type\n      TripId : +String number\n\t class Trip\n      Trip : +String trainTypeId\n      Trip : +Date startingTime\n      Trip : +String routeId\n      Trip : +String terminalStationId\n      Trip : +String stationsId\n      Trip : +Date endTime\n      Trip : +String startingStationId\n\t class AdminTrip\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n'},{name:"ts-admin-route-service",noBoundedContext:!1,notJava:!1,boundedContext:"classDiagram\n\t class RouteInfo\n      RouteInfo : +String endStation\n      RouteInfo : +String loginId\n      RouteInfo : +String id\n      RouteInfo : +String stationList\n      RouteInfo : +String startStation\n      RouteInfo : +String distanceList\n\t class Route\n      Route : +String startStationId\n      Route : +String id\n      Route : +String stations\n      Route : +Integer distances\n      Route : +String terminalStationId\n"},{name:"ts-news-service",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"ts-ui-dashboard",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"ts-ticket-office-service",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"image",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"deployment",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"ts-voucher-service",noBoundedContext:!0,notJava:!0,boundedContext:null},{name:"jenkins-ci",noBoundedContext:!0,notJava:!0,boundedContext:null}]},ie=t(58),oe=Object(te.a)((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ae,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"setGithubUrl":return Object(ie.a)({},e,{githubUrl:n.githubUrl});case"setGlobal":return Object(ie.a)({},e,{global:n.global});case"setMs":return Object(ie.a)({},e,{ms:n.ms});case"startLoading":return Object(ie.a)({},e,{loading:!0});case"stopLoading":return Object(ie.a)({},e,{loading:!1});case"showGitError":return Object(ie.a)({},e,{gitError:!0});case"hideGitError":return Object(ie.a)({},e,{gitError:!1});default:return e}}),ae,Object(re.a)((function(e){var n=e.getState;return function(e){return function(t){var r=e(t);return localStorage.setItem("prophetkey2020",JSON.stringify(n())),r}}}))),se=oe.dispatch,le=oe.useGlobalState,ce=Object(S.a)((function(e){return Object(E.a)({root:{flexGrow:1},paper:{padding:e.spacing(2)}})})),de=function(){var e=ce(),n=le("sutPath"),t=Object(D.a)(n,2),r=t[0],i=t[1],o=le("sutError"),s=Object(D.a)(o,1)[0],l=le("idePath"),c=Object(D.a)(l,2),d=c[0],u=c[1],g=le("ideError"),p=Object(D.a)(g,1)[0];return a.a.createElement(h.a,{className:e.paper},a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(w.a,{m:1},a.a.createElement("form",{noValidate:!0,autoComplete:"off",onSubmit:function(e){return Z.a.async((function(e){for(;;)switch(e.prev=e.next){case 0:case"end":return e.stop()}}))}},a.a.createElement(ne.a,{id:"sutPath-url",error:s,label:"Path to System Under Test",type:"text",style:{margin:8},placeholder:"/home/user/dev/sut/path",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0},value:r,onChange:function(e){i(e.target.value)},helperText:s&&a.a.createElement("p",null,"Path does not exist!")}),a.a.createElement(ne.a,{id:"idePath-url",error:p,label:"Path to IDE",type:"text",style:{margin:8},placeholder:"Path to IDE",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0},value:d,onChange:function(e){u(e.target.value)},helperText:p&&a.a.createElement("p",null,"Repository does not exist!")}),a.a.createElement(Q.a,{variant:"contained",color:"primary",type:"submit"},"Analyze"))))))},ue=function(){var e=f();return Object(r.useEffect)((function(){})),a.a.createElement("div",null,a.a.createElement("div",{className:e.content},a.a.createElement(de,null),a.a.createElement(X,{cloneList:[{a:{msController:{msId:{path:"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},classId:"preserve.controller.PreserveController",packageName:"preserve.controller",className:"PreserveController",role:"CONTROLLER"},msControllerMethod:{msId:{path:"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},returnType:"HttpEntity",methodName:"preserve",className:"PreserveController",packageName:"preserve.controller",methodId:"preserve.controller.PreserveController.preserve",classId:"preserve.controller.PreserveController",line:31,msArgumentList:[{returnType:"OrderTicketsInfo"},{returnType:"HttpHeaders"}],msAnnotations:[{isHttpAnnotation:!0,annotationName:"CrossOrigin",key:"origins",value:'"*"'},{isHttpAnnotation:!0,annotationName:"PostMapping",key:"value",value:'"/preserve"'}]},msServiceMethodCall:{msId:{path:"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},parentPackageName:"preserve.controller",parentClassName:"PreserveController",parentMethodName:"preserve",parentClassId:"preserve.controller.PreserveController",lineNumber:36,calledMethodName:"preserve",calledServiceId:"preserveService",statementDeclaration:"preserveService.preserve(oti, headers)"},msControllerServiceField:{msId:{path:"/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},fieldClass:"PreserveService",fieldVariable:"preserveService",parentMethod:{parentClassName:"PreserveController",parentPackageName:"preserve.controller"},line:21},msService:{msId:{path:"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},classId:"preserve.service.PreserveServiceImpl",packageName:"preserve.service",className:"PreserveServiceImpl",role:"SERVICE"},msServiceMethod:{msId:{path:"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},returnType:"Response",methodName:"preserve",className:"PreserveServiceImpl",packageName:"preserve.service",methodId:"preserve.service.PreserveServiceImpl.preserve",classId:"preserve.service.PreserveServiceImpl",line:30,msArgumentList:[{returnType:"OrderTicketsInfo"},{returnType:"HttpHeaders"}],msAnnotations:[{isHttpAnnotation:!1,annotationName:"Override"}]},msRestCalls:[{api:'"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo"',httpMethod:"POST",returnType:"TravelResult",msId:{path:"/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java",directoryName:"/ts-preserve-service/src/main/java/preserve"},parentPackageName:"preserve.service",parentClassName:"PreserveServiceImpl",parentMethodName:"preserve",parentClassId:"preserve.service.PreserveServiceImpl",lineNumber:110,statementDeclaration:'restTemplate.exchange("http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo", HttpMethod.POST, requestEntity, new ParameterizedTypeReference<Response<TravelResult>>() {\n})'}]},b:{msController:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},classId:"preserveOther.controller.PreserveOtherController",packageName:"preserveOther.controller",className:"PreserveOtherController",role:"CONTROLLER"},msControllerMethod:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},returnType:"HttpEntity",methodName:"preserve",className:"PreserveOtherController",packageName:"preserveOther.controller",methodId:"preserveOther.controller.PreserveOtherController.preserve",classId:"preserveOther.controller.PreserveOtherController",line:31,msArgumentList:[{returnType:"OrderTicketsInfo"},{returnType:"HttpHeaders"}],msAnnotations:[{isHttpAnnotation:!0,annotationName:"CrossOrigin",key:"origins",value:'"*"'},{isHttpAnnotation:!0,annotationName:"PostMapping",key:"value",value:'"/preserveOther"'}]},msServiceMethodCall:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},parentPackageName:"preserveOther.controller",parentClassName:"PreserveOtherController",parentMethodName:"preserve",parentClassId:"preserveOther.controller.PreserveOtherController",lineNumber:36,calledMethodName:"preserve",calledServiceId:"preserveService",statementDeclaration:"preserveService.preserve(oti, headers)"},msControllerServiceField:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},fieldClass:"PreserveOtherService",fieldVariable:"preserveService",parentMethod:{parentClassName:"PreserveOtherController",parentPackageName:"preserveOther.controller"},line:21},msService:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},classId:"preserveOther.service.PreserveOtherServiceImpl",packageName:"preserveOther.service",className:"PreserveOtherServiceImpl",role:"SERVICE"},msServiceMethod:{msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},returnType:"Response",methodName:"preserve",className:"PreserveOtherServiceImpl",packageName:"preserveOther.service",methodId:"preserveOther.service.PreserveOtherServiceImpl.preserve",classId:"preserveOther.service.PreserveOtherServiceImpl",line:30,msArgumentList:[{returnType:"OrderTicketsInfo"},{returnType:"HttpHeaders"}],msAnnotations:[{isHttpAnnotation:!1,annotationName:"Override"}]},msRestCalls:[{api:'"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo"',httpMethod:"POST",returnType:"TravelResult",msId:{path:"/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java",directoryName:"/ts-preserve-other-service/src/main/java/preserveOther"},parentPackageName:"preserveOther.service",parentClassName:"PreserveOtherServiceImpl",parentMethodName:"preserve",parentClassId:"preserveOther.service.PreserveOtherServiceImpl",lineNumber:118,statementDeclaration:'restTemplate.exchange("http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo", HttpMethod.POST, requestEntity, new ParameterizedTypeReference<Response<TravelResult>>() {\n})'}]},similarityController:1,similarityService:.5,similarityRepository:0,similarityRestCalls:1,globalSimilarity:.925,typeA:!0,typeB:!1}]})))},ge=function(){var e=le("global"),n=Object(D.a)(e,1)[0];return Object(r.useEffect)((function(){}),[n]),a.a.createElement(a.a.Fragment,null)},pe=t(303),me=t.n(pe),Se=function(){var e=le("loading"),n=Object(D.a)(e,1)[0],t=f();return a.a.createElement(a.a.Fragment,null,n&&a.a.createElement(me.a,{active:n,spinner:!0,className:t.overlay,text:"Loading graphs"},a.a.createElement("p",null)))},Te={setGithubUrl:function(e){se({githubUrl:e,type:"setGithubUrl"})},setProphetResponse:function(e,n){se({global:e,type:"setGlobal"}),se({ms:n,type:"setMs"})},startLoading:function(){se({type:"startLoading"})},stopLoading:function(){se({type:"stopLoading"})},hideGitError:function(){se({type:"hideGitError"})},showGitError:function(){se({type:"showGitError"})}},fe="https://api.github.com/",Ie={getAllReposFromOrganization:function(e){var n,t;return Z.a.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,Z.a.awrap(fetch(fe+"users/"+e+"/repos",{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"}}));case 2:if(null==(n=r.sent)){r.next=10;break}return r.next=6,Z.a.awrap(n.json());case 6:return t=r.sent,r.abrupt("return",t);case 10:return console.log("server error"),r.abrupt("return",[]);case 12:case"end":return r.stop()}}))},getOrganizationDetail:function(e){var n;return Z.a.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Z.a.awrap(fetch(fe+"users/"+e,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"}}));case 2:if(null==(n=t.sent)){t.next=9;break}return t.next=6,Z.a.awrap(n.json());case 6:t.sent,t.next=10;break;case 9:console.log("server error");case 10:case"end":return t.stop()}}))},getRepositoryDetail:function(e,n){var t;return Z.a.async((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,Z.a.awrap(fetch(fe+"repos/"+e+"/"+n,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"}}));case 2:if(null==(t=r.sent)){r.next=11;break}if(t.ok){r.next=6;break}return r.abrupt("return",null);case 6:return r.next=8,Z.a.awrap(t.json());case 8:return r.abrupt("return",r.sent);case 11:return r.abrupt("return",null);case 12:case"end":return r.stop()}}))}},ve={get:function(e){var n;return Z.a.async((function(t){for(;;)switch(t.prev=t.next){case 0:return this.startLoading(),t.next=3,Z.a.awrap(this.getGit(e));case 3:if(null!=t.sent){t.next=7;break}return this.showErrors(),t.abrupt("return");case 7:return t.next=9,Z.a.awrap(this.getProphetData(e));case 9:if(null==(n=t.sent)){t.next=16;break}return t.next=13,Z.a.awrap(this.handleBody(n));case 13:return t.abrupt("return",t.sent);case 16:return t.abrupt("return",this.stopLoading());case 17:case"end":return t.stop()}}),null,this)},getProphetData:function(e){return Z.a.async((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Z.a.awrap(fetch("http://127.0.0.1:8081/",{method:"POST",body:JSON.stringify({repositories:[{path:e,isMonolith:!0}],systemName:"tms"}),headers:{"Content-Type":"application/json",Accept:"application/json"}}));case 2:return n.abrupt("return",n.sent);case 3:case"end":return n.stop()}}))},handleBody:function(e){var n;return Z.a.async((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Z.a.awrap(e.json());case 2:return n=t.sent,Te.setProphetResponse(n.global,n.ms),setTimeout((function(){}),3e3),Te.stopLoading(),t.abrupt("return",n);case 7:case"end":return t.stop()}}))},stopLoading:function(){return console.log("server error"),Te.stopLoading(),[]},showErrors:function(){Te.stopLoading(),Te.showGitError()},startLoading:function(){Te.startLoading(),Te.hideGitError()},getGit:function(e){var n;return Z.a.async((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.split("/"),t.next=3,Z.a.awrap(Ie.getRepositoryDetail(n[0],n[1]));case 3:return t.abrupt("return",t.sent);case 4:case"end":return t.stop()}}))}},ye=function(e){var n=le("githubUrl"),t=Object(D.a)(n,2),r=t[0],i=t[1],o=le("gitError"),s=Object(D.a)(o,1)[0];return a.a.createElement(w.a,{m:1},a.a.createElement("form",{noValidate:!0,autoComplete:"off",onSubmit:function(e){return Z.a.async((function(n){for(;;)switch(n.prev=n.next){case 0:return e.preventDefault(),n.next=3,Z.a.awrap(ve.get(r));case 3:case"end":return n.stop()}}))}},a.a.createElement(ne.a,{id:"github-url",error:s,label:"Repository URL (GitHub /organization/repository)",type:"text",style:{margin:8},placeholder:"GitHub URL here",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0},value:r,onChange:function(e){i(e.target.value)},helperText:s&&a.a.createElement("p",null,"Repository does not exist!")}),a.a.createElement(Q.a,{variant:"contained",color:"primary",type:"submit"},"Analyze")))},Ce=function(e){var n=e.conf,t=le("githubUrl"),r=Object(D.a)(t,2),i=(r[0],r[1]),o=a.a.createElement(a.a.Fragment,null,a.a.createElement(ye,{conf:n})),s=a.a.createElement(a.a.Fragment,null,a.a.createElement("span",null,"Example: "),a.a.createElement(k.a,{href:"#",onClick:function(e){e.preventDefault(),i("cloudhubs/tms")}},"cloudhubs/tms"),a.a.createElement("span",null,", "),a.a.createElement(k.a,{href:"#",onClick:function(e){e.preventDefault(),i("FudanSELab/train-ticket")}},"FudanSELab/train-ticket"));return a.a.createElement(a.a.Fragment,null,o,s)},De=function(){var e=le("request"),n=Object(D.a)(e,1)[0];return a.a.createElement(a.a.Fragment,null,a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(y.a,{component:"h4",variant:"h4"},"Repository"),n.repositories.map((function(e){return a.a.createElement(a.a.Fragment,null,a.a.createElement(Ce,{conf:e}))})))))},he=t(130),be=t(56),Oe=t(304),Re=t(305),Ne=t(308),Ue=t(91),ke=t.n(Ue);ke.a.initialize({startOnLoad:!0});var Pe,Ee=function(e){function n(){var e,t;Object(he.a)(this,n);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return(t=Object(Oe.a)(this,(e=Object(Re.a)(n)).call.apply(e,[this].concat(a)))).state={chart:t.props.chart,index:t.props.index.toString()},t}return Object(Ne.a)(n,e),Object(be.a)(n,[{key:"componentDidMount",value:function(){this.generateGraph()}},{key:"componentDidUpdate",value:function(e){e.chart!==this.props.chart&&this.generateGraph()}},{key:"generateGraph",value:function(){var e=document.getElementById(this.state.index),n=this.props.chart;ke.a.parse(n),ke.a.render("theGraph"+this.state.index,n,(function(n){e.innerHTML=n})),ke.a.contentLoaded()}},{key:"render",value:function(){return a.a.createElement("div",{id:this.state.index})}}]),n}(a.a.Component),Ae=function(e){var n=a.a.createElement(a.a.Fragment,null,a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(y.a,{component:"h4",variant:"h4"},"Communication Diagram"),a.a.createElement("div",{style:{overflow:"auto"}},a.a.createElement(Ee,{chart:e.global.communication,index:0}))))),t=a.a.createElement(a.a.Fragment,null,a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(y.a,{component:"h4",variant:"h4"},"Context Map"),a.a.createElement("div",{style:{overflow:"auto"}},a.a.createElement(Ee,{chart:e.global.contextMap,index:1})))));return a.a.createElement(a.a.Fragment,null,n,t)},xe=function(e){var n=e.ms.notJava,t=e.ms.noBoundedContext,r=a.a.createElement(a.a.Fragment,null,e.ms.name),i=a.a.createElement(a.a.Fragment,null,a.a.createElement("p",null,"Microservice does not support Spring Annotations, more: ",a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-web/wiki/Prophet-Language-Support",target:"_blank"},"Prophet-Language-Support"))),o=a.a.createElement(a.a.Fragment,null,a.a.createElement("p",null,"Microservice does not have model, more: ",a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-web/wiki/Prophet-Data-Model-Support",target:"_blank"},"Prophet-Data-Model-Support"))),s=a.a.createElement(a.a.Fragment,null,a.a.createElement(Ee,{chart:e.ms.boundedContext,index:e.index}));return a.a.createElement(a.a.Fragment,null,a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(y.a,{component:"h4",variant:"h4"},r),a.a.createElement("div",{style:{overflow:"auto"}},n?i:a.a.createElement(a.a.Fragment,null),t?o:a.a.createElement(a.a.Fragment,null),!e.ms.notJava&&!e.ms.noBoundedContext&&s))))},Fe=function(){var e=le("global"),n=Object(D.a)(e,1)[0],t=le("ms"),r=Object(D.a)(t,1)[0],i=le("gitError"),o=Object(D.a)(i,1)[0];return a.a.createElement(a.a.Fragment,null,!o&&a.a.createElement(a.a.Fragment,null,a.a.createElement(Ae,{global:n}),r.map((function(e,n){return a.a.createElement(xe,{ms:e,index:n+2})}))))},Be=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(J.a,{style:{marginBottom:"20px"}},a.a.createElement(ee.a,null,a.a.createElement(y.a,{component:"h4",variant:"h4"},"Welcome to Prophet!"),a.a.createElement("p",null,"Prophet is a microservice analysis platform that automatically extracts class diagrams and communication diagrams from a microservice system. The different components of Prophet are available here:",a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-web"},"Frontend")),a.a.createElement("li",null,a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-utils-app"},"Backend server")),a.a.createElement("li",null,a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-utils"},"Backend utils")),a.a.createElement("li",null,a.a.createElement("a",{href:"https://github.com/cloudhubs/prophet-dto"},"Backend classes")))))))},je=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(w.a,{m:2},a.a.createElement(Be,null),a.a.createElement(De,null),a.a.createElement(Fe,null)))},Me=t(683),we=function(){var e=a.a.useState("recents"),n=Object(D.a)(e,2),t=n[0],r=n[1];f();return a.a.createElement(a.a.Fragment,null,a.a.createElement(Me.a,{value:t,onChange:function(e,n){r(n)}}))},Le=function(){var e=f();return a.a.createElement("div",null,a.a.createElement(ge,null),a.a.createElement(Se,null),a.a.createElement(C,null),a.a.createElement("div",{className:e.content},a.a.createElement(je,null)),a.a.createElement("div",{className:e.footer},a.a.createElement(we,null)))},Ge=function(){var e=f();return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:e.content},a.a.createElement(X,{cloneList:[{a:{msController:{msId:{path:"/cms/src/main/java/edu/baylor/ecs/cms/controller/ConfigurationController.java",directoryName:""},classId:"edu.baylor.ecs.cms.controller.ConfigurationController",packageName:"edu.baylor.ecs.cms.controller",className:"ConfigurationController",role:"CONTROLLER",code:""},msControllerMethod:{msId:{path:"/cms/src/main/java/edu/baylor/ecs/cms/controller/ConfigurationController.java",directoryName:""},code:'@CrossOrigin\n    @DeleteMapping("/{configurationId}")\n    public ResponseEntity<?> deleteConfiguration(@PathVariable Long configurationId) {\n        return qmsService.deleteConfiguration(configurationId);\n    }',returnType:"ResponseEntity<?>",methodName:"deleteConfiguration",className:"ConfigurationController",packageName:"edu.baylor.ecs.cms.controller",methodId:"edu.baylor.ecs.cms.controller.ConfigurationController.deleteConfiguration",classId:"edu.baylor.ecs.cms.controller.ConfigurationController",line:40,msArgumentList:[{returnType:"Long"}],msAnnotations:[{isHttpAnnotation:!1,annotationName:"CrossOrigin"},{isHttpAnnotation:!1,annotationName:"DeleteMapping"}]},msServiceMethodCall:{msId:{path:"/cms/src/main/java/edu/baylor/ecs/cms/controller/ConfigurationController.java",directoryName:""},code:"qmsService.deleteConfiguration(configurationId)",parentPackageName:"edu.baylor.ecs.cms.controller",parentClassName:"ConfigurationController",parentMethodName:"deleteConfiguration",parentClassId:"edu.baylor.ecs.cms.controller.ConfigurationController",lineNumber:43,calledMethodName:"deleteConfiguration",calledServiceId:"qmsService",statementDeclaration:"qmsService.deleteConfiguration(configurationId)"},msControllerServiceField:{msId:{path:"/cms/src/main/java/edu/baylor/ecs/cms/controller/ConfigurationController.java",directoryName:""},code:"@Autowired\n    private QmsService qmsService;",fieldClass:"QmsService",fieldVariable:"qmsService",parentMethod:{parentClassName:"ConfigurationController",parentPackageName:"edu.baylor.ecs.cms.controller"},line:13}},b:{msController:{msId:{path:"/qms/src/main/java/baylor/csi/questionManagement/controller/ConfigurationController.java",directoryName:""},classId:"baylor.csi.questionManagement.controller.ConfigurationController",packageName:"baylor.csi.questionManagement.controller",className:"ConfigurationController",role:"CONTROLLER",code:""},msControllerMethod:{msId:{path:"/qms/src/main/java/baylor/csi/questionManagement/controller/ConfigurationController.java",directoryName:""},code:'@CrossOrigin\n    @DeleteMapping("/{configurationId}")\n    public ResponseEntity<?> deleteConfiguration(@PathVariable Long configurationId) {\n        return configurationRepository.findById(configurationId)\n                .map(configuration -> {\n                    configurationRepository.delete(configuration);\n                    return ResponseEntity.ok().build();\n                }).orElseThrow(() -> new ResourceNotFoundException("Configuration not found with id " + configurationId));\n    }',returnType:"ResponseEntity<?>",methodName:"deleteConfiguration",className:"ConfigurationController",packageName:"baylor.csi.questionManagement.controller",methodId:"baylor.csi.questionManagement.controller.ConfigurationController.deleteConfiguration",classId:"baylor.csi.questionManagement.controller.ConfigurationController",line:45,msArgumentList:[{returnType:"Long"}],msAnnotations:[{isHttpAnnotation:!1,annotationName:"CrossOrigin"},{isHttpAnnotation:!1,annotationName:"DeleteMapping"}]},msServiceMethodCall:{msId:{path:"/qms/src/main/java/baylor/csi/questionManagement/controller/ConfigurationController.java",directoryName:""},code:"configurationRepository.delete(configuration)",parentPackageName:"baylor.csi.questionManagement.controller",parentClassName:"ConfigurationController",parentMethodName:"deleteConfiguration",parentClassId:"baylor.csi.questionManagement.controller.ConfigurationController",lineNumber:50,calledMethodName:"delete",calledServiceId:"configurationRepository",statementDeclaration:"configurationRepository.delete(configuration)"},msControllerServiceField:{msId:{path:"/qms/src/main/java/baylor/csi/questionManagement/controller/ConfigurationController.java",directoryName:""},code:"@Autowired\n    private ConfigurationRepository configurationRepository;",fieldClass:"ConfigurationRepository",fieldVariable:"configurationRepository",parentMethod:{parentClassName:"ConfigurationController",parentPackageName:"baylor.csi.questionManagement.controller"},line:22}},similarityController:1,similarityService:0,similarityRepository:0,similarityRestCalls:0,globalSimilarity:.8,typeA:!1,typeB:!0}]})))},Je=(Pe=function(){var e=f(),n=Object(p.a)();return r.createElement("div",{className:e.root},r.createElement(c.a,null),r.createElement(C,null),r.createElement(u.a,{theme:m},r.createElement(s.a,{history:n,basename:"/"},r.createElement(l.c,null,r.createElement(l.a,{exact:!0,path:"/train-ticket",component:ue}),r.createElement(l.a,{exact:!0,path:"/tms2020",component:Ge}),r.createElement(l.a,{exact:!0,path:"/",component:Le})))))},function(e){return r.createElement(u.a,{theme:g},r.createElement(c.a,null),r.createElement(Pe,e))});Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(a.a.createElement(Je,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[324,152,153]]]);
//# sourceMappingURL=main.16037416.chunk.js.map