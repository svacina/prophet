{"version":3,"sources":["withRoot.tsx","prophetTheme.ts","prophetStyles.ts","components/main/AppHeader.tsx","state/initState.ts","state/defaultState.ts","state/appState.ts","state/reducer.ts","http/OpenAppData.tsx","state/ActionsRegister.ts","http/AnalyzeAppData.tsx","cc/components/main/AppSetup.tsx","cc/components/clones/CloneSummary.tsx","cc/components/clones/CloneLink.tsx","cc/utils/CodeSnippet.tsx","cc/components/clones/ClonePairMain.tsx","cc/components/clones/CodeCloneList.tsx","cc/utils/CodeAccordion.tsx","cc/components/inconsistencies/AnnotationFieldTable.tsx","cc/components/inconsistencies/FieldTable.tsx","cc/components/inconsistencies/Entity.tsx","cc/components/inconsistencies/EntityCluster.tsx","cc/components/inconsistencies/InconsistencyList.tsx","cc/components/main/AppData.tsx","state/EffectsRegister.tsx","shared/LoadingIndicator.tsx","cc/components/main/ProphetApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","prophetTheme","prophetStyles","makeStyles","root","display","flexDirection","minHeight","menuButton","marginRight","spacing","marginTop","marginBottom","footer","backgroundColor","type","grey","content","flexGrow","padding","background","default","box","border","borderRadius","boxShadow","appBar","zIndex","overlay","position","width","height","flexAlign","flexPack","boxes_root","margin","boxes_paper","inconsistency_box","entity_item","AppHeader","classes","Fragment","CssBaseline","AppBar","className","Toolbar","Typography","variant","noWrap","initialState","str","JSON","parse","e","parseState","localStorage","getItem","createStore","state","action","githubUrl","global","ms","loading","gitError","applyMiddleware","getState","next","returnValue","setItem","stringify","dispatch","useGlobalState","OpenAppData","open","sutPath","idePath","ideExe","this","queryServer","response","handleBody","requestOptions","method","headers","body","fetch","then","json","data","console","log","ActionsRegister","setGithubUrl","setProphetResponse","startLoading","stopLoading","hideGitError","showGitError","AnalyzeAppData","analyze","getData","sutRoot","dataOutputPath","logResults","logStats","Accept","showErrors","useStyles","createStyles","paper","AppSetup","sutPathUrl","sutError","setIdePath","ideError","setIdeExe","ideExeError","setAnalyzedData","Paper","Card","style","CardContent","Box","m","noValidate","autoComplete","onSubmit","a","async","preventDefault","TextField","id","error","label","placeholder","fullWidth","InputLabelProps","shrink","value","onChange","target","helperText","Button","color","CloneSummary","props","gutterBottom","typeA","typeB","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","fontWeight","align","TableBody","key","scope","similarityController","similarityService","similarityRestCalls","globalSimilarity","CloneLink","link","heading","Link","href","onClick","event","split","length","CodeSnippet","code","language","showLineNumbers","text","dracula","ClonePairMain","React","useState","showResults","setShowResults","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","clonePair","msController","packageName","b","AccordionDetails","Grid","container","item","xs","similarityRepository","justify","msId","path","msControllerMethod","line","msService","msServiceMethod","msRepository","msRepositoryMethod","returnType","methodName","msArgumentList","map","n","msAnnotations","annotationName","mt","isKey","CodeCloneList","undefined","cloneList","CodeAccordion","setValue","AnnotationFieldTable","entity","fields","field","missingAnnotations","annotation","FieldTable","missingFields","name","annotationsHashSet","Entity","hasMissingFiledAnnotations","mb","document","EntityCluster","entityCluster","msEntities","InconsistencyList","inconsistencyList","hasMissingField","TabPanel","children","index","other","role","hidden","aria-labelledby","p","a11yProps","Component","AppData","analyzedData","isEmpty","flag","forEach","entry","entry2","isInconsistencyEmpty","inconsistencies","Tabs","newValue","Tab","EffectsRegister","useEffect","LoadingIndicator","active","spinner","ProphetApp","withRoot","history","createBrowserHistory","ThemeProvider","basename","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6689899e.chunk.js","sourcesContent":["import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#e5e5e5\",\n            main: \"#727272\",\n            dark: \"#363839\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff5e50\",\n            main: \"#e41e26\",\n            dark: \"#a90000\",\n            contrastText: \"#fff\",\n        },\n    },\n});\n\nexport function withRoot(Component: any) {\n    function WithRoot(props: object) {\n        // MuiThemeProvider makes the theme available down the React tree\n        // thanks to React context.\n        return (\n            <ThemeProvider theme={theme}>\n                {/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n                <CssBaseline />\n                <Component {...props} />\n            </ThemeProvider>\n        );\n    }\n\n    return WithRoot;\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst prophetTheme = createMuiTheme({\n    palette: {\n        primary: {\n            // light: will be calculated from palette.primary.main,\n            main: '#0f4395',\n            // dark: will be calculated from palette.primary.main,\n            // contrastText: will be calculated to contrast with palette.primary.main\n        },\n        secondary: {\n            light: '#0066ff',\n            main: '#0044ff',\n            // dark: will be calculated from palette.secondary.main,\n            contrastText: '#ffcc00',\n        },\n        // error: will use the default color\n    },\n});\n\nexport default prophetTheme;\n","import {makeStyles} from \"@material-ui/core\";\nimport prophetTheme from \"./prophetTheme\";\n\n//import theme\nconst theme = prophetTheme;\n\n/**\n * Create global styles for application\n */\nconst prophetStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    main: {\n        marginTop: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n    },\n    footer: {\n        // padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n    },\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(8, 0, 6),\n        backgroundColor: theme.palette.background.default\n    },\n    box: {\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px',\n        padding: '12px 30px',\n    },\n    appBar: {\n        backgroundColor: theme.palette.primary.main,\n        zIndex:1\n    },\n    overlay: {\n        position: 'fixed',\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0,0,0,0.3)',\n        display: 'flexbox',\n        flexAlign: 'center',\n        flexPack: 'center',\n        zIndex:2\n    },\n    boxes_root: {\n        flexGrow: 1,\n        margin: theme.spacing(2),\n    },\n    boxes_paper: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    inconsistency_box: {\n        margin: theme.spacing(2),\n    },\n    entity_item: {\n        padding: theme.spacing(2)\n    }\n\n});\n\nexport default prophetStyles;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport prophetStyles from \"../../prophetStyles\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\n/**\n *\n * @constructor\n *\n */\nconst AppHeader = () => {\n\n    const classes = prophetStyles();\n    // const history = useHistory();\n\n    // const onTrainTicket = async (event: React.MouseEvent<HTMLElement>) => {\n    //     event.preventDefault();\n    //     history.push(\"/train-ticket\");\n    // }\n    //\n    // const onTms2020 = async (event: React.MouseEvent<HTMLElement>) => {\n    //     event.preventDefault();\n    //     history.push(\"/tms2020\");\n    // }\n\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap>\n                        Prophet\n                    </Typography>\n                    {/*<Button color=\"inherit\" onClick={(event: React.MouseEvent<HTMLElement>) => {onTrainTicket(event)}}>Train Ticket</Button>*/}\n                    {/*<Button color=\"inherit\" onClick={(event: React.MouseEvent<HTMLElement>) => {onTms2020(event)}}>TMS 2020</Button>*/}\n                    {/*<Router>*/}\n                    {/*    <Button color=\"inherit\">*/}\n                    {/*        <Link to=\"/tms2020\">About</Link>*/}\n\n                    {/*    </Button>*/}\n                    {/*    <Link to=\"/train-ticket\">Users</Link>*/}\n                    {/*</Router>*/}\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\nexport default AppHeader;\n","import {State} from \"./state\";\nimport {defaultState} from \"./defaultState\";\n\nexport const LOCAL_STORAGE_KEY = \"prophetkey2020\";\nexport const parseState = (str: string | null): State | null => {\n    try {\n        const state = JSON.parse(str || \"\");\n        return state as State;\n    } catch (e) {\n        return null;\n    }\n};\n\nconst stateFromStorage = parseState(localStorage.getItem(LOCAL_STORAGE_KEY));\n\nexport const initialState: State = stateFromStorage || defaultState;\n","import {State} from \"./state\";\n\nexport const defaultState: State = {\n    \"sutPath\": \"\",\n    \"sutError\" : false,\n    \"idePath\": \"\",\n    \"ideError\" : false,\n    \"ideExe\": \"\",\n    \"ideExeError\" : false,\n    \"analyzedData\": {},\n    \"gitError\": false,\n    \"githubUrl\":\"FudanSELab/train-ticket\",\n    \"loading\": false,\n    \"request\": {\n        \"repositories\": [\n            {\n                \"path\": \"cloudhubs/train-ticket\",\n                \"isMonolith\": true,\n                \"index\": 0,\n                \"repoDetail\":\"cloudhubs/train-ticket\"\n            }\n        ],\n        \"systemName\" : \"tms\"\n    },\n    \"global\": {\n        \"projectName\": \"tms\",\n        \"noCommunication\": true,\n        \"communication\": \"graph TD\\nN/A\\n\",\n        \"noContextMap\": false,\n        \"contextMap\": \"classDiagram\\nLeftTicketInfo \\\"*\\\" --> \\\"*\\\" Ticket\\nTransferTravelResult \\\"*\\\" --> \\\"*\\\" TripResponse\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nGetAccountByIdResult \\\"*\\\" --> \\\"1\\\" Account\\nOrderAlterInfo \\\"*\\\" --> \\\"1\\\" Order\\nAllTripFood \\\"*\\\" --> \\\"*\\\" TrainFood\\nTrainFood \\\"*\\\" --> \\\"*\\\" Food\\nFoodStore \\\"*\\\" --> \\\"*\\\" Food\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\nOrderTicketsResult \\\"*\\\" --> \\\"1\\\" Order\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Trip\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Route\\nAdminTrip \\\"*\\\" --> \\\"1\\\" TrainType\\n\\t class LeftTicketInfo\\n\\t class GetOrderByIdInfo\\n      GetOrderByIdInfo : +String orderId\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class NotifyInfo\\n      NotifyInfo : +String date\\n      NotifyInfo : +String startingTime\\n      NotifyInfo : +String seatNumber\\n      NotifyInfo : +String seatClass\\n      NotifyInfo : +String endPlace\\n      NotifyInfo : +String username\\n      NotifyInfo : +String price\\n      NotifyInfo : +String orderNumber\\n      NotifyInfo : +String startingPlace\\n      NotifyInfo : +String email\\n\\t class QueryInfo\\n      QueryInfo : +Date boughtDateEnd\\n      QueryInfo : +String loginId\\n      QueryInfo : +Date travelDateStart\\n      QueryInfo : +boolean enableBoughtDateQuery\\n      QueryInfo : +Date boughtDateStart\\n      QueryInfo : +int state\\n      QueryInfo : +Date travelDateEnd\\n      QueryInfo : +boolean enableTravelDateQuery\\n      QueryInfo : +boolean enableStateQuery\\n\\t class RoutePlanResultUnit\\n      RoutePlanResultUnit : +String toStationName\\n      RoutePlanResultUnit : +String trainTypeId\\n      RoutePlanResultUnit : +String priceForSecondClassSeat\\n      RoutePlanResultUnit : +Date startingTime\\n      RoutePlanResultUnit : +String tripId\\n      RoutePlanResultUnit : +String stopStations\\n      RoutePlanResultUnit : +String priceForFirstClassSeat\\n      RoutePlanResultUnit : +Date endTime\\n      RoutePlanResultUnit : +String fromStationName\\n\\t class Assurance\\n      Assurance : +UUID orderId\\n      Assurance : +AssuranceType type\\n      Assurance : +UUID id\\n\\t class TokenDto\\n      TokenDto : +UUID userId\\n      TokenDto : +String username\\n      TokenDto : +String token\\n      TokenDto : +long serialVersionUID\\n\\t class TransferTravelResult\\n\\t class ConsignPrice\\n      ConsignPrice : +double beyondPrice\\n      ConsignPrice : +UUID id\\n      ConsignPrice : +double initialWeight\\n      ConsignPrice : +double withinPrice\\n      ConsignPrice : +double initialPrice\\n      ConsignPrice : +int index\\n\\t class TravelResult\\n      TravelResult : +String message\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +double percent\\n\\t class GetPriceDomain\\n      GetPriceDomain : +double weight\\n      GetPriceDomain : +boolean isWithinRegion\\n\\t class User\\n      User : +int gender\\n      User : +String userName\\n      User : +UUID userId\\n      User : +String documentType\\n      User : +String password\\n      User : +String email\\n      User : +String documentNum\\n\\t class UserDto\\n      UserDto : +int documentType\\n      UserDto : +String userName\\n      UserDto : +int gender\\n      UserDto : +UUID userId\\n      UserDto : +String password\\n      UserDto : +String documentNum\\n      UserDto : +String email\\n\\t class GetAccountByIdResult\\n      GetAccountByIdResult : +boolean status\\n      GetAccountByIdResult : +String message\\n\\t class PriceInfo\\n      PriceInfo : +String id\\n      PriceInfo : +double basicPriceRate\\n      PriceInfo : +String trainType\\n      PriceInfo : +double firstClassPriceRate\\n      PriceInfo : +String routeId\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class Consign\\n      Consign : +String from\\n      Consign : +String to\\n      Consign : +String phone\\n      Consign : +String handleDate\\n      Consign : +String targetDate\\n      Consign : +boolean isWithin\\n      Consign : +double weight\\n      Consign : +UUID id\\n      Consign : +UUID orderId\\n      Consign : +String consignee\\n      Consign : +UUID accountId\\n\\t class RouteInfo\\n      RouteInfo : +String endStation\\n      RouteInfo : +String id\\n      RouteInfo : +String stationList\\n      RouteInfo : +String startStation\\n      RouteInfo : +String distanceList\\n      RouteInfo : +String loginId\\n\\t class OrderAlterInfo\\n      OrderAlterInfo : +UUID previousOrderId\\n      OrderAlterInfo : +String loginToken\\n      OrderAlterInfo : +UUID accountId\\n\\t class ConsignRecord\\n      ConsignRecord : +String from\\n      ConsignRecord : +String to\\n      ConsignRecord : +String phone\\n      ConsignRecord : +String handleDate\\n      ConsignRecord : +String targetDate\\n      ConsignRecord : +UUID id\\n      ConsignRecord : +double weight\\n      ConsignRecord : +UUID orderId\\n      ConsignRecord : +String consignee\\n      ConsignRecord : +UUID accountId\\n      ConsignRecord : +double price\\n\\t class OutsidePaymentInfo\\n      OutsidePaymentInfo : +String orderId\\n      OutsidePaymentInfo : +String userId\\n      OutsidePaymentInfo : +String price\\n\\t class OrderTicketsInfo\\n      OrderTicketsInfo : +String to\\n      OrderTicketsInfo : +String handleDate\\n      OrderTicketsInfo : +boolean isWithin\\n      OrderTicketsInfo : +double foodPrice\\n      OrderTicketsInfo : +String tripId\\n      OrderTicketsInfo : +int seatType\\n      OrderTicketsInfo : +String consigneeName\\n      OrderTicketsInfo : +String loginToken\\n      OrderTicketsInfo : +Date date\\n      OrderTicketsInfo : +int foodType\\n      OrderTicketsInfo : +int assurance\\n      OrderTicketsInfo : +String from\\n      OrderTicketsInfo : +String foodName\\n      OrderTicketsInfo : +String contactsId\\n      OrderTicketsInfo : +String accountId\\n      OrderTicketsInfo : +double consigneeWeight\\n      OrderTicketsInfo : +String storeName\\n      OrderTicketsInfo : +String stationName\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class PlainAssurance\\n      PlainAssurance : +double typePrice\\n      PlainAssurance : +UUID id\\n      PlainAssurance : +UUID orderId\\n      PlainAssurance : +int typeIndex\\n      PlainAssurance : +String typeName\\n\\t class BasicAuthDto\\n      BasicAuthDto : +String username\\n      BasicAuthDto : +String password\\n      BasicAuthDto : +String verificationCode\\n      BasicAuthDto : +long serialVersionUID\\n\\t class PaymentInfo\\n      PaymentInfo : +String orderId\\n      PaymentInfo : +String price\\n      PaymentInfo : +String userId\\n      PaymentInfo : +String tripId\\n\\t class AllTripFood\\n      AllTripFood : +String,List<FoodStore foodStoreListMap\\n\\t class Food\\n      Food : +String foodName\\n      Food : +double price\\n\\t class GetAccountByIdInfo\\n      GetAccountByIdInfo : +String accountId\\n\\t class SoldTicket\\n      SoldTicket : +int noSeat\\n      SoldTicket : +Date travelDate\\n      SoldTicket : +int secondClassSeat\\n      SoldTicket : +int businessSeat\\n      SoldTicket : +int hardSeat\\n      SoldTicket : +int firstClassSeat\\n      SoldTicket : +int hardBed\\n      SoldTicket : +int softBed\\n      SoldTicket : +int highSoftBed\\n      SoldTicket : +String trainNumber\\n      SoldTicket : +int softSeat\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class AuthDto\\n      AuthDto : +String userId\\n      AuthDto : +String password\\n      AuthDto : +String userName\\n\\t class Payment\\n      Payment : +String price\\n      Payment : +PaymentType type\\n      Payment : +String orderId\\n      Payment : +String userId\\n      Payment : +String id\\n\\t class Station\\n      Station : +String name\\n      Station : +String id\\n      Station : +int stayTime\\n\\t class TrainFood\\n      TrainFood : +String tripId\\n      TrainFood : +UUID id\\n\\t class Config\\n      Config : +String value\\n      Config : +String name\\n      Config : +String description\\n\\t class RoutePlanInfo\\n      RoutePlanInfo : +String toStationName\\n      RoutePlanInfo : +int num\\n      RoutePlanInfo : +Date travelDate\\n      RoutePlanInfo : +String formStationName\\n\\t class FoodStore\\n      FoodStore : +String telephone\\n      FoodStore : +UUID id\\n      FoodStore : +String storeName\\n      FoodStore : +String businessTime\\n      FoodStore : +String stationId\\n      FoodStore : +double deliveryFee\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class TravelInfo\\n      TravelInfo : +String trainTypeId\\n      TravelInfo : +String loginId\\n      TravelInfo : +Date startingTime\\n      TravelInfo : +String tripId\\n      TravelInfo : +String routeId\\n      TravelInfo : +String terminalStationId\\n      TravelInfo : +String stationsId\\n      TravelInfo : +Date endTime\\n      TravelInfo : +String startingStationId\\n\\t class Balance\\n      Balance : +String userId\\n      Balance : +String balance\\n\\t class TripAllDetail\\n      TripAllDetail : +String message\\n      TripAllDetail : +boolean status\\n\\t class Mail\\n      Mail : +Map<String,Object> model\\n      Mail : +Object attachments\\n      Mail : +String mailFrom\\n      Mail : +String mailTo\\n      Mail : +String mailBcc\\n      Mail : +String mailContent\\n      Mail : +String mailCc\\n      Mail : +String mailSubject\\n      Mail : +String contentType\\n\\t class FoodOrder\\n      FoodOrder : +String foodName\\n      FoodOrder : +UUID id\\n      FoodOrder : +String storeName\\n      FoodOrder : +int foodType\\n      FoodOrder : +String stationName\\n      FoodOrder : +UUID orderId\\n      FoodOrder : +double price\\n\\t class Account\\n      Account : +int documentType\\n      Account : +String loginId\\n      Account : +String accountId\\n      Account : +int gender\\n      Account : +UUID id\\n      Account : +String password\\n      Account : +String name\\n      Account : +String documentNum\\n      Account : +String email\\n\\t class VerifyResult\\n      VerifyResult : +boolean status\\n      VerifyResult : +String message\\n\\t class TripResponse\\n      TripResponse : +String trainTypeId\\n      TripResponse : +int economyClass\\n      TripResponse : +String startingStation\\n      TripResponse : +String priceForEconomyClass\\n      TripResponse : +Date startingTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String terminalStation\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +Date endTime\\n\\t class Response\\n      Response : +String msg\\n      Response : +T data\\n      Response : +Integer status\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class RebookInfo\\n      RebookInfo : +Date date\\n      RebookInfo : +int seatType\\n      RebookInfo : +String orderId\\n      RebookInfo : +String oldTripId\\n      RebookInfo : +String tripId\\n      RebookInfo : +String loginId\\n\\t class AssuranceTypeBean\\n      AssuranceTypeBean : +int index\\n      AssuranceTypeBean : +String name\\n      AssuranceTypeBean : +double price\\n\\t class AccountInfo\\n      AccountInfo : +String userId\\n      AccountInfo : +String money\\n\\t class OrderInfo\\n      OrderInfo : +Date boughtDateEnd\\n      OrderInfo : +String loginId\\n      OrderInfo : +Date travelDateStart\\n      OrderInfo : +boolean enableBoughtDateQuery\\n      OrderInfo : +Date boughtDateStart\\n      OrderInfo : +int state\\n      OrderInfo : +Date travelDateEnd\\n      OrderInfo : +boolean enableTravelDateQuery\\n      OrderInfo : +boolean enableStateQuery\\n\\t class OrderTicketsResult\\n      OrderTicketsResult : +boolean status\\n      OrderTicketsResult : +String message\\n\\t class InsertConsignRecordResult\\n      InsertConsignRecordResult : +boolean status\\n      InsertConsignRecordResult : +String message\\n\\t class Money\\n      Money : +String userId\\n      Money : +String id\\n      Money : +MoneyType type\\n      Money : +String money\\n\\t class PriceConfig\\n      PriceConfig : +double basicPriceRate\\n      PriceConfig : +UUID id\\n      PriceConfig : +String trainType\\n      PriceConfig : +double firstClassPriceRate\\n      PriceConfig : +String routeId\\n\\t class PaymentDifferenceInfo\\n      PaymentDifferenceInfo : +String orderId\\n      PaymentDifferenceInfo : +String price\\n      PaymentDifferenceInfo : +String userId\\n      PaymentDifferenceInfo : +String tripId\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\\t class SecurityConfig\\n      SecurityConfig : +String value\\n      SecurityConfig : +UUID id\\n      SecurityConfig : +String name\\n      SecurityConfig : +String description\\n\\t class TripInfo\\n      TripInfo : +Date departureTime\\n      TripInfo : +String startingPlace\\n      TripInfo : +String endPlace\\n\\t class TravelAdvanceResultUnit\\n      TravelAdvanceResultUnit : +String toStationName\\n      TravelAdvanceResultUnit : +int numberOfRestTicketSecondClass\\n      TravelAdvanceResultUnit : +String trainTypeId\\n      TravelAdvanceResultUnit : +String priceForSecondClassSeat\\n      TravelAdvanceResultUnit : +Date startingTime\\n      TravelAdvanceResultUnit : +String tripId\\n      TravelAdvanceResultUnit : +int numberOfRestTicketFirstClass\\n      TravelAdvanceResultUnit : +String stopStations\\n      TravelAdvanceResultUnit : +String priceForFirstClassSeat\\n      TravelAdvanceResultUnit : +Date endTime\\n      TravelAdvanceResultUnit : +String fromStationName\\n\\t class TransferTravelInfo\\n      TransferTravelInfo : +String toStationName\\n      TransferTravelInfo : +Date travelDate\\n      TransferTravelInfo : +String trainType\\n      TransferTravelInfo : +String fromStationName\\n      TransferTravelInfo : +String viaStationName\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +UUID id\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +String differenceMoney\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class OrderSecurity\\n      OrderSecurity : +int orderNumInLastOneHour\\n      OrderSecurity : +int orderNumOfValidOrder\\n\\t class AdminTrip\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int averageSpeed\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\",\n        \"cannotClone\": false\n    },\n    \"ms\": [\n        {\n            \"name\": \"ts-contacts-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\"\n        },\n        {\n            \"name\": \"ts-admin-user-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class User\\n      User : +int documentType\\n      User : +String userName\\n      User : +int gender\\n      User : +UUID userId\\n      User : +String password\\n      User : +String documentNum\\n      User : +String email\\n\\t class Account\\n      Account : +int documentType\\n      Account : +String loginId\\n      Account : +String accountId\\n      Account : +int gender\\n      Account : +UUID id\\n      Account : +String password\\n      Account : +String name\\n      Account : +String documentNum\\n      Account : +String email\\n\\t class UserDto\\n      UserDto : +int documentType\\n      UserDto : +String password\\n      UserDto : +String userName\\n      UserDto : +int gender\\n      UserDto : +String documentNum\\n      UserDto : +String email\\n\"\n        },\n        {\n            \"name\": \"ts-food-map-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTrainFood \\\"*\\\" --> \\\"*\\\" Food\\nFoodStore \\\"*\\\" --> \\\"*\\\" Food\\n\\t class TrainFood\\n      TrainFood : +String tripId\\n      TrainFood : +UUID id\\n\\t class FoodStore\\n      FoodStore : +String telephone\\n      FoodStore : +UUID id\\n      FoodStore : +String storeName\\n      FoodStore : +String businessTime\\n      FoodStore : +String stationId\\n      FoodStore : +double deliveryFee\\n\\t class Food\\n      Food : +String foodName\\n      Food : +double price\\n\"\n        },\n        {\n            \"name\": \"ts-notification-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class NotifyInfo\\n      NotifyInfo : +String date\\n      NotifyInfo : +String startingTime\\n      NotifyInfo : +String seatNumber\\n      NotifyInfo : +String seatClass\\n      NotifyInfo : +String endPlace\\n      NotifyInfo : +String username\\n      NotifyInfo : +String price\\n      NotifyInfo : +String orderNumber\\n      NotifyInfo : +String startingPlace\\n      NotifyInfo : +String email\\n\\t class Mail\\n      Mail : +Map<String,Object> model\\n      Mail : +Object attachments\\n      Mail : +String mailFrom\\n      Mail : +String mailTo\\n      Mail : +String mailBcc\\n      Mail : +String mailContent\\n      Mail : +String mailCc\\n      Mail : +String mailSubject\\n      Mail : +String contentType\\n\"\n        },\n        {\n            \"name\": \"ts-cancel-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nGetAccountByIdResult \\\"*\\\" --> \\\"1\\\" Account\\n\\t class GetOrderByIdInfo\\n      GetOrderByIdInfo : +String orderId\\n\\t class GetAccountByIdResult\\n      GetAccountByIdResult : +boolean status\\n      GetAccountByIdResult : +String message\\n\\t class GetAccountByIdInfo\\n      GetAccountByIdInfo : +String accountId\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class NotifyInfo\\n      NotifyInfo : +String date\\n      NotifyInfo : +String startingTime\\n      NotifyInfo : +String seatNumber\\n      NotifyInfo : +String seatClass\\n      NotifyInfo : +String endPlace\\n      NotifyInfo : +String username\\n      NotifyInfo : +String price\\n      NotifyInfo : +String orderNumber\\n      NotifyInfo : +String startingPlace\\n      NotifyInfo : +String email\\n\\t class Account\\n      Account : +int documentType\\n      Account : +int gender\\n      Account : +UUID id\\n      Account : +String password\\n      Account : +String name\\n      Account : +String documentNum\\n      Account : +String email\\n\\t class User\\n      User : +int documentType\\n      User : +String userName\\n      User : +int gender\\n      User : +UUID userId\\n      User : +String password\\n      User : +String documentNum\\n      User : +String email\\n\\t class VerifyResult\\n      VerifyResult : +boolean status\\n      VerifyResult : +String message\\n\"\n        },\n        {\n            \"name\": \"ts-config-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Config\\n      Config : +String value\\n      Config : +String name\\n      Config : +String description\\n\"\n        },\n        {\n            \"name\": \"ts-assurance-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class AssuranceTypeBean\\n      AssuranceTypeBean : +int index\\n      AssuranceTypeBean : +String name\\n      AssuranceTypeBean : +double price\\n\\t class PlainAssurance\\n      PlainAssurance : +double typePrice\\n      PlainAssurance : +UUID id\\n      PlainAssurance : +UUID orderId\\n      PlainAssurance : +int typeIndex\\n      PlainAssurance : +String typeName\\n\\t class Assurance\\n      Assurance : +UUID orderId\\n      Assurance : +AssuranceType type\\n      Assurance : +UUID id\\n\"\n        },\n        {\n            \"name\": \"ts-order-other-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nOrderAlterInfo \\\"*\\\" --> \\\"1\\\" Order\\nLeftTicketInfo \\\"*\\\" --> \\\"*\\\" Ticket\\n\\t class OrderAlterInfo\\n      OrderAlterInfo : +UUID previousOrderId\\n      OrderAlterInfo : +String loginToken\\n      OrderAlterInfo : +UUID accountId\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +UUID id\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class LeftTicketInfo\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class OrderSecurity\\n      OrderSecurity : +int orderNumInLastOneHour\\n      OrderSecurity : +int orderNumOfValidOrder\\n\\t class QueryInfo\\n      QueryInfo : +Date boughtDateEnd\\n      QueryInfo : +String loginId\\n      QueryInfo : +Date travelDateStart\\n      QueryInfo : +boolean enableBoughtDateQuery\\n      QueryInfo : +Date boughtDateStart\\n      QueryInfo : +int state\\n      QueryInfo : +Date travelDateEnd\\n      QueryInfo : +boolean enableTravelDateQuery\\n      QueryInfo : +boolean enableStateQuery\\n\\t class SoldTicket\\n      SoldTicket : +int noSeat\\n      SoldTicket : +Date travelDate\\n      SoldTicket : +int secondClassSeat\\n      SoldTicket : +int businessSeat\\n      SoldTicket : +int hardSeat\\n      SoldTicket : +int firstClassSeat\\n      SoldTicket : +int hardBed\\n      SoldTicket : +int softBed\\n      SoldTicket : +int highSoftBed\\n      SoldTicket : +String trainNumber\\n      SoldTicket : +int softSeat\\n\"\n        },\n        {\n            \"name\": \"ts-route-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class RouteInfo\\n      RouteInfo : +String endStation\\n      RouteInfo : +String id\\n      RouteInfo : +String stationList\\n      RouteInfo : +String startStation\\n      RouteInfo : +String distanceList\\n\"\n        },\n        {\n            \"name\": \"ts-price-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int averageSpeed\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\\t class PriceConfig\\n      PriceConfig : +UUID id\\n      PriceConfig : +double basicPriceRate\\n      PriceConfig : +String trainType\\n      PriceConfig : +double firstClassPriceRate\\n      PriceConfig : +String routeId\\n\"\n        },\n        {\n            \"name\": \"ts-preserve-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\nOrderTicketsResult \\\"*\\\" --> \\\"1\\\" Order\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +double percent\\n\\t class OrderTicketsInfo\\n      OrderTicketsInfo : +String to\\n      OrderTicketsInfo : +String handleDate\\n      OrderTicketsInfo : +double foodPrice\\n      OrderTicketsInfo : +boolean isWithin\\n      OrderTicketsInfo : +String tripId\\n      OrderTicketsInfo : +int seatType\\n      OrderTicketsInfo : +String consigneeName\\n      OrderTicketsInfo : +Date date\\n      OrderTicketsInfo : +int foodType\\n      OrderTicketsInfo : +int assurance\\n      OrderTicketsInfo : +String from\\n      OrderTicketsInfo : +String foodName\\n      OrderTicketsInfo : +String accountId\\n      OrderTicketsInfo : +String contactsId\\n      OrderTicketsInfo : +String storeName\\n      OrderTicketsInfo : +double consigneeWeight\\n      OrderTicketsInfo : +String stationName\\n      OrderTicketsInfo : +String consigneePhone\\n\\t class TripAllDetail\\n      TripAllDetail : +boolean status\\n      TripAllDetail : +String message\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class User\\n      User : +int documentType\\n      User : +String userName\\n      User : +int gender\\n      User : +UUID userId\\n      User : +String password\\n      User : +String documentNum\\n      User : +String email\\n\\t class TripResponse\\n      TripResponse : +int economyClass\\n      TripResponse : +String startingStation\\n      TripResponse : +Date startingTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class OrderTicketsResult\\n      OrderTicketsResult : +boolean status\\n      OrderTicketsResult : +String message\\n\\t class NotifyInfo\\n      NotifyInfo : +String date\\n      NotifyInfo : +String startingTime\\n      NotifyInfo : +String seatNumber\\n      NotifyInfo : +String seatClass\\n      NotifyInfo : +String endPlace\\n      NotifyInfo : +String username\\n      NotifyInfo : +String price\\n      NotifyInfo : +String orderNumber\\n      NotifyInfo : +String startingPlace\\n      NotifyInfo : +String email\\n\\t class Account\\n      Account : +int documentType\\n      Account : +int gender\\n      Account : +UUID id\\n      Account : +String password\\n      Account : +String name\\n      Account : +String documentNum\\n      Account : +String email\\n\\t class FoodOrder\\n      FoodOrder : +String foodName\\n      FoodOrder : +UUID id\\n      FoodOrder : +String storeName\\n      FoodOrder : +int foodType\\n      FoodOrder : +String stationName\\n      FoodOrder : +UUID orderId\\n      FoodOrder : +double price\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +String startStation\\n      Seat : +String trainNumber\\n      Seat : +String destStation\\n      Seat : +int seatType\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\\t class Consign\\n      Consign : +String from\\n      Consign : +String to\\n      Consign : +String phone\\n      Consign : +String handleDate\\n      Consign : +String targetDate\\n      Consign : +boolean isWithin\\n      Consign : +double weight\\n      Consign : +UUID id\\n      Consign : +UUID orderId\\n      Consign : +String consignee\\n      Consign : +UUID accountId\\n\\t class Assurance\\n      Assurance : +UUID orderId\\n      Assurance : +AssuranceType type\\n      Assurance : +UUID id\\n\"\n        },\n        {\n            \"name\": \"ts-security-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class OrderSecurity\\n      OrderSecurity : +int orderNumInLastOneHour\\n      OrderSecurity : +int orderNumOfValidOrder\\n\\t class SecurityConfig\\n      SecurityConfig : +String value\\n      SecurityConfig : +UUID id\\n      SecurityConfig : +String name\\n      SecurityConfig : +String description\\n\"\n        },\n        {\n            \"name\": \"ts-consign-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Consign\\n      Consign : +String from\\n      Consign : +String to\\n      Consign : +String phone\\n      Consign : +String handleDate\\n      Consign : +String targetDate\\n      Consign : +boolean isWithin\\n      Consign : +UUID id\\n      Consign : +double weight\\n      Consign : +UUID orderId\\n      Consign : +String consignee\\n      Consign : +UUID accountId\\n\\t class GetPriceDomain\\n      GetPriceDomain : +double weight\\n      GetPriceDomain : +boolean isWithinRegion\\n\\t class InsertConsignRecordResult\\n      InsertConsignRecordResult : +boolean status\\n      InsertConsignRecordResult : +String message\\n\\t class ConsignRecord\\n      ConsignRecord : +String from\\n      ConsignRecord : +String to\\n      ConsignRecord : +String phone\\n      ConsignRecord : +String handleDate\\n      ConsignRecord : +String targetDate\\n      ConsignRecord : +UUID id\\n      ConsignRecord : +double weight\\n      ConsignRecord : +UUID orderId\\n      ConsignRecord : +String consignee\\n      ConsignRecord : +UUID accountId\\n      ConsignRecord : +double price\\n\"\n        },\n        {\n            \"name\": \"ts-train-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int averageSpeed\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\"\n        },\n        {\n            \"name\": \"ts-order-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nOrderAlterInfo \\\"*\\\" --> \\\"1\\\" Order\\nLeftTicketInfo \\\"*\\\" --> \\\"*\\\" Ticket\\n\\t class OrderAlterInfo\\n      OrderAlterInfo : +UUID previousOrderId\\n      OrderAlterInfo : +String loginToken\\n      OrderAlterInfo : +UUID accountId\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class OrderInfo\\n      OrderInfo : +Date boughtDateEnd\\n      OrderInfo : +String loginId\\n      OrderInfo : +Date travelDateStart\\n      OrderInfo : +boolean enableBoughtDateQuery\\n      OrderInfo : +Date boughtDateStart\\n      OrderInfo : +int state\\n      OrderInfo : +Date travelDateEnd\\n      OrderInfo : +boolean enableTravelDateQuery\\n      OrderInfo : +boolean enableStateQuery\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +UUID id\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class LeftTicketInfo\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class OrderSecurity\\n      OrderSecurity : +int orderNumInLastOneHour\\n      OrderSecurity : +int orderNumOfValidOrder\\n\\t class SoldTicket\\n      SoldTicket : +int noSeat\\n      SoldTicket : +Date travelDate\\n      SoldTicket : +int secondClassSeat\\n      SoldTicket : +int businessSeat\\n      SoldTicket : +int hardSeat\\n      SoldTicket : +int firstClassSeat\\n      SoldTicket : +int hardBed\\n      SoldTicket : +int softBed\\n      SoldTicket : +int highSoftBed\\n      SoldTicket : +String trainNumber\\n      SoldTicket : +int softSeat\\n\"\n        },\n        {\n            \"name\": \"ts-food-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTrainFood \\\"*\\\" --> \\\"*\\\" Food\\nAllTripFood \\\"*\\\" --> \\\"*\\\" TrainFood\\nFoodStore \\\"*\\\" --> \\\"*\\\" Food\\n\\t class TrainFood\\n      TrainFood : +String tripId\\n      TrainFood : +UUID id\\n\\t class FoodOrder\\n      FoodOrder : +String foodName\\n      FoodOrder : +UUID id\\n      FoodOrder : +String storeName\\n      FoodOrder : +int foodType\\n      FoodOrder : +String stationName\\n      FoodOrder : +UUID orderId\\n      FoodOrder : +double price\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class AllTripFood\\n      AllTripFood : +String,List<FoodStore foodStoreListMap\\n\\t class FoodStore\\n      FoodStore : +String stationId\\n      FoodStore : +String telephone\\n      FoodStore : +UUID id\\n      FoodStore : +String storeName\\n      FoodStore : +String businessTime\\n      FoodStore : +double deliveryFee\\n\\t class Food\\n      Food : +String foodName\\n      Food : +double price\\n\"\n        },\n        {\n            \"name\": \"ts-rebook-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class PaymentDifferenceInfo\\n      PaymentDifferenceInfo : +String orderId\\n      PaymentDifferenceInfo : +String price\\n      PaymentDifferenceInfo : +String userId\\n      PaymentDifferenceInfo : +String tripId\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class TripAllDetail\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class TripResponse\\n      TripResponse : +int economyClass\\n      TripResponse : +String startingStation\\n      TripResponse : +String trainTypeId\\n      TripResponse : +Date startingTime\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +int confortClass\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n      TripResponse : +String priceForEconomyClass\\n\\t class Trip\\n      Trip : +String trainTypeId\\n      Trip : +Date startingTime\\n      Trip : +String routeId\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +Date endTime\\n      Trip : +String startingStationId\\n\\t class OrderTicketsInfo\\n      OrderTicketsInfo : +String from\\n      OrderTicketsInfo : +String to\\n      OrderTicketsInfo : +String contactsId\\n      OrderTicketsInfo : +String tripId\\n      OrderTicketsInfo : +String accountId\\n      OrderTicketsInfo : +int seatType\\n      OrderTicketsInfo : +String loginToken\\n      OrderTicketsInfo : +Date date\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String differenceMoney\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class RebookInfo\\n      RebookInfo : +Date date\\n      RebookInfo : +int seatType\\n      RebookInfo : +String orderId\\n      RebookInfo : +String oldTripId\\n      RebookInfo : +String tripId\\n      RebookInfo : +String loginId\\n\\t class VerifyResult\\n      VerifyResult : +boolean status\\n      VerifyResult : +String message\\n\"\n        },\n        {\n            \"name\": \"ts-admin-basic-info-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class TrainType\\n      TrainType : +int economyClass\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int averageSpeed\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class Config\\n      Config : +String name\\n      Config : +String description\\n      Config : +String value\\n\\t class PriceInfo\\n      PriceInfo : +String id\\n      PriceInfo : +double basicPriceRate\\n      PriceInfo : +String trainType\\n      PriceInfo : +double firstClassPriceRate\\n      PriceInfo : +String routeId\\n\\t class Station\\n      Station : +String name\\n      Station : +String id\\n      Station : +int stayTime\\n\"\n        },\n        {\n            \"name\": \"ts-consign-price-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class ConsignPrice\\n      ConsignPrice : +double beyondPrice\\n      ConsignPrice : +UUID id\\n      ConsignPrice : +double initialWeight\\n      ConsignPrice : +double withinPrice\\n      ConsignPrice : +double initialPrice\\n      ConsignPrice : +int index\\n\"\n        },\n        {\n            \"name\": \"ts-basic-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +double percent\\n\\t class TrainType\\n      TrainType : +int economyClass\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int averageSpeed\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class PriceConfig\\n      PriceConfig : +double basicPriceRate\\n      PriceConfig : +UUID id\\n      PriceConfig : +String trainType\\n      PriceConfig : +double firstClassPriceRate\\n      PriceConfig : +String routeId\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\"\n        },\n        {\n            \"name\": \"ts-preserve-other-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +double percent\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class Contacts\\n      Contacts : +int documentType\\n      Contacts : +String documentNumber\\n      Contacts : +UUID id\\n      Contacts : +String phoneNumber\\n      Contacts : +String name\\n      Contacts : +UUID accountId\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class OrderTicketsInfo\\n      OrderTicketsInfo : +String to\\n      OrderTicketsInfo : +String handleDate\\n      OrderTicketsInfo : +double foodPrice\\n      OrderTicketsInfo : +boolean isWithin\\n      OrderTicketsInfo : +String tripId\\n      OrderTicketsInfo : +int seatType\\n      OrderTicketsInfo : +String consigneeName\\n      OrderTicketsInfo : +Date date\\n      OrderTicketsInfo : +int foodType\\n      OrderTicketsInfo : +int assurance\\n      OrderTicketsInfo : +String from\\n      OrderTicketsInfo : +String foodName\\n      OrderTicketsInfo : +String accountId\\n      OrderTicketsInfo : +String contactsId\\n      OrderTicketsInfo : +String storeName\\n      OrderTicketsInfo : +double consigneeWeight\\n      OrderTicketsInfo : +String stationName\\n      OrderTicketsInfo : +String consigneePhone\\n\\t class TripAllDetail\\n      TripAllDetail : +boolean status\\n      TripAllDetail : +String message\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class User\\n      User : +int documentType\\n      User : +String userName\\n      User : +int gender\\n      User : +UUID userId\\n      User : +String password\\n      User : +String documentNum\\n      User : +String email\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class TripResponse\\n      TripResponse : +int economyClass\\n      TripResponse : +String startingStation\\n      TripResponse : +Date startingTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class NotifyInfo\\n      NotifyInfo : +String date\\n      NotifyInfo : +String startingTime\\n      NotifyInfo : +String seatNumber\\n      NotifyInfo : +String seatClass\\n      NotifyInfo : +String endPlace\\n      NotifyInfo : +String username\\n      NotifyInfo : +String price\\n      NotifyInfo : +String orderNumber\\n      NotifyInfo : +String startingPlace\\n      NotifyInfo : +String email\\n\\t class Account\\n      Account : +int documentType\\n      Account : +int gender\\n      Account : +UUID id\\n      Account : +String password\\n      Account : +String name\\n      Account : +String documentNum\\n      Account : +String email\\n\\t class FoodOrder\\n      FoodOrder : +String foodName\\n      FoodOrder : +UUID id\\n      FoodOrder : +String storeName\\n      FoodOrder : +int foodType\\n      FoodOrder : +String stationName\\n      FoodOrder : +UUID orderId\\n      FoodOrder : +double price\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +String startStation\\n      Seat : +String trainNumber\\n      Seat : +String destStation\\n      Seat : +int seatType\\n\\t class Assurance\\n      Assurance : +UUID orderId\\n      Assurance : +AssuranceType type\\n      Assurance : +UUID id\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\\t class Consign\\n      Consign : +String from\\n      Consign : +String to\\n      Consign : +String phone\\n      Consign : +String handleDate\\n      Consign : +String targetDate\\n      Consign : +boolean isWithin\\n      Consign : +double weight\\n      Consign : +UUID id\\n      Consign : +UUID orderId\\n      Consign : +String consignee\\n      Consign : +UUID accountId\\n\"\n        },\n        {\n            \"name\": \"ts-common\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Response\\n      Response : +String msg\\n      Response : +T data\\n      Response : +Integer status\\n\"\n        },\n        {\n            \"name\": \"ts-station-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Station\\n      Station : +String name\\n      Station : +String id\\n      Station : +int stayTime\\n\"\n        },\n        {\n            \"name\": \"ts-auth-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class AuthDto\\n      AuthDto : +String userId\\n      AuthDto : +String password\\n      AuthDto : +String userName\\n\\t class BasicAuthDto\\n      BasicAuthDto : +String username\\n      BasicAuthDto : +String password\\n      BasicAuthDto : +String verificationCode\\n      BasicAuthDto : +long serialVersionUID\\n\\t class TokenDto\\n      TokenDto : +UUID userId\\n      TokenDto : +String username\\n      TokenDto : +String token\\n      TokenDto : +long serialVersionUID\\n\\t class User\\n      User : +UUID userId\\n      User : +String username\\n      User : +String password\\n      User : +String roles\\n\"\n        },\n        {\n            \"name\": \"ts-user-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class AuthDto\\n      AuthDto : +String userId\\n      AuthDto : +String password\\n      AuthDto : +String userName\\n\\t class UserDto\\n      UserDto : +int documentType\\n      UserDto : +String userName\\n      UserDto : +int gender\\n      UserDto : +UUID userId\\n      UserDto : +String password\\n      UserDto : +String documentNum\\n      UserDto : +String email\\n\\t class User\\n      User : +int documentType\\n      User : +String userName\\n      User : +int gender\\n      User : +UUID userId\\n      User : +String password\\n      User : +String documentNum\\n      User : +String email\\n\"\n        },\n        {\n            \"name\": \"ts-route-plan-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TripInfo\\n      TripInfo : +String endPlace\\n      TripInfo : +String startingPlace\\n      TripInfo : +Date departureTime\\n\\t class RoutePlanResultUnit\\n      RoutePlanResultUnit : +String toStationName\\n      RoutePlanResultUnit : +String trainTypeId\\n      RoutePlanResultUnit : +String priceForSecondClassSeat\\n      RoutePlanResultUnit : +Date startingTime\\n      RoutePlanResultUnit : +String tripId\\n      RoutePlanResultUnit : +String stopStations\\n      RoutePlanResultUnit : +String priceForFirstClassSeat\\n      RoutePlanResultUnit : +Date endTime\\n      RoutePlanResultUnit : +String fromStationName\\n\\t class TripAllDetail\\n      TripAllDetail : +boolean status\\n      TripAllDetail : +String message\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class Trip\\n      Trip : +String trainTypeId\\n      Trip : +Date startingTime\\n      Trip : +String routeId\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +Date endTime\\n      Trip : +String startingStationId\\n\\t class RoutePlanInfo\\n      RoutePlanInfo : +String toStationName\\n      RoutePlanInfo : +int num\\n      RoutePlanInfo : +Date travelDate\\n      RoutePlanInfo : +String formStationName\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class TripResponse\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +int economyClass\\n      TripResponse : +String trainTypeId\\n      TripResponse : +Date startingTime\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String priceForEconomyClass\\n      TripResponse : +String startingStation\\n\"\n        },\n        {\n            \"name\": \"ts-ticketinfo-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TrainType\\n      TrainType : +int economyClass\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int averageSpeed\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +String message\\n      TravelResult : +double percent\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\"\n        },\n        {\n            \"name\": \"ts-payment-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Money\\n      Money : +String userId\\n      Money : +String money\\n\\t class Payment\\n      Payment : +String price\\n      Payment : +String orderId\\n      Payment : +String userId\\n      Payment : +String id\\n\"\n        },\n        {\n            \"name\": \"ts-inside-payment-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Payment\\n      Payment : +String price\\n      Payment : +PaymentType type\\n      Payment : +String orderId\\n      Payment : +String userId\\n      Payment : +String id\\n\\t class Money\\n      Money : +MoneyType type\\n      Money : +String userId\\n      Money : +String id\\n      Money : +String money\\n\\t class OutsidePaymentInfo\\n      OutsidePaymentInfo : +String orderId\\n      OutsidePaymentInfo : +String userId\\n      OutsidePaymentInfo : +String price\\n\\t class Balance\\n      Balance : +String userId\\n      Balance : +String balance\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\\t class PaymentInfo\\n      PaymentInfo : +String orderId\\n      PaymentInfo : +String price\\n      PaymentInfo : +String userId\\n      PaymentInfo : +String tripId\\n\\t class AccountInfo\\n      AccountInfo : +String userId\\n      AccountInfo : +String money\\n\"\n        },\n        {\n            \"name\": \"ts-seat-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nLeftTicketInfo \\\"*\\\" --> \\\"*\\\" Ticket\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class LeftTicketInfo\\n\\t class Config\\n      Config : +String name\\n      Config : +String description\\n      Config : +String value\\n\\t class Ticket\\n      Ticket : +int seatNo\\n      Ticket : +String startStation\\n      Ticket : +String destStation\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class TrainType\\n      TrainType : +int averageSpeed\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\"\n        },\n        {\n            \"name\": \"ts-execute-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\"\n        },\n        {\n            \"name\": \"ts-travel-plan-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nTransferTravelResult \\\"*\\\" --> \\\"*\\\" TripResponse\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class TransferTravelInfo\\n      TransferTravelInfo : +String toStationName\\n      TransferTravelInfo : +Date travelDate\\n      TransferTravelInfo : +String trainType\\n      TransferTravelInfo : +String fromStationName\\n      TransferTravelInfo : +String viaStationName\\n\\t class TripInfo\\n      TripInfo : +String endPlace\\n      TripInfo : +String startingPlace\\n      TripInfo : +Date departureTime\\n\\t class RoutePlanResultUnit\\n      RoutePlanResultUnit : +String toStationName\\n      RoutePlanResultUnit : +String trainTypeId\\n      RoutePlanResultUnit : +String priceForSecondClassSeat\\n      RoutePlanResultUnit : +Date startingTime\\n      RoutePlanResultUnit : +String tripId\\n      RoutePlanResultUnit : +String stopStations\\n      RoutePlanResultUnit : +String priceForFirstClassSeat\\n      RoutePlanResultUnit : +Date endTime\\n      RoutePlanResultUnit : +String fromStationName\\n\\t class TravelAdvanceResultUnit\\n      TravelAdvanceResultUnit : +String toStationName\\n      TravelAdvanceResultUnit : +int numberOfRestTicketSecondClass\\n      TravelAdvanceResultUnit : +String trainTypeId\\n      TravelAdvanceResultUnit : +String priceForSecondClassSeat\\n      TravelAdvanceResultUnit : +Date startingTime\\n      TravelAdvanceResultUnit : +String tripId\\n      TravelAdvanceResultUnit : +int numberOfRestTicketFirstClass\\n      TravelAdvanceResultUnit : +String stopStations\\n      TravelAdvanceResultUnit : +String priceForFirstClassSeat\\n      TravelAdvanceResultUnit : +Date endTime\\n      TravelAdvanceResultUnit : +String fromStationName\\n\\t class Trip\\n      Trip : +String trainTypeId\\n      Trip : +Date startingTime\\n      Trip : +String routeId\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +Date endTime\\n      Trip : +String startingStationId\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +String startStation\\n      Seat : +String trainNumber\\n      Seat : +String destStation\\n      Seat : +int seatType\\n\\t class RoutePlanInfo\\n      RoutePlanInfo : +String toStationName\\n      RoutePlanInfo : +int num\\n      RoutePlanInfo : +Date travelDate\\n      RoutePlanInfo : +String formStationName\\n\\t class TransferTravelResult\\n\\t class TripResponse\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +int economyClass\\n      TripResponse : +String trainTypeId\\n      TripResponse : +Date startingTime\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String priceForEconomyClass\\n      TripResponse : +String startingStation\\n\\t class TripId\\n      TripId : +TrainTypeEnum type\\n      TripId : +String number\\n\"\n        },\n        {\n            \"name\": \"ts-travel2-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Trip\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Route\\nAdminTrip \\\"*\\\" --> \\\"1\\\" TrainType\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +double percent\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class TripAllDetail\\n      TripAllDetail : +boolean status\\n      TripAllDetail : +String message\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class TripInfo\\n      TripInfo : +Date departureTime\\n      TripInfo : +String startingPlace\\n      TripInfo : +String endPlace\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date startingTime\\n      Trip : +Date endTime\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int averageSpeed\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\\t class TravelInfo\\n      TravelInfo : +String trainTypeId\\n      TravelInfo : +Date startingTime\\n      TravelInfo : +String tripId\\n      TravelInfo : +String routeId\\n      TravelInfo : +String terminalStationId\\n      TravelInfo : +String stationsId\\n      TravelInfo : +Date endTime\\n      TravelInfo : +String startingStationId\\n\\t class TripResponse\\n      TripResponse : +int economyClass\\n      TripResponse : +String startingStation\\n      TripResponse : +String trainTypeId\\n      TripResponse : +Date startingTime\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +int confortClass\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n      TripResponse : +String priceForEconomyClass\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class AdminTrip\\n\\t class SoldTicket\\n      SoldTicket : +int noSeat\\n      SoldTicket : +Date travelDate\\n      SoldTicket : +int secondClassSeat\\n      SoldTicket : +int businessSeat\\n      SoldTicket : +int hardSeat\\n      SoldTicket : +int firstClassSeat\\n      SoldTicket : +int hardBed\\n      SoldTicket : +int softBed\\n      SoldTicket : +int highSoftBed\\n      SoldTicket : +String trainNumber\\n      SoldTicket : +int softSeat\\n\"\n        },\n        {\n            \"name\": \"ts-travel-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" Trip\\nTripAllDetail \\\"*\\\" --> \\\"1\\\" TripResponse\\nTravel \\\"*\\\" --> \\\"1\\\" Trip\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nTravelResult \\\"*\\\" --> \\\"1\\\" TrainType\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Trip\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Route\\nAdminTrip \\\"*\\\" --> \\\"1\\\" TrainType\\nTripResponse \\\"*\\\" --> \\\"1\\\" TripId\\n\\t class Seat\\n      Seat : +Date travelDate\\n      Seat : +int seatType\\n      Seat : +String startStation\\n      Seat : +String destStation\\n      Seat : +String trainNumber\\n\\t class TripAllDetail\\n\\t class Travel\\n      Travel : +String endPlace\\n      Travel : +String startingPlace\\n      Travel : +Date departureTime\\n\\t class Trip\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +Date startingTime\\n      Trip : +String startingStationId\\n      Trip : +String trainTypeId\\n      Trip : +String routeId\\n      Trip : +Date endTime\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class TravelResult\\n      TravelResult : +Map<String,String> prices\\n      TravelResult : +boolean status\\n      TravelResult : +String message\\n      TravelResult : +double percent\\n\\t class TripInfo\\n      TripInfo : +Date departureTime\\n      TripInfo : +String startingPlace\\n      TripInfo : +String endPlace\\n\\t class TripAllDetailInfo\\n      TripAllDetailInfo : +String from\\n      TripAllDetailInfo : +String to\\n      TripAllDetailInfo : +Date travelDate\\n      TripAllDetailInfo : +String tripId\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\\t class TrainType\\n      TrainType : +String id\\n      TrainType : +int averageSpeed\\n      TrainType : +int confortClass\\n      TrainType : +int economyClass\\n\\t class TravelInfo\\n      TravelInfo : +String trainTypeId\\n      TravelInfo : +Date startingTime\\n      TravelInfo : +String tripId\\n      TravelInfo : +String routeId\\n      TravelInfo : +String terminalStationId\\n      TravelInfo : +String stationsId\\n      TravelInfo : +Date endTime\\n      TravelInfo : +String startingStationId\\n\\t class AdminTrip\\n\\t class SoldTicket\\n      SoldTicket : +int noSeat\\n      SoldTicket : +Date travelDate\\n      SoldTicket : +int secondClassSeat\\n      SoldTicket : +int businessSeat\\n      SoldTicket : +int hardSeat\\n      SoldTicket : +int firstClassSeat\\n      SoldTicket : +int hardBed\\n      SoldTicket : +int softBed\\n      SoldTicket : +int highSoftBed\\n      SoldTicket : +String trainNumber\\n      SoldTicket : +int softSeat\\n\\t class TripResponse\\n      TripResponse : +String priceForConfortClass\\n      TripResponse : +int economyClass\\n      TripResponse : +String trainTypeId\\n      TripResponse : +Date startingTime\\n      TripResponse : +String terminalStation\\n      TripResponse : +Date endTime\\n      TripResponse : +int confortClass\\n      TripResponse : +String priceForEconomyClass\\n      TripResponse : +String startingStation\\n\"\n        },\n        {\n            \"name\": \"ts-admin-order-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class Order\\n      Order : +String to\\n      Order : +String seatNumber\\n      Order : +String price\\n      Order : +Date boughtDate\\n      Order : +String trainNumber\\n      Order : +String from\\n      Order : +int documentType\\n      Order : +int seatClass\\n      Order : +Date travelDate\\n      Order : +String contactsDocumentNumber\\n      Order : +Date travelTime\\n      Order : +UUID id\\n      Order : +int coachNumber\\n      Order : +int status\\n      Order : +UUID accountId\\n      Order : +String contactsName\\n\"\n        },\n        {\n            \"name\": \"ts-admin-travel-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\nTrip \\\"*\\\" --> \\\"1\\\" TripId\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Trip\\nAdminTrip \\\"*\\\" --> \\\"1\\\" Route\\nAdminTrip \\\"*\\\" --> \\\"1\\\" TrainType\\n\\t class TravelInfo\\n      TravelInfo : +String loginId\\n      TravelInfo : +String trainTypeId\\n      TravelInfo : +Date startingTime\\n      TravelInfo : +String tripId\\n      TravelInfo : +String routeId\\n      TravelInfo : +String terminalStationId\\n      TravelInfo : +String stationsId\\n      TravelInfo : +Date endTime\\n      TravelInfo : +String startingStationId\\n\\t class TrainType\\n      TrainType : +int economyClass\\n      TrainType : +String id\\n      TrainType : +int confortClass\\n      TrainType : +int averageSpeed\\n\\t class TripId\\n      TripId : +Type type\\n      TripId : +String number\\n\\t class Trip\\n      Trip : +String trainTypeId\\n      Trip : +Date startingTime\\n      Trip : +String routeId\\n      Trip : +String terminalStationId\\n      Trip : +String stationsId\\n      Trip : +Date endTime\\n      Trip : +String startingStationId\\n\\t class AdminTrip\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\"\n        },\n        {\n            \"name\": \"ts-admin-route-service\",\n            \"noBoundedContext\": false,\n            \"notJava\": false,\n            \"boundedContext\": \"classDiagram\\n\\t class RouteInfo\\n      RouteInfo : +String endStation\\n      RouteInfo : +String loginId\\n      RouteInfo : +String id\\n      RouteInfo : +String stationList\\n      RouteInfo : +String startStation\\n      RouteInfo : +String distanceList\\n\\t class Route\\n      Route : +String startStationId\\n      Route : +String id\\n      Route : +String stations\\n      Route : +Integer distances\\n      Route : +String terminalStationId\\n\"\n        },\n        {\n            \"name\": \"ts-news-service\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"ts-ui-dashboard\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"ts-ticket-office-service\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"image\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"deployment\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"ts-voucher-service\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        },\n        {\n            \"name\": \"jenkins-ci\",\n            \"noBoundedContext\": true,\n            \"notJava\": true,\n            \"boundedContext\": null\n        }\n    ]\n}\n","import { Dispatch } from \"react\";\nimport { createStore } from \"react-hooks-global-state\";\nimport { applyMiddleware } from \"redux\";\nimport {State} from \"./state\";\nimport { Action } from \"./action\";\nimport {initialState, LOCAL_STORAGE_KEY} from \"./initState\";\nimport {reducer} from \"./reducer\";\n\nconst saveStateToStorage = ({ getState }: { getState: () => State }) => (\n    next: Dispatch<Action>\n) => (action: Action) => {\n    const returnValue = next(action);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(getState()));\n    return returnValue;\n};\n\nexport const { dispatch, useGlobalState } = createStore(\n    reducer,\n    initialState,\n    applyMiddleware(saveStateToStorage)\n);\n\n\n","import {Action} from \"./action\";\nimport {initialState} from \"./initState\";\n\n/**\n * Prophet Web App Reducers\n * @param state: Initial state or current state\n * @param action: Given action\n */\nexport const reducer = (state = initialState, action: Action) => {\n    switch (action.type) {\n        case \"setGithubUrl\":\n            return {\n                ...state,\n                githubUrl: action.githubUrl\n            }\n        case \"setGlobal\":\n            return {\n                ...state,\n                global: action.global\n            }\n        case \"setMs\":\n            return {\n                ...state,\n                ms: action.ms\n            }\n        case \"startLoading\":\n            return {\n                ...state,\n                loading: true\n            }\n        case \"stopLoading\":\n            return {\n                ...state,\n                loading: false\n            }\n        case \"showGitError\":\n            return {\n                ...state,\n                gitError: true\n            }\n        case \"hideGitError\":\n            return {\n                ...state,\n                gitError: false\n            }\n        default:\n            return state;\n    }\n};\n","const OpenAppData = {\n    async open(sutPath: string, idePath: string, ideExe: string) {\n        const response = await this.queryServer(sutPath, idePath, ideExe);\n        if (response != null) {\n            return await this.handleBody(response);\n        }\n    },\n    async queryServer(sutPath: string, idePath: string, ideExe: string) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"ide\": ideExe, \"idePath\":idePath, \"filePath\": sutPath})\n        };\n        return await fetch('http://localhost:8080/open', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    },\n    async handleBody(response){\n        const body = await response.json();\n        // ActionsRegister.setProphetResponse(body.global, body.ms);\n        // setTimeout(() => {}, 3000);\n        // ActionsRegister.stopLoading();\n        return body;\n    },\n}\n\nexport default OpenAppData;","import {dispatch} from \"./appState\";\nimport {Global} from \"../model/Global\";\nimport {Ms} from \"../model/Ms\";\n\nconst ActionsRegister = {\n    setGithubUrl(githubUrl: string) {\n        dispatch({\n            githubUrl: githubUrl,\n            type: 'setGithubUrl',\n        })\n    },\n    setProphetResponse(global: Global, ms: Ms[]) {\n        dispatch({\n            global: global,\n            type: 'setGlobal',\n        });\n        dispatch({\n            ms: ms,\n            type: 'setMs',\n        });\n    },\n    startLoading() {\n        dispatch({\n            type: 'startLoading',\n        })\n    },\n    stopLoading() {\n        dispatch({\n            type: 'stopLoading',\n        })\n    },\n    hideGitError() {\n        dispatch({\n            type: 'hideGitError',\n        })\n    },\n    showGitError() {\n        dispatch({\n            type: 'showGitError',\n        })\n    },\n}\n\nexport default ActionsRegister;\n","import ActionsRegister from \"../state/ActionsRegister\";\n\nconst AnalyzeAppData = {\n\n    async analyze(sutPath: string, idePath: string, ideExe: string) {\n        this.startLoading();\n        const response = await this.getData(sutPath);\n        if (response != null) {\n            this.stopLoading();\n            return await this.handleBody(response);\n        }\n        this.stopLoading();\n    },\n    async getData(sutPath) {\n        return await fetch( 'http://localhost:8080/analyze', {\n            method: 'POST',\n            body: JSON.stringify({\n                sutRoot: sutPath,\n                dataOutputPath: \"/tmp\",\n                logResults: false,\n                logStats: false\n            }),\n            headers : {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            }\n        });\n    },\n    async handleBody(response){\n        const body = await response.json();\n        // ActionsRegister.setProphetResponse(body.global, body.ms);\n        // setTimeout(() => {}, 3000);\n        // ActionsRegister.stopLoading();\n        return body;\n    },\n    stopLoading(){\n        console.log(\"server error\");\n        ActionsRegister.stopLoading();\n        return [];\n    },\n    showErrors(){\n        ActionsRegister.stopLoading();\n        ActionsRegister.showGitError();\n    },\n    startLoading(){\n        ActionsRegister.startLoading();\n        ActionsRegister.hideGitError();\n    },\n}\n\nexport default AnalyzeAppData;","import React from \"react\";\nimport {Box, Card, CardContent, Paper, TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useGlobalState } from \"../../../state/appState\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport OpenAppData from \"../../../http/OpenAppData\";\nimport AnalyzeAppData from \"../../../http/AnalyzeAppData\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            // color: theme.palette.text.secondary,\n        },\n    }),\n);\n\n\nconst AppSetup = () => {\n    const classes = useStyles();\n    const [sutPath, sutPathUrl] = useGlobalState('sutPath');\n    const [sutError] = useGlobalState('sutError');\n\n    const [idePath, setIdePath] = useGlobalState('idePath');\n    const [ideError] = useGlobalState('ideError');\n\n    const [ideExe, setIdeExe] = useGlobalState('ideExe');\n    const [ideExeError] = useGlobalState('ideExeError');\n\n    const [analyzedData, setAnalyzedData] = useGlobalState('analyzedData');\n\n    const handleSutChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        sutPathUrl(e.target.value);\n    }\n\n    const handleIdeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setIdePath(e.target.value);\n    }\n\n    const handleExeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setIdeExe(e.target.value);\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await OpenAppData.open(sutPath, idePath, ideExe);\n        const body = await AnalyzeAppData.analyze(sutPath, idePath, ideExe);\n        console.log(body);\n        setAnalyzedData(body);\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <Card style={{marginBottom: '20px'}} >\n                <CardContent >\n                    <Box m={1}>\n                        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n\n                            <TextField\n                                id=\"idePath-url\"\n                                error={ideError}\n                                label=\"Path to IDE\"\n                                type=\"text\"\n                                style={{ margin: 8 }}\n                                placeholder=\"Path to IDE\"\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                value={idePath}\n                                onChange={handleIdeChange}\n                                helperText={ideError && <p>Repository does not exist!</p>}\n                            />\n\n                            <TextField\n                                id=\"ide-url\"\n                                error={sutError}\n                                label=\"Executable script\"\n                                type=\"text\"\n                                style={{ margin: 8 }}\n                                placeholder=\"./code\"\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                value={ideExe}\n                                onChange={handleExeChange}\n                                helperText={ideExeError && <p>Path does not exist!</p>}\n                            />\n\n                            <TextField\n                                id=\"sutPath-url\"\n                                error={sutError}\n                                label=\"Path to System Under Test\"\n                                type=\"text\"\n                                style={{ margin: 8 }}\n                                placeholder=\"/home/user/dev/sut/path\"\n                                fullWidth\n                                margin=\"normal\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                value={sutPath}\n                                onChange={handleSutChange}\n                                helperText={sutError && <p>Path does not exist!</p>}\n                            />\n\n\n\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Analyze\n                            </Button>\n                        </form>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Paper>\n    )\n}\nexport default AppSetup;\n","import React from \"react\";\nimport {Box, Card, Typography} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\ntype Props = {\n    similarityController: any;\n    similarityService: any;\n    similarityRepository: any;\n    similarityRestCalls: any;\n    globalSimilarity: any;\n    typeA: any;\n    typeB: any;\n}\n\nconst CloneSummary = (props: Props) => {\n    return (\n        <div>\n\n            <Typography variant=\"subtitle1\" gutterBottom>\n\n            </Typography>\n            {props.typeA}\n            {props.typeB}\n\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                <Box fontWeight=\"fontWeightBold\" m={0}>Similarity</Box>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                <Box fontWeight=\"fontWeightBold\" m={0}>Percentage</Box>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow key={1}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {\"Controller\"}\n                            </TableCell>\n                            <TableCell align=\"left\">{props.similarityController * 100} %</TableCell>\n                        </TableRow>\n                        <TableRow key={2}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {\"Service\"}\n                            </TableCell>\n                            <TableCell align=\"left\">{props.similarityService * 100} %</TableCell>\n                        </TableRow>\n                        <TableRow key={3}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {\"Rest Calls\"}\n                            </TableCell>\n                            <TableCell align=\"left\">{props.similarityRestCalls * 100} %</TableCell>\n                        </TableRow>\n                        <TableRow key={5}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Box fontWeight=\"fontWeightBold\" m={0}>\n                                    {\"Global Similarity\"}\n                                </Box>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                <Box fontWeight=\"fontWeightBold\" m={0}>\n                                    {props.globalSimilarity * 100} %\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n        </div>\n    );\n}\nexport default CloneSummary;","import React from \"react\";\nimport {Link, Typography} from \"@material-ui/core\";\nimport {useGlobalState} from \"../../../state/appState\";\nconst CloneLink = ({link, heading}) => {\n    const [sutPath] = useGlobalState('sutPath');\n    const [idePath] = useGlobalState('idePath');\n    const [ideExe] = useGlobalState('ideExe');\n    const preventDefault = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"ide\": ideExe, \"idePath\":idePath,  \"filePath\": sutPath + link})\n        };\n        fetch('http://localhost:8080/open', requestOptions)\n            .then(response => response.json())\n            .then(data => console.log(data));\n    };\n\n    return (\n        <div>\n            <Link href=\"#\" onClick={preventDefault}>\n                {/*{link} -*/}\n                <Typography variant={heading} gutterBottom>\n                    {link.split('/')[1]} - {link.split('/')[link.split('/').length -1]}\n                </Typography>\n            </Link>\n\n        </div>\n    );\n}\nexport default CloneLink;","import React from \"react\";\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n    }),\n);\n\nconst CodeSnippet = ({ code, language, showLineNumbers }) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CodeBlock\n                text={code}\n                language={language}\n                showLineNumbers={showLineNumbers}\n                theme={dracula}\n            />\n        </div>\n    );\n}\nexport default CodeSnippet;\n\n","import React from \"react\";\nimport Clone from \"./Clone\";\nimport CloneSummary from \"./CloneSummary\";\nimport {Box, Button, Card, Typography} from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CloneLink from \"./CloneLink\";\nimport CodeSnippet from \"../../utils/CodeSnippet\";\n\n\ntype Props = {\n    clonePair: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            // color: theme.palette.text.secondary,\n        },\n    }),\n);\n\n/**\n * <b>{props.clonePair.id}</b>\n * @param props\n * @constructor\n */\nconst ClonePairMain = (props: Props) => {\n    const classes = useStyles();\n    const [showResults, setShowResults] = React.useState(true)\n    const onClick = (e) => {\n        e.preventDefault();\n        if (showResults) {\n            setShowResults(false);\n        } else  {\n            setShowResults(true);\n        }\n\n    }\n    return (\n        <div>\n            <Card>\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <Accordion expanded={showResults} >\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\">\n                                <Typography onClick={onClick}>\n                                    <b>{props.clonePair.typeA && \"A\"}</b> <b>{props.clonePair.typeB && \"B\"}</b>  {props.clonePair.a.msController.packageName}.{props.clonePair.a.msController.className} -> {props.clonePair.b.msController.packageName}.{props.clonePair.b.msController.className}\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={4}>\n                                        <CloneSummary\n                                            similarityController={props.clonePair.similarityController}\n                                            similarityService={props.clonePair.similarityService}\n                                            similarityRepository={props.clonePair.similarityRepository}\n                                            similarityRestCalls={props.clonePair.similarityRestCalls}\n                                            globalSimilarity={props.clonePair.globalSimilarity}\n                                            typeA={props.clonePair.typeA}\n                                            typeB={props.clonePair.typeB} />\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                        <Grid container justify=\"flex-end\">\n                                            {/*<Button onClick={e => onClick(e)}>Solve</Button>*/}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Paper className={classes.paper}>\n                                            <div>\n\n                                                {/* LINKS */}\n\n\n                                                <Grid container spacing={3}>\n                                                    <Grid item xs={6}>\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"simple table\">\n                                                                <TableBody>\n                                                                    <TableRow key={1}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Controller\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            <CloneLink link={props.clonePair.a.msController.msId.path} heading={\"p\"}/> <span>({props.clonePair.a.msControllerMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.a.msService &&\n                                                                    <TableRow key={2}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Service\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msService && <CloneLink link={props.clonePair.a.msService.msId.path} heading={\"p\"}/>} <span>({props.clonePair.a.msServiceMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    }\n\n                                                                    {props.clonePair.a.msRepository && props.clonePair.a.msRepositoryMethod &&\n                                                                    <TableRow key={2}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Repository\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msRepository && <CloneLink link={props.clonePair.a.msRepository.msId.path} heading={\"p\"}/>} <span>({props.clonePair.a.msRepositoryMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    }\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                    </Grid>\n\n                                                    <Grid item xs={6}>\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"simple table\">\n                                                                <TableBody>\n                                                                    <TableRow key={1}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Controller\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            <CloneLink link={props.clonePair.b.msController.msId.path} heading={\"p\"}/> <span>({props.clonePair.b.msControllerMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.b.msService &&\n                                                                    <TableRow key={2}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Service\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msService && <CloneLink link={props.clonePair.b.msService.msId.path} heading={\"p\"}/>} <span>({props.clonePair.b.msServiceMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    }\n\n                                                                    {props.clonePair.b.msRepository && props.clonePair.b.msRepositoryMethod &&\n                                                                    <TableRow key={2}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Repository\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msRepository && <CloneLink link={props.clonePair.b.msRepository.msId.path} heading={\"p\"}/>} <span>({props.clonePair.b.msRepositoryMethod.line})</span>\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    }\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                    </Grid>\n\n                                                </Grid>\n\n\n                                                {/* CONTROLLER */}\n\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={6}>\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Controller\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msControllerMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msController.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msControllerMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.a.msControllerMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n                                                                    {props.clonePair.a.msControllerMethod.msAnnotations.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Annotation\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                @{n.annotationName}({n.key}={n.value})\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n\n\n                                                        {props.clonePair.a.msControllerMethod && props.clonePair.a.msControllerMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.a.msControllerMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n\n                                                        }\n                                                    </Grid>\n\n                                                    <Grid item xs={6}>\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Controller\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msControllerMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msController.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msControllerMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.b.msControllerMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n                                                                    {props.clonePair.b.msControllerMethod.msAnnotations.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Annotation\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                @{n.annotationName}({n.key}={n.value})\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n\n                                                        {props.clonePair.b.msControllerMethod && props.clonePair.b.msControllerMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.b.msControllerMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n                                                        }\n                                                    </Grid>\n                                                </Grid>\n\n\n                                                {/* SERVICE */}\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={6}>\n                                                        {props.clonePair.a.msServiceMethod &&\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Service\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msServiceMethod && props.clonePair.a.msService.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n\n                                                                    {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.msAnnotations.map((n) => {\n                                                                        let isKey = n.key ? true : false;\n                                                                        return (\n                                                                            <TableRow key={102}>\n                                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                                    {\"Annotation\"}\n                                                                                </TableCell>\n                                                                                {isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}({n.key}={n.value})\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                                {!isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                            </TableRow>\n                                                                        )\n                                                                    })}\n\n\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                        }\n                                                        {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.a.msServiceMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n                                                        }\n                                                    </Grid>\n\n                                                    <Grid item xs={6}>\n                                                        {props.clonePair.b.msServiceMethod &&\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Service\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msServiceMethod && props.clonePair.b.msService.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n\n                                                                    {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.msAnnotations.map((n) => {\n                                                                        let isKey = n.key ? true : false;\n                                                                        return (\n                                                                            <TableRow key={102}>\n                                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                                    {\"Annotation\"}\n                                                                                </TableCell>\n                                                                                {isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}({n.key}={n.value})\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                                {!isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                            </TableRow>\n                                                                        )\n                                                                    })}\n\n\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                        }\n                                                        {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.b.msServiceMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n                                                        }\n                                                    </Grid>\n                                                </Grid>\n\n                                                {/* REPOSITORY */}\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={6}>\n                                                        {props.clonePair.a.msRepositoryMethod &&\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Repository\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msRepositoryMethod && props.clonePair.a.msRepositoryMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msRepositoryMethod && props.clonePair.a.msRepositoryMethod.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.a.msRepositoryMethod && props.clonePair.a.msRepositoryMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.a.msRepositoryMethod && props.clonePair.a.msRepositoryMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n\n                                                                    {props.clonePair.a.msServiceMethod && props.clonePair.a.msServiceMethod.msAnnotations.map((n) => {\n                                                                        let isKey = n.key ? true : false;\n                                                                        return (\n                                                                            <TableRow key={102}>\n                                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                                    {\"Annotation\"}\n                                                                                </TableCell>\n                                                                                {isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}({n.key}={n.value})\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                                {!isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                            </TableRow>\n                                                                        )\n                                                                    })}\n\n\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                        }\n\n                                                        {props.clonePair.a.msRepositoryMethod && props.clonePair.a.msRepositoryMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.a.msRepositoryMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n                                                        }\n                                                    </Grid>\n\n                                                    <Grid item xs={6}>\n                                                        {props.clonePair.b.msRepositoryMethod &&\n                                                        <TableContainer component={Paper} className={classes.paper}>\n                                                            <Table aria-label=\"properties table\">\n                                                                <TableBody>\n                                                                    <TableRow key={99}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            <b>{\"Repository\"}</b>\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={100}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Return Type\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msRepositoryMethod && props.clonePair.b.msRepositoryMethod.returnType}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    <TableRow key={101}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Class Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msRepositoryMethod && props.clonePair.b.msRepositoryMethod.className}\n                                                                        </TableCell>\n                                                                    </TableRow>\n\n                                                                    <TableRow key={102}>\n                                                                        <TableCell component=\"th\" scope=\"row\">\n                                                                            {\"Method Name\"}\n                                                                        </TableCell>\n                                                                        <TableCell align=\"left\">\n                                                                            {props.clonePair.b.msRepositoryMethod && props.clonePair.b.msRepositoryMethod.methodName}\n                                                                        </TableCell>\n                                                                    </TableRow>\n                                                                    {props.clonePair.b.msRepositoryMethod && props.clonePair.b.msRepositoryMethod.msArgumentList.map((n) => (\n                                                                        <TableRow key={102}>\n                                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                                {\"Argument\"}\n                                                                            </TableCell>\n                                                                            <TableCell align=\"left\">\n                                                                                {n.returnType}\n                                                                            </TableCell>\n                                                                        </TableRow>\n                                                                    ))}\n\n                                                                    {props.clonePair.b.msServiceMethod && props.clonePair.b.msServiceMethod.msAnnotations.map((n) => {\n                                                                        let isKey = n.key ? true : false;\n                                                                        return (\n                                                                            <TableRow key={102}>\n                                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                                    {\"Annotation\"}\n                                                                                </TableCell>\n                                                                                {isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}({n.key}={n.value})\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                                {!isKey && (\n                                                                                    <TableCell align=\"left\">\n                                                                                        @{n.annotationName}\n                                                                                    </TableCell>\n                                                                                )}\n\n                                                                            </TableRow>\n                                                                        )\n                                                                    })}\n\n\n                                                                </TableBody>\n                                                            </Table>\n                                                        </TableContainer>\n                                                        }\n\n                                                        {props.clonePair.b.msRepositoryMethod && props.clonePair.b.msRepositoryMethod.code &&\n                                                        <Box mt={2}>\n                                                            <CodeSnippet code={props.clonePair.b.msRepositoryMethod.code} language={'java'} showLineNumbers={false} />\n                                                        </Box>\n                                                        }\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                    </Paper>\n                </div>\n            </Card>\n        </div>\n    );\n}\nexport default ClonePairMain;","import React from \"react\";\nimport ClonePair from \"./ClonePair\";\nimport PrettyPrintJson from \"../../utils/PrettyPrintJson\";\nimport ClonePairMain from \"./ClonePairMain\";\n\ntype Props = {\n    cloneList: any;\n}\n\nconst CodeCloneList = (props: Props) => {\n\n    return (\n        <div>\n            {props.cloneList !== undefined && props.cloneList.map((n) => (\n                    <div>\n                        {/*<ClonePair clonePair={n}/>*/}\n                        <ClonePairMain clonePair={n}/>\n                    </div>\n                )\n            )}\n        </div>\n    );\n}\nexport default CodeCloneList;","import React from \"react\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {Accordion, AccordionDetails, AccordionSummary, Typography} from \"@material-ui/core\";\nimport CodeSnippet from \"./CodeSnippet\";\n\nconst CodeAccordion = (code) => {\n\n    const [value, setValue] = React.useState(true);\n\n    return (\n        <React.Fragment>\n            <>\n                <Accordion expanded={value}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        onClick={ (e) => {\n                            e.preventDefault();\n                            setValue((state) => {\n                                return !state;\n                            });\n                        }}\n                    >\n                        <Typography>Entity Code</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <CodeSnippet code={code.code} language={'java'} showLineNumbers={false} />\n                    </AccordionDetails>\n                </Accordion>\n            </>\n        </React.Fragment>\n    )\n}\nexport default CodeAccordion;","import React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from \"@material-ui/core\";\n\nconst AnnotationFieldTable = (entity) => {\n\n    return (\n        <React.Fragment>\n            <div>\n                <Typography variant=\"h6\" gutterBottom>\n                    Missing Field Annotations\n                </Typography>\n                <TableContainer component={Paper}>\n                    <Table aria-label={entity.entity.code}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell><Box fontWeight=\"fontWeightBold\">Annotation</Box></TableCell>\n                                <TableCell align=\"left\"><Box fontWeight=\"fontWeightBold\">Field</Box></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {entity.entity.fields && entity.entity.fields.map((field) => (\n                                <React.Fragment>\n                                    {field && field.missingAnnotations.map((annotation) => (\n                                        <TableRow key={annotation}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {annotation}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{field.code}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </React.Fragment>\n    )\n}\nexport default AnnotationFieldTable;","import React from \"react\";\nimport {Typography} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Box from \"@material-ui/core/Box\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\n\nconst FieldTable = (missingFields) => {\n\n    return (\n        <React.Fragment>\n\n            { (missingFields.missingFields.length !== 0) &&\n                <div>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Missing Fields\n                    </Typography>\n                    <TableContainer component={Paper}>\n                        <Table aria-label={\"missing entity fields\"}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell><Box fontWeight=\"fontWeightBold\">Annotations</Box></TableCell>\n                                    <TableCell><Box fontWeight=\"fontWeightBold\">Type</Box></TableCell>\n                                    <TableCell align=\"left\"><Box fontWeight=\"fontWeightBold\">Name</Box></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {missingFields.missingFields && missingFields.missingFields.map((field) => (\n                                    <React.Fragment>\n                                        <TableRow key={field.name}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {field.annotationsHashSet && field.annotationsHashSet.map((annotation) => (\n                                                    <p>{annotation} </p>\n                                                ))}\n                                            </TableCell>\n                                            <TableCell scope=\"row\">\n                                                {field.type}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{field.name}</TableCell>\n                                        </TableRow>\n\n                                    </React.Fragment>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            }\n\n\n        </React.Fragment>\n    )\n}\nexport default FieldTable;","import React from \"react\";\nimport CloneLink from \"../clones/CloneLink\";\nimport CodeAccordion from \"../../utils/CodeAccordion\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnnotationFieldTable from \"./AnnotationFieldTable\";\nimport {Box, Paper} from \"@material-ui/core\";\nimport prophetStyles from \"../../../prophetStyles\";\nimport FieldTable from \"./FieldTable\";\n\nconst Entity = ({entity}) => {\n    const classes = prophetStyles();\n\n    return (\n        <React.Fragment>\n\n            {entity.hasMissingFiledAnnotations &&\n                <Grid item xs={6}>\n                    <Paper className={classes.entity_item}>\n                        <CloneLink link={entity.path} heading={\"h5\"}/>\n                        {entity.missingFields &&\n                            <Box mb={3}>\n                                <FieldTable missingFields={entity.missingFields} />\n                            </Box>\n                        }\n\n                        {/*{ */}\n                        {/*    entity && entity.entity && entity.entity.fields &&*/}\n                            <Box mb={3}>\n                                <AnnotationFieldTable entity={entity} />\n                            </Box>\n\n                        {/*}*/}\n                        <CodeAccordion code={entity.code} />\n                    </Paper>\n\n                </Grid>\n            }\n\n            {!entity.hasMissingFiledAnnotations && entity.document == \"Document\" &&\n                <Grid item xs={6}>\n                    <Paper className={classes.entity_item}>\n                        <CloneLink link={entity.path} heading={\"h5\"}/>\n                        <CodeAccordion code={entity.code} />\n                    </Paper>\n                </Grid>\n            }\n\n\n\n        </React.Fragment>\n    )\n}\nexport default Entity;","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Entity from \"./Entity\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst EntityCluster = ({entityCluster}) => {\n    return (\n        <React.Fragment>\n\n            <Typography variant=\"h4\" gutterBottom>\n                {entityCluster.name}\n            </Typography>\n\n            <Grid container spacing={3}>\n                {entityCluster && entityCluster.msEntities.map((n) => (\n                    <Entity entity={n} />\n                ))}\n            </Grid>\n\n        </React.Fragment>\n    )\n}\nexport default EntityCluster;","import React from \"react\";\nimport EntityCluster from \"./EntityCluster\";\nimport Paper from \"@material-ui/core/Paper\";\nimport prophetStyles from \"../../../prophetStyles\";\n\nconst InconsistencyList = ({inconsistencyList}) => {\n    const classes = prophetStyles();\n    return (\n        <React.Fragment>\n            {inconsistencyList && inconsistencyList.map((n) => (\n                <>\n                    { (n.hasMissingFiledAnnotations || n.hasMissingField) &&\n                    <>\n                        <div className={classes.boxes_root}>\n                            <Paper className={classes.boxes_paper}>\n                                <EntityCluster entityCluster={n}/>\n                            </Paper>\n                        </div>\n                    </>\n                    }\n                </>\n            ))}\n        </React.Fragment>\n    )\n}\nexport default InconsistencyList;","import {useGlobalState} from \"../../../state/appState\";\nimport CodeCloneList from \"../clones/CodeCloneList\";\nimport React from \"react\";\nimport InconsistencyList from \"../inconsistencies/InconsistencyList\";\nimport {AppBar, Box, Card, CardContent, Paper, Tab, Tabs, TextField, Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            // color: theme.palette.text.secondary,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(2, 0, 2),\n            backgroundColor: theme.palette.background.default\n        }\n    }),\n);\n\nconst isInconsistencyEmpty = (data) => {\n    let flag = true;\n    if (data === null || data === undefined) {\n        return true;\n    }\n    data.forEach(function(entry) {\n        // console.log(entry);\n        entry.msEntities.forEach(function(entry2) {\n\n            if (entry2.hasMissingFiledAnnotations) {\n                flag = false;\n            }\n\n            if (entry2.hasMissingField) {\n                flag = false;\n            }\n        });\n    });\n    console.log(\"Flag: \" + flag);\n    return flag;\n}\n\nconst AppData = () => {\n    const classes = useStyles();\n    const [analyzedData, setAnalyzedData] = useGlobalState('analyzedData');\n    const [value, setValue] = React.useState(0);\n\n    const isEmpty = isInconsistencyEmpty(analyzedData.inconsistencies);\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            {(analyzedData.inconsistencies || analyzedData.typeA || analyzedData.typeB) && (\n                <div>\n                    <Paper className={classes.paper}>\n                        <Card style={{marginBottom: '20px'}} >\n                            <CardContent>\n                                <Box m={1}>\n                                    <div className={classes.content}>\n                                        <AppBar position=\"static\">\n                                            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                                                <Tab label=\"Inconsistencies\" {...a11yProps(0)} />\n                                                <Tab label=\"Code Clones\" {...a11yProps(1)} />\n                                            </Tabs>\n                                        </AppBar>\n                                        <TabPanel value={value} index={0}>\n                                            { !isEmpty && <InconsistencyList inconsistencyList={analyzedData.inconsistencies} /> }\n                                            { isEmpty && <div>{'No inconsistencies found' }</div> }\n\n                                        </TabPanel>\n                                        <TabPanel value={value} index={1}>\n                                            <CodeCloneList cloneList={analyzedData.typeA} />\n                                            <CodeCloneList cloneList={analyzedData.typeB} />\n                                        </TabPanel>\n                                    </div>\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Paper>\n                </div>\n            )}\n        </div>\n    )\n}\nexport default AppData;","import React, { useEffect } from 'react';\nimport { dispatch, useGlobalState } from './appState';\n\nconst EffectsRegister = () => {\n    const [global] = useGlobalState('global');\n    useEffect(\n        () => {\n\n\n        },\n        [global],\n    );\n\n    return(\n        <></>\n    );\n}\n\nexport default EffectsRegister;\n\n\n","import React from \"react\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {useGlobalState} from \"../state/appState\";\nimport prophetStyles from \"../prophetStyles\";\n\n\nconst LoadingIndicator = () => {\n\n    const [loading] = useGlobalState('loading');\n    const classes = prophetStyles();\n\n    return (\n        <React.Fragment>\n            {loading && <LoadingOverlay\n                active={loading}\n                spinner\n                className={classes.overlay}\n                text='Loading data'>\n                <p>\n\n                </p>\n            </LoadingOverlay> }\n        </React.Fragment>\n    )\n}\n\nexport default LoadingIndicator;\n","import React, {useEffect} from \"react\";\nimport prophetStyles from \"../../../prophetStyles\";\nimport AppSetup from \"./AppSetup\";\nimport AppData from \"./AppData\";\nimport EffectsRegister from \"../../../state/EffectsRegister\";\nimport LoadingIndicator from \"../../../shared/LoadingIndicator\";\n\nconst ProphetApp = () => {\n    const classes = prophetStyles();\n    return (\n        <div>\n            <div className={classes.content}>\n                <EffectsRegister/>\n                <LoadingIndicator/>\n                <AppSetup></AppSetup>\n                <AppData></AppData>\n            </div>\n        </div>\n    )\n}\nexport default ProphetApp;","import * as React from 'react';\n// import './App.css';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\nimport {withRoot} from \"./withRoot\";\nimport { createBrowserHistory } from 'history';\n// theme\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport prophetTheme from \"./prophetTheme\";\nimport prophetStyles from \"./prophetStyles\";\n// material ui\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// components\nimport AppHeader from \"./components/main/AppHeader\";\nimport ProphetApp from './cc/components/main/ProphetApp';\n\nconst App = () => {\n    const classes = prophetStyles();\n    const history = createBrowserHistory();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppHeader/>\n            <ThemeProvider theme={prophetTheme}>\n                <Router history={history} basename={\"/\"} >\n                    <Switch>\n                        <Route exact path=\"/\" component={ProphetApp} />\n                    </Switch>\n                </Router>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default withRoot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}